
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 1
"mfmmacro"   SERLIB.SRC

Error Addr  Code          Seq   Source statement

                            1   	.nam  1581 DOS v10  318045-01  (c)1987 CBM
                            2   
                            3   ;**********************************************
                            4   ; 318045-01 ROM    03/20/87   F.BOWEN    $8E8B
                            5   ;**********************************************
                            6   
                            7   	.INCLUDE mfmmacro
                            8   	.messg "mfmmacro"
                            9   	.subttl "mfmmacro"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 2
"mfmmacro"   MFMMACRO.SRC

Error Addr  Code          Seq   Source statement

                           11   WDTEST	.macro
                           12   	.ife <*!.$03
                           13   	nop
                           14   	.endif
                           15   	.endm
                           16   	.INCLUDE common
                           17   	.messg "common"
                           18   	.subttl "common"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 3
"common"   COMMON.SRC

Error Addr  Code          Seq   Source statement

                           20   ;**********************************************
                           21   ;*                                            *
                           22   ;*   COMMODORE BUSINESS MACHINES SOFTWARE     *
                           23   ;*                                            *
                           24   ;**********************************************
                           25   ;
                           26   ;        11   55555555  888888888      11
                           27   ;   	  1   5         8       8       1
                           28   ;   	  1   5555555    8888888        1
                           29   ;	  1          5  8       8       1
                           30   ;        111  5555555   888888888      111
                           31   ;
                           32   ;**********************************************
                           33   ;*   THE INFORMATION IN THIS DOCUMENT IS      *
                           34   ;*   SUBJECT TO CHANGE WITHOUT NOTICE.        *
                           35   ;*                                            *
                           36   ;*   NO RESPONSIBILITY IS ASSUMED FOR         *
                           37   ;*   RELIABILITY OF THIS SOFTWARE.            *
                           38   ;*                                            *
                           39   ;**********************************************
                           40   	.INCLUDE equate
                           41           .messg "equate"
                           42           .subttl "equate"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 4
"equate"   EQUATE.SRC

Error Addr  Code          Seq   Source statement

                           44   ; Equates
            =0001          45   bit0	  = 1
            =0002          46   bit1	  = 2
            =0004          47   bit2	  = 4
            =0008          48   bit3	  = 8
            =0010          49   bit4	  = 16
            =0020          50   bit5	  = 32
            =0040          51   bit6	  = 64
            =0080          52   bit7	  = 128
            =00FF          53   all	  = 255
                           54   
            =0300          55   buff0    =$0300 ; buffers
            =0400          56   buff1    =$0400
            =0500          57   buff2    =$0500
            =0600          58   buff3    =$0600
            =0700          59   buff4    =$0700
            =0800          60   buff5    =$0800
            =0900          61   buff6    =$0900
            =0A00          62   bam1     =$0a00 ; trk 1-40
            =0B00          63   bam2     =$0b00 ; trk 41-80
            =0C00          64   buffcache=$0c00 ; 20 pages for track cache
            =0020          65   cache_high=$20
                           66   
            =0024          67   skip1    =$24   ; bit zp
            =002C          68   skip2    =$2c   ; bit abs
            =0008          69   numjob   =8     ; number of jobs
            =0006          70   notfnd   =6
            =0080          71   lrf      =$80   ; last record flag
            =0040          72   dyfile   =$40   ; dirty flag for rr file
            =0020          73   ovrflo   =$20   ; rr print overflow
            =0006          74   nssl     =6     ; # of side-sector links
            =0028          75   systrack =40	; system track
            =0003          76   sysdirsec=3	; system directory sector
            =0002          77   sysiz    =2	; default sector size
            =00C0          78   sysiob   =$c0	; iobyte default
            =008F          79   dtos     =$8f	; default top of stack
            =0002          80   zpvar	 =2	; zp start
                           81   
                           82   ; offset into ss for dat blk ptrs
            =0010          83   ssioff   =4+nssl+nssl
                           84   
            =0078          85   nssp     =120   ; # of ptrs in ss
            =0007          86   mxchns   =7     ; max # channels in system
            =0012          87   maxsa    =18    ; max sa # +1
            =000D          88   cr       =13    ; carriage return
            =0010          89   bindx    =16    ; bam offset index
            =0007          90   bfcnt    =7     ; available  buffer count
                           91   
                           92   ; command buffer ptr
            =0012          93   cbptr    =bfcnt+bfcnt+4
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 4-1
"equate"   EQUATE.SRC

Error Addr  Code          Seq   Source statement

                           94   
                           95   ; error channel #
            =0006          96   errchn   =mxchns-1
                           97   
            =0010          98   errsa    =16    ; error channel sa #
                           99   
                          100   ; command channel #
            =0005         101   cmdchn   =mxchns-2
                          102   
                          103   ; pwr up linuse (logical index usage)
            =001F         104   lxint    =%00011111
                          105   
            =000F         106   cmdsa    =15    ; command channel sa #
            =0002         107   apmode   =2     ; open append mode
            =0003         108   mdmode   =3     ; open modify mode
            =0001         109   wtmode   =1     ; open write mode
            =0004         110   reltyp   =4     ; open relative type
            =0007         111   dirtyp   =7     ; open direct type
            =0005         112   partyp   =5     ; open partition type
            =0001         113   seqtyp   =1     ; open sequential type
            =0002         114   prgtyp   =2     ; open program type
            =0003         115   usrtyp   =3     ; open user type
            =0007         116   typmsk   =7     ; mask for type bits
            =0011         117   irsa     =17    ; internal read sa #
            =0012         118   iwsa     =18    ; internal write sa #
                          119   
                          120   ; controller jobs
                          121   
                          122   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            =0080         123   read_dv	 =$80	; Read into track cache buffer.
                          124   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                          125   
            =0082         126   reset_dv =$82	; Reset disk controller.
            =0084         127   moton_dv =$84	; Turn on spindle motor with spinup sequence.
            =0086         128   motoff_dv=$86	; Turn off spindle motor with spin down sequence.
            =0088         129   motoni_dv=$88	; Turn on spindle motor.
            =008A         130   motoffi_dv=$8a	; Turn off spindle motor.
            =008C         131   seek_dv	 =$8c	; Move head to a specific cylinder.
            =008E         132   format_dv=$8e	; Format one cylinder side.
                          133   
                          134   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            =0090         135   wrtsd_dv =$90	; Write out track cache buffer.
                          136   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                          137   
            =0092         138   diskin_dv=$92	; Determine whether there is a disk present in the drive.
            =0094         139   ledacton_dv=$94 ; Will turn on the activity led.
                          140   		; Will turn off the activity led.
            =0096         141   ledactoff_dv=$96
            =0098         142   errledon_dv=$98 ; Will enable error led blinking.
                          143   		; Will disable error led blinking.
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 4-2
"equate"   EQUATE.SRC

Error Addr  Code          Seq   Source statement

            =009A         144   errledoff_dv=$9a
            =009C         145   side_dv=$9c	; Will select side.
            =009E         146   bufmove_dv=$9e	; Will move data from/to a specific area
                          147   		; in the track cache buffer.
                          148   
                          149   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            =00A0         150   wrtver_dv=$a0	; Track cache verify write.
                          151   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                          152   
            =00A2         153   trkwrt_dv=$a2	; Will dump track cache buffer to disk.
            =00A4         154   pread_dv=$a4    ; Read sector notranslation.
            =00A6         155   pwrt_dv=$a6	; Write sector notranslation.
            =00A8         156   pseek_dv=$a8	; Move head to a specific logical cylinder.
            =00AA         157   tread_dv=$aa    ; Read sector notrx.
            =00AC         158   twrt_dv=$ac	; Write sector notrx.
                          159   
                          160   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            =00B0         161   seekhd_dv=$b0	; Seek any header.
                          162   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                          163   
            =00B2         164   tpread_dv=$b2	; Read sector notranslation, notrx.
            =00B4         165   tpwrt_dv=$b4	; Write sector notranslation, notrx.
            =00B6         166   detwp_dv=$b6	; Check write protect status
                          167   
                          168   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            =00B8         169   seekphd_dv=$b8	; Sector seek a particular header.
            =00C0         170   restore_dv=$c0	; Restore head against track zero stop.
            =00D0         171   jumpc_dv =$d0	; Execute buffer.
            =00E0         172   exbuf_dv =$e0	; Execute buffer after motor is up to
                          173   		; speed and on track.
                          174   ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                          175   
            =00F0         176   formatdk_dv=$f0	; Format diskette.
                          177   
            =002B         178   precmptrk=43	; precompensation starts at track 43
            =0005         179   mxfils   =5     ; max # filenames in string
            =0018         180   dirlen   =24    ; directory length used
            =001B         181   nbsiz    =27    ; nambuf text size
            =0029         182   cmdlen   =41    ; length of command buffer
                          183   
                          184   	.INCLUDE iodef
                          185           .messg "iodef"
                          186           .subttl "iodef"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 5
"iodef"   IODEF.SRC

Error Addr  Code          Seq   Source statement

                          188   ;i/o definitions
                          189   
            =003F         190   unlsn    =$3f   ; unlisten command
            =005F         191   untlk    =$5f   ; untalk command
            =0000         192   notrdy   =$0    ; not ready
            =0080         193   eoiout   =$80   ; talk with eoi
            =0008         194   eoi	 =$08	; eoi
            =0008         195   eoisnd   =$08   ; not(eoi) to send
            =0088         196   rdytlk   =$88   ; talk no eoi
            =0001         197   rdylst   =$1    ; ready to listen
                          198   
                          199   ; random chnrdy
            =0089         200   rndrdy   =rdytlk+rdylst
                          201   
                          202   ; random w/ eoi
            =0081         203   rndeoi   =eoiout+rdylst
                          204   
                          205   
                          206   
            =4000         207   *=$4000
                          208   ; 8520a CIA (Complex Interface Adaptor)
                          209   
     4000   =4001         210   pa	*=*+1          	; port a
            =0001         211   side_sel	=bit0	; out
            =0002         212   _drv_rdy	=bit1	; in
            =0004         213   mtr_on 		=bit2	; out
            =0008         214   dev_sel1	=bit3	; in
            =0010         215   dev_sel2	=bit4	; in
            =0020         216   pwr_led		=bit5	; out
            =0040         217   act_led		=bit6	; out
            =0080         218   disk_change	=bit7	; in
                          219   
            =0065         220   init_dd_pa	=%01100101
            =00FE         221   init_prt_pa	=%11111110
                          222   
     4001   =4002         223   pb	*=*+1		; port b
            =0001         224   datin		=bit0	; in
            =0002         225   datout		=bit1	; out
            =0004         226   clkin		=bit2	; in
            =0008         227   clkout		=bit3	; out
            =0010         228   atna		=bit4	; out
            =0020         229   fsdir		=bit5	; out
            =0040         230   wpin		=bit6	; out
            =0080         231   atnrd		=bit7	; in
                          232   
            =003A         233   init_dd_pb	=%00111010
            =00D5         234   init_prt_pb	=%11010101
                          235   
     4002   =4003         236   ddpa	*=*+1		; dd port a
     4003   =4004         237   ddpb	*=*+1		; dd port b
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 5-1
"iodef"   IODEF.SRC

Error Addr  Code          Seq   Source statement

     4004   =4005         238   tima_l	*=*+1		; timer a used for the baud rate generator
     4005   =4006         239   tima_h	*=*+1		; *
     4006   =4007         240   timb_l	*=*+1		; timer b used for controller irqs
     4007   =4008         241   timb_h	*=*+1		; *
                          242   
     4008   =4009         243   todlsb	*=*+1		; event lsb, used for disk change detector
     4009   =400A         244   tod8_15 *=*+1		; event 8-15
     400A   =400B         245   todmsb	*=*+1		; event msb
            =400C         246   	*=*+1		; unused
     400C   =400D         247   sdr	*=*+1		; serial data register
     400D   =400E         248   icr     *=*+1		; interrupt control register
     400E   =400F         249   cra	*=*+1		; control register a
     400F   =4010         250   crb	*=*+1		; control register b
                          251   
            =6000         252   *=$6000
                          253   ; WD177X MFM Disk Controller Chip
                          254   
     6000                 255   wdcmd
     6000   =6001         256   wdstat	*=*+1		; command and status register
     6001   =6002         257   wdtrk   *=*+1		; dd port a
     6002   =6003         258   wdsec	*=*+1		; sector register
     6003   =6004         259   wddat	*=*+1		; data register
                          260   	.INCLUDE ram
                          261   	.messg "ram"
                          262   	.subttl "ram"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 6
"ram"   RAM.SRC

Error Addr  Code          Seq   Source statement

            =0002         264   *=$0002                 ; zero page
     0002   =000B         265   jobs     *=*+9          ; job que=8 last 2 for bams
     000B   =001D         266   hdrs     *=*+18         ; job headers
     001D   =001F         267   dskid    *=*+2          ; master copy of disk id
     001F   =0025         268   header   *=*+6          ; image of last header
     0025   =0026         269   wpsw     *=*+1          ; write protect change flag
     0026   =0027         270   drvst    *=*+1          ; lcc var's
                          271   			; bits 7 6 5 4  3 2 1 0
                          272   			;
                          273   			;         -- timeout
                          274   			;        ---- running
                          275   			;       ------ stepping
                          276   			;      -------- accelerating
                          277   			;
                          278   			;ie:
                          279   			;       $00 = no drive active
                          280   			;       $20 = running
                          281   			;       $30 = running and timeout
                          282   			;       $50 = stepping and running
                          283   			;       $80 = accelerating
                          284   
     0027   =0028         285   drvtrk   *=*+1
     0028   =0029         286   cmd      *=*+1          ; temp job command
     0029   =002A         287   cmdsiz   *=*+1          ; command string size
     002A   =002C         288   acltim   *=*+2          ; acceleration/decceleration time delay
     002C   =002D         289   savsp    *=*+1          ; save stack pointer
     002D   =002E         290   autofg   *=*+1          ; auto init flag
     002E   =002F         291   secinc   *=*+1          ; sector inc for seq
     002F   =0030         292   ftnum    *=*+1
     0030   =0031         293   revcnt   *=*+1          ; error recovery count
     0031   =0033         294   bmpnt    *=*+2          ; bit map pointer
     0033   =0035         295   usrjmp   *=*+2          ; user jmp table ptr
     0035   =0036         296   wbam     *=*+1          ; bam status (0=clean)
     0036   =0038         297   ctmp     *=*+2          ; temps
     0038   =003F         298   tmp      *=*+7
     003F   =0040         299   tmpjbn   *=*+1
     0040   =0046         300   temp     *=*+6          ; work space
            =0040         301   t0       =temp
            =0041         302   t1       =temp+1
            =0042         303   t2       =temp+2
            =0043         304   t3       =temp+3
            =0044         305   t4       =temp+4
     0046   =004C         306   ip       *=*+6          ; indirect ptr variable
     004C   =004D         307   prgtrk   *=*+1          ; last prog accessed
     004D   =004E         308   track    *=*+1          ; current track
     004E   =004F         309   sector   *=*+1          ; current sector
     004F   =0050         310   tos      *=*+1          ; top of stack (def: -1-7fh)
     0050   =0051         311   lindx    *=*+1          ; logical index
     0051   =0052         312   eoiflg   *=*+1          ; temp eoi
     0052   =0053         313   sa       *=*+1          ; secondary address
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 6-1
"ram"   RAM.SRC

Error Addr  Code          Seq   Source statement

     0053   =0054         314   orgsa    *=*+1          ; original sa
     0054   =0055         315   data     *=*+1          ; temp data byte
     0055   =0056         316   r0       *=*+1
     0056   =0057         317   r1       *=*+1
     0057   =0058         318   r2       *=*+1
     0058   =0059         319   r3       *=*+1
     0059   =005A         320   r4       *=*+1
     005A   =005B         321   r5       *=*+1
     005B   =005F         322   result   *=*+4
     005F   =0064         323   accum    *=*+5
     0064   =0066         324   dirbuf   *=*+2
     0066   =0067         325   cont     *=*+1          ; bit counter for ser
     0067   =0068         326   f1ptr    *=*+1          ; file stream 1 pointer
     0068   =0069         327   recptr   *=*+1
     0069   =006A         328   ssnum    *=*+1
     006A   =006B         329   ssind    *=*+1
     006B   =006C         330   relptr   *=*+1
     006C   =006D         331   jobnum   *=*+1          ; current job #
     006D   =006E         332   bufuse   *=*+1          ; buffer allocation
     006E   =006F         333   nodrv    *=*+1          ; no drive flag
     006F   =0070         334   dskver   *=*+1          ; disk version
     0070   =0071         335   linuse   *=*+1          ; lindx use word
     0071   =0072         336   dirsec   *=*+1          ; directory sector
     0072   =0073         337   delsec   *=*+1          ; sector of 1st avail entry
     0073   =0074         338   delind   *=*+1          ; index "
     0074   =0075         339   lbused   *=*+1          ; last buffer used
     0075   =0076         340   numsec   *=*+1          ; number of sectors logical
     0076   =0077         341   fsflag   *=*+1          ; fast serial flag
                          342   			; bits 7 6 5 4  3 2 1 0
                          343   			;              - atn pending
                          344   			;             --- atn mode
                          345   			;            ----- clkin status
                          346   			;           ------- fast serial lock
                          347   			;         ---------- slow flag
                          348   			;        ------------ fast serial flag
                          349   			;       -------------- listen flag
                          350   			;      ---------------- talk flag
                          351   			;
                          352   			;
     0077   =0078         353   lsnadr   *=*+1          ; listen address
     0078   =0079         354   tlkadr   *=*+1          ; talker address
     0079   =007A         355   ledprint *=*+1          ; led var
                          356   			; bits 7 6 5 4  3 2 1 0
                          357   			;
                          358   			;          -- blink power led
                          359   			;        ----- activity led
                          360   			;
     007A   =007B         361   tempsa   *=*+1          ; temporary sa
     007B   =007C         362   cmdwat   *=*+1          ; command waiting flag
     007C   =007D         363   switch   *=*+1          ; burst command switch
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 6-2
"ram"   RAM.SRC

Error Addr  Code          Seq   Source statement

     007D                 364   controller_stat         ; controller status
            =007E         365   	 *=*+1
     007E   =0080         366   bufpnt   *=*+2          ; buffer pointer
     0080   =0081         367   dkmode   *=*+1          ; burst status
     0081   =0082         368   xjobrtn  *=*+1          ;
     0082   =0083         369   yreg     *=*+1          ; yreg
     0083   =0084         370   nextjob  *=*+1          ; controller nextjob
     0084   =0085         371   cindex   *=*+1          ; controller job index
     0085   =0087         372   info     *=*+2          ; controller job information variable
     0087   =0088         373   dirty    *=*+1          ; track cache dirty flag
     0088   =0089         374   cmdtrk   *=*+1          ; controller destination track
     0089                 375   dkandmask
            =008A         376   	 *=*+1          ; burst status mask
     008A                 377   dkoramask
            =008B         378   	 *=*+1          ; burst status mask
     008B   =008D         379   cache    *=*+2          ; cache pointer
     008D   =008E         380   iobyte   *=*+1          ; verify / crc check
                          381   			; bits 7 6 5 4  3 2 1 0
                          382   			;        --- huge rel = 0
                          383   			;        ---- crc check = 1
                          384   			;      ------- verify = 1
                          385   			;
     008E   =008F         386   pstartrk *=*+1          ; physical starting track
     008F   =0090         387   pmaxtrk  *=*+1          ; "      " ending track
     0090   =0091         388   startrk  *=*+1          ; logical starting track
     0091                 389   psectorsiz
            =0092         390   	 *=*+1          ; physical sector size
     0092   =0093         391   pnumsec  *=*+1          ; physical number of sectors (side)
     0093   =0094         392   pendsec  *=*+1          ; physical ending sector
     0094                 393   pstartsec
            =0095         394   	 *=*+1          ; physical starting sector
     0095                 395   cachetrk
            =0096         396   	 *=*+1          ; current physical track cache
     0096                 397   tcacheside
            =0097         398   	 *=*+1          ; translated current track cache side
     0097                 399   cacheside
            =0098         400   	 *=*+1          ; current track cache side
     0098   =0099         401   setval   *=*+1          ; settling time value
     0099   =009A         402   hdrjob   *=*+1          ; shifted nextjob - hdr pointer
     009A   =009B         403   gap3     *=*+1          ; format gap
     009B   =009C         404   fillbyte *=*+1          ; format fill byte
     009C   =009D         405   sieeetim *=*+1          ; sieee timing
     009D   =009E         406   sieeeset *=*+1          ; sieee timing
     009E   =009F         407   blink    *=*+1          ; error blinking
     009F   =00A8         408   cacheoff *=*+9          ; translated track cache offset
                          409   
     00A8   =00BB         410   lintab   *=*+maxsa+1    ; sa:lindx table
     00BB   =00D1         411   buftab   *=*+cbptr+4    ; buffer byte pntrs
            =00CD         412   cb=buftab+cbptr
     00D1   =00D8         413   buf0     *=*+mxchns
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 6-3
"ram"   RAM.SRC

Error Addr  Code          Seq   Source statement

     00D8   =00DF         414   buf1     *=*+mxchns
     00DF   =00E5         415   lrutbl   *=*+mxchns-1   ; least recently used table
     00E5   =00EA         416   entsec   *=*+mxfils     ; sector of directory entry
     00EA   =00EF         417   entind   *=*+mxfils     ; index of directory entry
     00EF   =00F4         418   fildrv   *=*+mxfils     ; default flag, drive #
     00F4   =00F9         419   pattyp   *=*+mxfils     ; pattern,replace,closed-flags,type
     00F9   =0100         420   filtyp   *=*+mxchns     ; channel file type
                          421   
                          422   ; huge relfile stuff
     0100   =0101         423   grpnum   *=*+1          ; group number
     0101   =0102         424   relsw    *=*+1          ; huge relfile switch
                          425   			; bits 7 6 5 4  3 2 1 0
                          426   			;
                          427   			;           -- overflow = 1
                          428   			;          --- huge rel file = 0
                          429   
     0102   =0109         430   sssgrp   *=*+mxchns     ; super ss group
     0109   =0110         431   ssssec   *=*+mxchns     ; super ss sector
     0110   =0117         432   ssstrk   *=*+mxchns     ; super ss track
                          433   
            =0190         434   *=$190
     0190                 435   svects
     0190   =0192         436   vidle    *=*+2          ; indirect for idle
     0192   =0194         437   virq     *=*+2          ; indirect for irq
     0194   =0196         438   vnmi     *=*+2          ; indirect for nmi
     0196   =0198         439   vverdir  *=*+2          ; commands
     0198   =019A         440   vintdrv  *=*+2
     019A   =019C         441   vpart    *=*+2
     019C   =019E         442   vmem     *=*+2
     019E   =01A0         443   vblock   *=*+2
     01A0   =01A2         444   vuser    *=*+2
     01A2   =01A4         445   vrecord  *=*+2
     01A4   =01A6         446   vutlodr  *=*+2
     01A6   =01A8         447   vdskcpy  *=*+2
     01A8   =01AA         448   vrename  *=*+2
     01AA   =01AC         449   vscrtch  *=*+2
     01AC   =01AE         450   vnew     *=*+2
     01AE   =01B0         451   verror   *=*+2
     01B0   =01B2         452   vatnsrv  *=*+2
     01B2   =01B4         453   vtalk    *=*+2
     01B4   =01B6         454   vlisten  *=*+2
     01B6   =01B8         455   vlcc     *=*+2
     01B8                 456   vtrans_ts
            =01BA         457   	 *=*+2          ; track & sector translation
     01BA   =01BC         458   vcmder2  *=*+2          ; DOS command error
                          459   
     01BC   =01CE         460   hdrs2    *=*+18         ; translated job headers
     01CE   =01D7         461   sids     *=*+9          ; side select for physical
     01D7   =01D8         462   ctltimh  *=*+1          ; controller timer var
     01D8   =01D9         463   ctltiml  *=*+1          ; *
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 6-4
"ram"   RAM.SRC

Error Addr  Code          Seq   Source statement

     01D9   =01DA         464   motoracc *=*+1          ; acceleration startup
                          465   
                          466   			; controller commands
     01DA                 467   wdrestore
            =01DB         468   	 *=*+1          ; $08
     01DB   =01DC         469   wdseek   *=*+1          ; $18
     01DC   =01DD         470   wdstep   *=*+1          ; $28
     01DD                 471   wdstepin
            =01DE         472   	 *=*+1          ; $48
     01DE                 473   wdstepout
            =01DF         474   	 *=*+1          ; $68
     01DF                 475   wdreadsector
            =01E0         476   	 *=*+1          ; $88
     01E0                 477   wdwritesector
            =01E1         478   	 *=*+1          ; $aa
     01E1                 479   wdreadaddress
            =01E2         480   	 *=*+1          ; $c8
     01E2                 481   wdreadtrack
            =01E3         482   	 *=*+1          ; $e8
     01E3                 483   wdwritetrack
            =01E4         484   	 *=*+1          ; $fa
     01E4                 485   wdforceirq
            =01E5         486   	 *=*+1          ; $d0
                          487   
     01E5   =01E6         488   dirst    *=*+1          ; starting directory sector
     01E6   =01EA         489   savects  *=*+4          ; save area for vectors
     01EA                 490   burst_stat
            =01EB         491   	 *=*+1          ; burst controller status
     01EB   =01EC         492   vernum   *=*+1          ; DOS version number
     01EC   =01ED         493   dosver   *=*+1          ; & type
     01ED   =01EE         494   hi       *=*+1          ; high partition counter
     01EE   =01EF         495   lo       *=*+1          ; low "         "
     01EF   =01F0         496   minsek   *=*+1          ; burst min. sector #
     01F0   =01F1         497   maxsek   *=*+1          ; "  "  max. "    "
     01F1   =01FA         498   bufind   *=*+9          ; buffer indirects
     01FA   =01FB         499   wpstat   *=*+1          ; write protect status
     01FB   =01FC         500   dejavu   *=*+1          ; auto boot flag
                          501   			; bits 7 6 5 4  3 2 1 0
                          502   			;
                          503   			;        ---- boot on intdrv
                          504   			;      ------- boot on reset
     01FC   =01FF         505   jhandsk  *=*+3          ; handsk jmp
                          506   
            =0200         507   *=$200
     0200   =022A         508   cmdbuf   *=*+cmdlen+1   ; command buffer
     022A   =022B         509   cmdnum   *=*+1          ; command #
     022B   =022C         510   dirtrk   *=*+1          ; system track
     022C   =022D         511   maxtrk   *=*+1          ; max track + 1
     022D   =022E         512   type     *=*+1          ; active file type
     022E   =022F         513   f1cnt    *=*+1          ; file stream 1 count
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 6-5
"ram"   RAM.SRC

Error Addr  Code          Seq   Source statement

     022F   =0230         514   f2cnt    *=*+1          ; file stream 2 count
     0230   =0231         515   f2ptr    *=*+1          ; file stream 2 pointer
     0231   =0232         516   filcnt   *=*+1          ; counter, file entries
     0232   =0233         517   index    *=*+1          ; current index in buffer
     0233   =0234         518   typflg   *=*+1          ; match by type flag
     0234   =023B         519   chnrdy   *=*+mxchns     ; channel status
     023B   =0242         520   chndat   *=*+mxchns     ; channel data byte
     0242   =0249         521   lstchr   *=*+mxchns     ; channel last char ptr
     0249                 522   nbkl
     0249   =0250         523   recl     *=*+mxchns
     0250                 524   nbkh
     0250   =0257         525   rech     *=*+mxchns
     0257   =025E         526   nr       *=*+mxchns
     025E   =0265         527   rs       *=*+mxchns
     0265   =026C         528   ss       *=*+mxchns
     026C   =026D         529   strsiz   *=*+1
     026D   =026E         530   entfnd   *=*+1          ; dir-entry found flag
     026E   =026F         531   dirlst   *=*+1          ; dir listing flag
     026F   =0270         532   rec      *=*+1
     0270   =0271         533   trkss    *=*+1
     0271   =0272         534   secss    *=*+1
     0272   =027D         535   lstjob   *=*+bfcnt+4    ; last job
     027D   =0284         536   dsec     *=*+mxchns     ; sec of dir entry
     0284   =028B         537   dind     *=*+mxchns     ; index of dir entry
     028B   =028C         538   prgsec   *=*+1          ; last program sector
     028C   =028D         539   wlindx   *=*+1          ; write lindx
     028D   =028F         540   nbtemp   *=*+2          ; # blocks temp
     028F   =0290         541   char     *=*+1          ; char under parser
     0290   =0291         542   limit    *=*+1          ; ptr limit in compar
     0291   =0297         543   filtbl   *=*+mxfils+1   ; filename pointer
     0297   =029C         544   filtrk   *=*+mxfils     ; 1st link/track
     029C   =02A1         545   filsec   *=*+mxfils     ;    /sector
     02A1   =02A2         546   patflg   *=*+1          ; pattern presence flag
     02A2   =02A3         547   image    *=*+1          ; file stream image
     02A3   =02A4         548   drvcnt   *=*+1          ; number of drv searches
     02A4   =02A5         549   drvflg   *=*+1          ; drive search flag
     02A5   =02A6         550   found    *=*+1          ; found flag in dir searches
     02A6   =02A7         551   lstbuf   *=*+1          ; =0 if last block
     02A7   =02A8         552   mode     *=*+1          ; active file mode (r,w)
     02A8   =02A9         553   jobrtn   *=*+1          ; job return flag
     02A9   =02AA         554   ndbl     *=*+1          ; # of disk blocks free
     02AA   =02AB         555   ndbh     *=*+1
     02AB   =02AC         556   erword   *=*+1          ; error word for recovery
     02AC   =02D0         557   nambuf   *=*+36         ; directory buffer
     02D0   =02F4         558   errbuf   *=*+36         ; error msg buffer
                          559   	.INCLUDE dversion	;checksum, signature, & version bytes
                          560   	.messg "dversion"
                          561   	.subttl "dversion"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 7
"dversion"   DVERSION.SRC

Error Addr  Code          Seq   Source statement

                          563   
            =8000         564   	*=$8000         	; start of ROM  03/20/87  csum = $8E8B
                          565   
     8000                 566   signature_lo
     8000   4D            567   	.byte  $4d
     8001                 568   signature_hi
     8001   19            569   	.byte  $19
                          570   
     8002   CD            571   cchksm  .byte  $cd
                          572   
     8003                 573   dversion
     8003   01            574   	.byte  $01
                          575   
                          576   	.INCLUDE parsex
                          577   	.messg "parsex"
                          578   	.subttl "parsex"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 8
"parsex"   PARSEX.SRC

Error Addr  Code          Seq   Source statement

                          580   ;parse & execute string in cmdbuf
     8004   A9 00         581   parsxq  lda  #0
     8006   85 35         582   	sta  wbam
     8008   20 A862       583   	jsr  okerr
     800B   A5 53         584   	lda  orgsa
     800D   10 09         585   	bpl  ps05
                          586   
     800F   29 0F         587   	and  #$f
     8011   C9 0F         588   	cmp  #$f
     8013   F0 03         589   	beq  ps05
                          590   
     8015   4C 9678       591   	jmp  open
     8018   20 8165       592   ps05    jsr  cmdset     ; set variables,regs
     801B   B1 CD         593   	lda  (cb),y
     801D   8D 028F       594   	sta  char
U    8020   A2 00   "     595   	ldx  #ncmds-1   ; search cmd table
U    8022   BD 0000 "     596   ps10    lda  cmdtbl,x
     8025   CD 028F       597   	cmp  char
     8028   F0 08         598   	beq  ps20
                          599   
     802A   CA            600   	dex
     802B   10 F5         601   	bpl  ps10
                          602   
     802D   A9 31         603   bcerr   lda  #badcmd    ; no such cmd
     802F   4C 807C       604   	jmp  cmderr
                          605   
     8032   8E 022A       606   ps20    stx  cmdnum     ; x= cmd #
U    8035   E0 00   "     607   	cpx  #pcmd      ; cmds not parsed
     8037   90 03         608   	bcc  ps30
                          609   
     8039   20 80A2       610   	jsr  tagcmd     ; set tables, pointers &patterns
     803C   AE 022A       611   ps30    ldx  cmdnum
U    803F   BD 0000 "     612   	lda  cjumpl,x
     8042   85 40         613   	sta  temp
U    8044   BD 0000 "     614   	lda  cjumph,x
     8047   85 41         615   	sta  temp+1
     8049   6C 0040       616   	jmp  (temp)     ; command table jump
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 9
"parsex"   PARSEX.SRC

Error Addr  Code          Seq   Source statement

     804C   A9 00         618   endcmd  lda  #0
     804E   85 35         619   	sta  wbam
     8050   AD 02AB       620   endsav  lda  erword
     8053   F0 03         621   	beq  1$
                          622   
     8055   4C 807C       623   	jmp  cmderr
                          624   
     8058   A0 00         625   1$      ldy  #0
     805A   98            626   	tya
     805B   85 4D         627   	sta  track
     805D   84 4E         628   scrend  sty  sector     ; scratch entry
     805F   84 CD         629   partend sty  cb
     8061   20 A86D       630   	jsr  errmsg
     8064   20 81E5       631   	jsr  erroff
     8067   A9 00         632   scren1  lda  #0
     8069   85 6E         633   	sta  nodrv
     806B   20 8071       634   	jsr  clrcb
     806E   4C 9434       635   	jmp  freich     ; free internal channel
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 10
"parsex"   PARSEX.SRC

Error Addr  Code          Seq   Source statement

     8071   A0 28         637   clrcb   ldy  #cmdlen-1
     8073   A9 00         638   	lda  #0
     8075   99 0200       639   clrb2   sta  cmdbuf,y
     8078   88            640   	dey
     8079   10 FA         641   	bpl  clrb2
                          642   
     807B   60            643   	rts
                          644   
     807C   A0 00         645   cmderr  ldy  #0         ; cmd level err proc
     807E   84 4D         646   	sty  track
     8080   84 4E         647   	sty  sector
U    8082   4C 0000 "     648   	jmp  cmder2
                          649   
     8085   A2 00         650   simprs  ldx  #0         ; simple parser
     8087   8E 0291       651   	stx  filtbl
     808A   A9 3A         652   	lda  #':
     808C   20 811C       653   	jsr  parse
     808F   F0 05         654   	beq  sp10
                          655   
     8091   88            656   	dey
     8092   88            657   	dey
     8093   8C 0291       658   	sty  filtbl
     8096   4C 8251       659   sp10    jmp  setany     ; set drive #
     8099   A0 00         660   prscln  ldy  #0
     809B   A2 00         661   	ldx  #0
     809D   A9 3A         662   	lda  #':
     809F   4C 811C       663   	jmp  parse      ; find pos'n of ":"
                          664   
     80A2   20 8099       665   tagcmd  jsr  prscln     ; tag cmd string,setup cmd..
     80A5   D0 05         666   	bne  tc30       ; struc, image & file pntrs
                          667   
     80A7   A9 34         668   tc25    lda  #nofile    ; none, no files
     80A9   4C 807C       669   	jmp  cmderr
                          670   
     80AC   88            671   tc30    dey
     80AD   88            672   	dey
     80AE   8C 0291       673   	sty  filtbl     ; ":"-1 starts fs1
     80B1   8A            674   	txa
     80B2   D0 F3         675   	bne  tc25       ; err: "," before ":"
                          676   
     80B4   A9 3D         677   tc35    lda  #'=        ; search: "="
     80B6   20 811C       678   	jsr  parse
     80B9   8A            679   	txa             ; ?file count= 1-1?
     80BA   F0 02         680   	beq  tc40
                          681   
     80BC   A9 40         682   	lda  #%01000000 ; g1-bit
     80BE   09 21         683   tc40    ora  #%00100001 ; e1,^e2-bits
     80C0   8D 02A2       684   	sta  image      ; fs structure
     80C3   E8            685   	inx
     80C4   8E 022E       686   	stx  f1cnt
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 10-1
"parsex"   PARSEX.SRC

Error Addr  Code          Seq   Source statement

     80C7   8E 022F       687   	stx  f2cnt      ; init for no fs2
     80CA   AD 02A1       688   	lda  patflg
     80CD   F0 0D         689   	beq  tc50
                          690   
     80CF   A9 80         691   	lda  #%10000000 ; p1-bit
     80D1   0D 02A2       692   	ora  image
     80D4   8D 02A2       693   	sta  image
     80D7   A9 00         694   	lda  #0
     80D9   8D 02A1       695   	sta  patflg     ; clear pattern flag
     80DC   98            696   tc50    tya             ; ptr to fs2
     80DD   F0 29         697   	beq  tc75       ;  fs2 not here
                          698   
     80DF   9D 0291       699   	sta  filtbl,x
     80E2   AD 022E       700   	lda  f1cnt      ; fs2 is here now,...
     80E5   8D 0230       701   	sta  f2ptr      ; ...now set f2 ptr
     80E8   A9 8D         702   	lda  #$8d       ; find cr-shifted
     80EA   20 811C       703   	jsr  parse      ; parse rest of cmd string
     80ED   E8            704   	inx             ; advance filtbl ptr to end
     80EE   8E 022F       705   	stx  f2cnt      ; save it
     80F1   CA            706   	dex             ; restore for test
     80F2   AD 02A1       707   	lda  patflg     ; save last pattern
     80F5   F0 02         708   	beq  tc60       ; ?any patterns?
                          709   
     80F7   A9 08         710   	lda  #%1000     ; yes, p2-bit
     80F9   EC 022E       711   tc60    cpx  f1cnt      ; ?f2cnt=f1cnt+1?
     80FC   F0 02         712   	beq  tc70
                          713   
     80FE   09 04         714   	ora  #%0100     ; g2-bit
     8100   09 03         715   tc70    ora  #%0011     ; e2-bit,^e2-bit
     8102   4D 02A2       716   	eor  image      ; eor clears ^e2-bit
     8105   8D 02A2       717   	sta  image
     8108   AD 02A2       718   tc75    lda  image
     810B   AE 022A       719   	ldx  cmdnum
U    810E   3D 0000 "     720   	and  struct,x   ; match cmd template
     8111   D0 01         721   	bne  tc80
                          722   
     8113   60            723   	rts
                          724   
     8114   8D 02AB       725   tc80    sta  erword     ; **could be warning
     8117   A9 30         726   	lda  #badsyn    ; err: bad syntax
     8119   4C 807C       727   	jmp  cmderr
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 11
"parsex"   PARSEX.SRC

Error Addr  Code          Seq   Source statement

                          729   ;parse string
                          730   ;  looks for special chars,
                          731   ;  returning when var'bl char
                          732   ;  is found
                          733   ;   a: var'bl char
                          734   ;   x: in,out: index, filtbl+1
                          735   ;   y: in: index, cmdbuf
                          736   ;     out: new ptr, =0 if none
                          737   ;         (z=1) if y=0
                          738   ;
     811C   8D 028F       739   parse   sta  char       ; save var'bl char
     811F   C4 29         740   pr10    cpy  cmdsiz     ; stay in string
     8121   B0 2E         741   	bcs  pr30
                          742   
     8123   B1 CD         743   	lda  (cb),y     ; match char
     8125   C8            744   	iny
     8126   CD 028F       745   	cmp  char
     8129   F0 28         746   	beq  pr35       ; found char
                          747   
     812B   C9 2A         748   	cmp  #'*        ; match pattern chars
     812D   F0 04         749   	beq  pr20
                          750   
     812F   C9 3F         751   	cmp  #'?
     8131   D0 03         752   	bne  pr25
                          753   
     8133   EE 02A1       754   pr20    inc  patflg     ; set pattern flag
     8136   C9 2C         755   pr25    cmp  #',        ; match file separator
     8138   D0 E5         756   	bne  pr10
                          757   
     813A   98            758   	tya
     813B   9D 0292       759   	sta  filtbl+1,x         ; put ptrs in table
     813E   AD 02A1       760   	lda  patflg     ; save pattern for ea file
     8141   29 7F         761   	and  #$7f
     8143   F0 07         762   	beq  pr28
                          763   
     8145   A9 80         764   	lda  #$80       ; retain pattern presence...
     8147   95 F4         765   	sta  pattyp,x
     8149   8D 02A1       766   	sta  patflg     ; ...but clear count
     814C   E8            767   pr28    inx
     814D   E0 04         768   	cpx  #mxfils-1
     814F   90 CE         769   	bcc  pr10       ; no more than mxfils
                          770   
     8151   A0 00         771   pr30    ldy  #0         ; y=0 (z=1)
     8153   A5 29         772   pr35    lda  cmdsiz
     8155   9D 0292       773   	sta  filtbl+1,x
     8158   AD 02A1       774   	lda  patflg
     815B   29 7F         775   	and  #$7f
     815D   F0 04         776   	beq  pr40
                          777   
     815F   A9 80         778   	lda  #$80
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 11-1
"parsex"   PARSEX.SRC

Error Addr  Code          Seq   Source statement

     8161   95 F4         779   	sta  pattyp,x
     8163   98            780   pr40    tya             ; z is set
     8164   60            781   	rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 12
"parsex"   PARSEX.SRC

Error Addr  Code          Seq   Source statement

                          783   ;initialize command tables, ptrs, etc.
                          784   ;
     8165   A4 CD         785   cmdset  ldy  buftab+cbptr
     8167   F0 36         786   	beq  cs08
                          787   
     8169   88            788   	dey
     816A   F0 32         789   	beq  cs07
                          790   
     816C   AD 0200       791   	lda  cmdbuf
     816F   C9 55         792   	cmp  #'U        ; U0...?
     8171   D0 07         793   	bne  1$
                          794   
     8173   AD 0201       795   	lda  cmdbuf+1
     8176   C9 30         796   	cmp  #'0
     8178   F0 04         797   	beq  2$
                          798   
     817A   B9 0200       799   1$      lda  cmdbuf,y
     817D   2C            800   	.byte skip2
     817E   A9 00         801   2$      lda  #0
     8180   C9 0D         802   	cmp  #cr
     8182   F0 1B         803   	beq  cs08
                          804   
     8184   88            805   	dey
     8185   AD 0200       806   	lda  cmdbuf
     8188   C9 55         807   	cmp  #'U        ; U0...?
     818A   D0 07         808   	bne  3$
                          809   
     818C   AD 0201       810   	lda  cmdbuf+1
     818F   C9 30         811   	cmp  #'0
     8191   F0 04         812   	beq  4$
                          813   
     8193   B9 0200       814   3$      lda  cmdbuf,y
     8196   2C            815   	.byte skip2
     8197   A9 00         816   4$      lda  #0
     8199   C9 0D         817   	cmp  #cr
     819B   F0 02         818   	beq  cs08
                          819   
     819D   C8            820   	iny
     819E   C8            821   cs07    iny
     819F   84 29         822   cs08    sty  cmdsiz     ; set cmd string size
     81A1   C0 2A         823   	cpy  #cmdlen+1
     81A3   A0 FF         824   	ldy  #$ff
     81A5   90 08         825   	bcc  cmdrst
                          826   
     81A7   8C 022A       827   	sty  cmdnum
     81AA   A9 32         828   	lda  #longln    ; long line error
     81AC   4C 807C       829   	jmp  cmderr
                          830   
     81AF   A0 00         831   cmdrst  ldy  #0         ; clr vars, tbls
     81B1   98            832   	tya
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 12-1
"parsex"   PARSEX.SRC

Error Addr  Code          Seq   Source statement

     81B2   85 CD         833   	sta  buftab+cbptr
     81B4   8D 026F       834   	sta  rec
     81B7   8D 022D       835   	sta  type
     81BA   8D 0233       836   	sta  typflg
     81BD   85 67         837   	sta  f1ptr
     81BF   8D 0230       838   	sta  f2ptr
     81C2   8D 022E       839   	sta  f1cnt
     81C5   8D 022F       840   	sta  f2cnt
     81C8   8D 02A1       841   	sta  patflg
     81CB   8D 02AB       842   	sta  erword
     81CE   A2 05         843   	ldx  #mxfils
     81D0   9D 0290       844   cs10    sta  filtbl-1,x
     81D3   95 E4         845   	sta  entsec-1,x
     81D5   95 E9         846   	sta  entind-1,x
     81D7   95 EE         847   	sta  fildrv-1,x
     81D9   95 F3         848   	sta  pattyp-1,x
     81DB   9D 0296       849   	sta  filtrk-1,x
     81DE   9D 029B       850   	sta  filsec-1,x
     81E1   CA            851   	dex
     81E2   D0 EC         852   	bne  cs10
                          853   
     81E4   60            854   	rts
                          855   
                          856   ; turn on activity led
                          857   
     81E5   A9 00         858   erroff  lda  #0
     81E7   8D 02AB       859   	sta  erword
     81EA   A5 79         860   	lda  ledprint
     81EC   29 DF         861   	and  #all-pwr_led
     81EE   85 79         862   	sta  ledprint
     81F0   60            863   	rts
                          864   
     81F1   A9 50         865   erron   lda  #80
     81F3   8D 02AB       866   	sta  erword
     81F6   A5 79         867   setlds  lda  ledprint
     81F8   09 40         868   	ora  #act_led
     81FA   85 79         869   	sta  ledprint
     81FC   60            870   	rts
                          871   	.INCLUDE setdrv
                          872   	.messg "setdrv"
                          873   	.subttl "setdrv"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 13
"setdrv"   SETDRV.SRC

Error Addr  Code          Seq   Source statement

     81FD   AD 022F       875   onedrv  lda  f2cnt
     8200   8D 022E       876           sta  f1cnt
     8203   A9 01         877           lda  #1
     8205   8D 022F       878           sta  f2cnt
     8208   8D 0230       879           sta  f2ptr
                          880   ;set up all drives from f2cnt
     820B   A2 00         881   alldrs  ldx  #0         ; ...into file entry table...
     820D   86 67         882   ad10    stx  f1ptr      ; ...on sector ptr byte
     820F   BD 0291       883           lda  filtbl,x
     8212   20 8224       884           jsr  setdrv
     8215   A6 67         885           ldx  f1ptr
     8217   9D 0291       886           sta  filtbl,x   ; incr ptr past ":"
     821A   98            887           tya     	; bits rep drives
     821B   95 EF         888           sta  fildrv,x   ; bit7: default
     821D   E8            889           inx     	; bit0: drive #
     821E   EC 022F       890           cpx  f2cnt
     8221   90 EA         891           bcc  ad10
                          892   
     8223   60            893           rts
                          894   ;---------------------------------------
                          895   ;  set drive number
                          896   ;  determines drive # from text or
                          897   ;  uses default (-d)
                          898   ;  a: in,out: index, cmdbuf
                          899   ;  y: in: default drive
                          900   ;    out: drive number, - if default
                          901   ;---------------------------------------
     8224   AA            902   setdrv  tax     	; x= cmdbuf index
     8225   A0 00         903           ldy  #0         ; set default drive to zero
     8227   A9 3A         904           lda  #':
     8229   DD 0201       905           cmp  cmdbuf+1,x ; for xxx:file
     822C   F0 0C         906           beq  sd40       ;       ^
                          907   
     822E   DD 0200       908           cmp  cmdbuf,x   ; for xxx:file
     8231   D0 17         909           bne  sd50       ;        ^
                          910   
     8233   E8            911           inx     	; found ":", so...
     8234   98            912   sd20    tya     	; drive= default
     8235   29 01         913   sd22    and  #1         ; convert to numeric
     8237   A8            914   sd24    tay     	; restore drive
     8238   8A            915           txa     	; a=index & xxxxfile
     8239   60            916           rts     	;               ^
                          917   
     823A   BD 0200       918   sd40    lda  cmdbuf,x
     823D   E8            919           inx     	;  xxx:file
     823E   E8            920           inx     	;    --^
     823F   C9 30         921           cmp  #'0        ; for xx0:file
     8241   F0 F2         922           beq  sd22       ;         ^
                          923   
     8243   C9 31         924   	cmp  #'1	; drive one?
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 13-1
"setdrv"   SETDRV.SRC

Error Addr  Code          Seq   Source statement

     8245   D0 ED         925   	bne  sd20
                          926   
     8247   4C 802D       927   	jmp  bcerr      ; bad cmd error
                          928   
     824A   98            929   sd50    tya     	; for xxx,file or xx=file
     824B   09 80         930           ora  #$80       ;         ^          ^
     824D   29 81         931           and  #$81       ; drive= -default
     824F   D0 E6         932           bne  sd24       ; finish testing
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 14
"setdrv"   SETDRV.SRC

Error Addr  Code          Seq   Source statement

     8251   A9 00         934   setany  lda  #0         ; set drv frm any config
     8253   8D 02A2       935           sta  image
     8256   AC 0291       936           ldy  filtbl
     8259   B1 CD         937   sa05    lda  (cb),y
     825B   20 8295       938           jsr  tst0v1
     825E   10 0D         939           bpl  sa20
                          940   
     8260   C8            941           iny
     8261   C4 29         942           cpy  cmdsiz
     8263   B0 05         943           bcs  sa10
                          944   
     8265   A4 29         945           ldy  cmdsiz
     8267   88            946           dey
     8268   D0 EF         947           bne  sa05
                          948   
     826A   CE 02A2       949   sa10    dec  image
     826D   4C 81F6       950   sa20    jmp  setlds
                          951   
                          952   ;set ptrs to one file stream & chk type
                          953   
     8270   A0 00         954   fs1set  ldy  #0
     8272   AD 022E       955           lda  f1cnt
     8275   CD 022F       956           cmp  f2cnt
     8278   F0 16         957           beq  fs15
                          958   
     827A   CE 022F       959           dec  f2cnt
     827D   AC 022F       960           ldy  f2cnt
     8280   B9 0291       961           lda  filtbl,y
     8283   A8            962           tay
     8284   B1 CD         963           lda  (cb),y
U    8286   A0 00   "     964           ldy  #ntypes-1
U    8288   D9 0000 "     965   fs10    cmp  typlst,y
     828B   F0 03         966           beq  fs15
                          967   
     828D   88            968           dey
     828E   D0 F8         969           bne  fs10
                          970   
     8290   98            971   fs15    tya
     8291   8D 0233       972           sta  typflg
     8294   60            973           rts
                          974   
                          975   ;test char in accum for "0" or "1"
                          976   
     8295   C9 30         977   tst0v1  cmp  #'0
     8297   F0 06         978           beq  t0v1
                          979   
     8299   C9 31         980           cmp  #'1
     829B   F0 02         981           beq  t0v1
                          982   
     829D   09 80         983           ora  #$80
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 14-1
"setdrv"   SETDRV.SRC

Error Addr  Code          Seq   Source statement

     829F   29 81         984   t0v1    and  #$81
     82A1   60            985           rts
                          986   	.INCLUDE lookitup
                          987           .messg "lookitup"
                          988           .subttl "lookitup"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 15
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

                          990   ;optsch optimal search for lookup & fndfil
                          991   
     82A2   A9 00         992   optsch  lda  #0         ; determine optimal search
     82A4   85 40         993           sta  temp       ; init drive mask
     82A6   8D 02A4       994           sta  drvflg
     82A9   8D 02A3       995   	sta  drvcnt
     82AC   20 84AE       996   	jsr  autoi      ; check drv for autoinit
     82AF   F0 05         997           beq  os70	; drive is active
                          998   	
     82B1   A9 74         999   	lda  #nodriv
     82B3   20 807C      1000   	jsr  cmderr
                         1001   
     82B6   4C 81F6      1002   os70    jmp  setlds
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 16
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

     82B9   20 82A2      1004   lookup  jsr  optsch     ; lookup all files in
     82BC   A9 00        1005   lk05    lda  #0         ; stream and fill tbls w/info
     82BE   85 73        1006           sta  delind
     82C0   20 8424      1007           jsr  srchst     ; start search
     82C3   D0 0B        1008           bne  lk25
                         1009   
     82C5   CE 02A3      1010   lk10    dec  drvcnt
     82C8   10 F2        1011           bpl  lk05       ; /++loop++
                         1012   
     82CA   60           1013   	rts     	; no more drive searches
                         1014   
     82CB   20 8489      1015   lk20    jsr  search     ; find valid fn
     82CE   F0 10        1016           beq  lk30       ; end of search
                         1017   
     82D0   20 8327      1018   lk25    jsr  compar     ; compare dir w/ table
     82D3   AD 02A5      1019           lda  found      ; found flag
     82D6   F0 01        1020           beq  lk26       ; all fn's not found, yet
                         1021   
     82D8   60           1022           rts
                         1023   
     82D9   AD 026D      1024   lk26    lda  entfnd
     82DC   30 ED        1025           bmi  lk20
                         1026   
     82DE   10 F0        1027           bpl  lk25
                         1028   
     82E0   AD 02A5      1029   lk30    lda  found
     82E3   F0 E0        1030           beq  lk10
                         1031   
     82E5   60           1032           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 17
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

                         1034   ; find next file name matching
                         1035   ;  any file in stream & return
                         1036   ;  with entry found stuffed into
                         1037   ;  tables
     82E6   20 8477      1038   ffre    jsr  srre       ; find file re-entry
     82E9   F0 0E        1039           beq  ff10
                         1040   
     82EB   D0 1C        1041           bne  ff25
                         1042   
     82ED   A9 00        1043   ffst    lda  #0         ; find file start entry
     82EF   85 73        1044           sta  delind
     82F1   20 8424      1045           jsr  srchst
     82F4   D0 13        1046           bne  ff25
                         1047   
     82F6   8D 02A5      1048           sta  found
     82F9   AD 02A5      1049   ff10    lda  found
     82FC   D0 28        1050           bne  ff40
                         1051   
     82FE   CE 02A3      1052           dec  drvcnt
     8301   10 EA        1053           bpl  ffst       ; /++loop++
                         1054   
     8303   60           1055           rts
                         1056   
     8304   20 8489      1057   fndfil  jsr  search     ; find file continuous...
     8307   F0 F0        1058           beq  ff10       ; re-entry, no channel activity
                         1059   
     8309   20 8327      1060   ff25    jsr  compar     ; compare file names
     830C   AE 026D      1061           ldx  entfnd
     830F   10 07        1062           bpl  ff30
                         1063   
     8311   AD 02A5      1064           lda  found
     8314   F0 EE        1065           beq  fndfil
                         1066   
     8316   D0 0E        1067           bne  ff40
                         1068   
     8318   AD 0233      1069   ff30    lda  typflg
     831B   F0 09        1070           beq  ff40       ; no type restriction
                         1071   
     831D   B5 F4        1072           lda  pattyp,x
     831F   29 07        1073           and  #typmsk
     8321   CD 0233      1074           cmp  typflg
     8324   D0 DE        1075           bne  fndfil
                         1076   
     8326   60           1077   ff40    rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 18
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

                         1079   ;compare all filenames in stream table
                         1080   ;  with each valid entry in the
                         1081   ;  directory.  matches are tabulated
     8327   A2 FF        1082   compar  ldx  #$ff
     8329   8E 026D      1083           stx  entfnd
     832C   E8           1084           inx
     832D   8E 02A1      1085           stx  patflg
     8330   20 83D7      1086           jsr  cmpchk
     8333   F0 06        1087           beq  cp10
                         1088   
     8335   60           1089   cp02    rts     	; all are found
     8336   20 83E2      1090   cp05    jsr  cc10
     8339   D0 FA        1091           bne  cp02
                         1092   
     833B   A9 00        1093   cp10    lda  #0         ; drv #0
     833D   55 EF        1094           eor  fildrv,x
     833F   4A           1095           lsr  a
     8340   90 0B        1096           bcc  cp20       ; right drive
                         1097   
     8342   29 40        1098           and  #$40
     8344   F0 F0        1099           beq  cp05       ; no default
                         1100   
     8346   A9 02        1101           lda  #2
     8348   CD 02A3      1102           cmp  drvcnt
     834B   F0 E9        1103           beq  cp05       ; don't use default
                         1104   
     834D   BD 0291      1105   cp20    lda  filtbl,x   ; good drive match
     8350   AA           1106           tax
     8351   20 8526      1107           jsr  fndlmt
     8354   A0 03        1108           ldy  #3
     8356   4C 836C      1109           jmp  cp33
                         1110   
     8359   BD 0200      1111   cp30    lda  cmdbuf,x
     835C   D1 64        1112           cmp  (dirbuf),y
     835E   F0 0A        1113           beq  cp32       ; chars are =
                         1114   
     8360   C9 3F        1115           cmp  #'?
     8362   D0 D2        1116           bne  cp05       ; no single pattern
                         1117   
     8364   B1 64        1118           lda  (dirbuf),y
     8366   C9 A0        1119           cmp  #$a0
     8368   F0 CC        1120           beq  cp05       ; end of filename
                         1121   
     836A   E8           1122   cp32    inx
     836B   C8           1123           iny
     836C   EC 0290      1124   cp33    cpx  limit
     836F   B0 0A        1125           bcs  cp34       ; end of pattern
                         1126   
     8371   BD 0200      1127           lda  cmdbuf,x
     8374   C9 2A        1128           cmp  #'*
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 18-1
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

     8376   D0 E1        1129           bne  cp30       ; keep checking
                         1130   	
     8378   4C 83FA      1131   	jmp  cp99	; star
                         1132   
     837B   C0 13        1133   cp34    cpy  #19
     837D   B0 06        1134           bcs  cp40       ; end of filename
                         1135   
     837F   B1 64        1136           lda  (dirbuf),y
     8381   C9 A0        1137           cmp  #$a0
     8383   D0 B1        1138           bne  cp05
                         1139   
     8385   AE 0230      1140   cp40    ldx  f2ptr      ; filenames match
     8388   8E 026D      1141           stx  entfnd
     838B   B5 F4        1142           lda  pattyp,x   ; store info in tables
     838D   29 80        1143           and  #$80
     838F   8D 02A1      1144           sta  patflg
     8392   AD 0232      1145           lda  index
     8395   95 EA        1146           sta  entind,x
     8397   A5 4E        1147           lda  sector
     8399   95 E5        1148           sta  entsec,x
     839B   A0 00        1149           ldy  #0
     839D   B1 64        1150           lda  (dirbuf),y
     839F   C8           1151           iny
     83A0   48           1152           pha
     83A1   29 40        1153           and  #$40
     83A3   85 40        1154           sta  temp
     83A5   68           1155           pla
     83A6   29 DF        1156           and  #$ff-$20
     83A8   30 02        1157           bmi  cp42
                         1158   
     83AA   09 20        1159           ora  #$20
     83AC   29 27        1160   cp42    and  #$27
     83AE   05 40        1161           ora  temp
     83B0   85 40        1162           sta  temp
     83B2   A9 80        1163           lda  #$80
     83B4   35 F4        1164           and  pattyp,x
     83B6   05 40        1165           ora  temp
     83B8   95 F4        1166           sta  pattyp,x
     83BA   B5 EF        1167           lda  fildrv,x
     83BC   29 80        1168           and  #$80
     83BE   95 EF        1169           sta  fildrv,x
     83C0   B1 64        1170           lda  (dirbuf),y
     83C2   9D 0297      1171           sta  filtrk,x
     83C5   C8           1172           iny
     83C6   B1 64        1173           lda  (dirbuf),y
     83C8   9D 029C      1174           sta  filsec,x
     83CB   AD 026F      1175           lda  rec
     83CE   D0 07        1176           bne  cmpchk
                         1177   
     83D0   A0 15        1178           ldy  #21
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 18-2
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

     83D2   B1 64        1179           lda  (dirbuf),y
     83D4   8D 026F      1180           sta  rec
                         1181   
                         1182   ;check table for unfound files
                         1183   
     83D7   A9 FF        1184   cmpchk  lda  #$ff
     83D9   8D 02A5      1185           sta  found
     83DC   AD 022F      1186           lda  f2cnt
     83DF   8D 0230      1187           sta  f2ptr
     83E2   CE 0230      1188   cc10    dec  f2ptr
     83E5   10 01        1189           bpl  cc15
                         1190   
     83E7   60           1191           rts     	; table exhausted
                         1192   
     83E8   AE 0230      1193   cc15    ldx  f2ptr
     83EB   B5 F4        1194           lda  pattyp,x
     83ED   30 05        1195           bmi  cc20
                         1196   
     83EF   BD 0297      1197           lda  filtrk,x
     83F2   D0 EE        1198           bne  cc10
                         1199   
     83F4   A9 00        1200   cc20    lda  #0
     83F6   8D 02A5      1201           sta  found
     83F9   60           1202           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 19
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

     83FA   86 3B        1204   cp99	stx  tmp+3
     83FC   AE 0290      1205   	ldx  limit	; get top end
     83FF   CA           1206   	dex
     8400   E4 3B        1207   	cpx  tmp+3
     8402   F0 1A        1208   	beq  4$
                         1209   
     8404   A0 13        1210   	ldy  #19
     8406   88           1211   1$	dey
     8407   B1 64        1212   	lda  (dirbuf),y
     8409   C9 A0        1213   	cmp  #$a0	; shifted space
     840B   F0 F9        1214   	beq  1$
                         1215   	
     840D   BD 0200      1216   2$	lda  cmdbuf,x	; get char
     8410   D1 64        1217   	cmp  (dirbuf),y
     8412   F0 04        1218   	beq  3$
                         1219   
     8414   C9 3F        1220   	cmp  #'?
     8416   D0 09        1221   	bne  5$		; not the same
                         1222   
     8418   88           1223   3$	dey
     8419   CA           1224   	dex
     841A   E4 3B        1225   	cpx  tmp+3	; done yet?
     841C   D0 EF        1226   	bne  2$
                         1227   
     841E   4C 8385      1228   4$	jmp  cp40	; equal
     8421   4C 8336      1229   5$	jmp  cp05	; not equal
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 20
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

                         1231   ;search directory
                         1232   ;  returns with valid entry w/ delind=0
                         1233   ;  or returns w/ 1st deleted entry
                         1234   ;  w/ delind=1
                         1235   ;  srchst will initiate a search
                         1236   ;  search will continue a search
     8424   A0 00        1237   srchst  ldy  #0         ; init deleted sector
     8426   84 72        1238           sty  delsec
     8428   88           1239           dey
     8429   8C 026D      1240           sty  entfnd
     842C   AD 022B      1241           lda  dirtrk     ; start search at beginning
     842F   85 4D        1242           sta  track
     8431   AD 01E5      1243           lda  dirst	; /1st dir blk
     8434   85 4E        1244           sta  sector
     8436   8D 02A6      1245           sta  lstbuf
     8439   20 93CF      1246           jsr  opnird     ; open internal read chnl
     843C   AD 02A6      1247   sr10    lda  lstbuf     ; last buffer if 0
     843F   D0 01        1248           bne  sr15
                         1249   
     8441   60           1250           rts     	; (z=1)
                         1251   
     8442   A9 07        1252   sr15    lda  #7
     8444   8D 0231      1253           sta  filcnt
     8447   A9 00        1254           lda  #0         ; read track #
     8449   20 9450      1255           jsr  drdbyt
     844C   8D 02A6      1256           sta  lstbuf     ; update end flag
     844F   20 9442      1257   sr20    jsr  getpnt
     8452   CE 0231      1258           dec  filcnt
     8455   A0 00        1259           ldy  #0
     8457   B1 64        1260           lda  (dirbuf),y ; read file type
     8459   D0 14        1261           bne  sr30
                         1262   
     845B   A5 72        1263           lda  delsec     ; deleted entry found
     845D   D0 2A        1264           bne  search     ; deleted entry already found
                         1265   
     845F   20 9D79      1266           jsr  curblk     ; get current sector
     8462   A5 4E        1267           lda  sector
     8464   85 72        1268           sta  delsec
     8466   A5 64        1269           lda  dirbuf     ; get current index
     8468   A6 73        1270           ldx  delind     ; bit1: want deleted entry
     846A   85 73        1271           sta  delind
     846C   F0 1B        1272           beq  search     ; need valid entry
     846E   60           1273           rts     	; (z=0)
                         1274   
     846F   A2 01        1275   sr30    ldx  #1
     8471   E4 73        1276           cpx  delind     ; ?looking for deleted?
     8473   D0 2C        1277           bne  sr50       ; no!
                         1278   
     8475   F0 12        1279           beq  search
                         1280   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 20-1
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

     8477   AD 022B      1281   srre    lda  dirtrk
     847A   85 4D        1282           sta  track
     847C   A5 71        1283           lda  dirsec
     847E   85 4E        1284           sta  sector
     8480   20 93CF      1285           jsr  opnird
     8483   AD 0232      1286           lda  index
     8486   20 9422      1287           jsr  setpnt
     8489   A9 FF        1288   search  lda  #$ff
     848B   8D 026D      1289           sta  entfnd
     848E   AD 0231      1290           lda  filcnt     ; adjust file count
     8491   30 08        1291           bmi  sr40
                         1292   
     8493   A9 20        1293           lda  #32        ; incr by 32
     8495   20 9138      1294           jsr  incptr
     8498   4C 844F      1295           jmp  sr20
                         1296   
     849B   20 93AA      1297   sr40    jsr  nxtbuf     ; new buffer
     849E   4C 843C      1298           jmp  sr10       ; (branch)
                         1299   
     84A1   A5 64        1300   sr50    lda  dirbuf     ; found valid entry
     84A3   8D 0232      1301           sta  index      ; save index
     84A6   20 9D79      1302           jsr  curblk     ; get sector
     84A9   A5 4E        1303           lda  sector
     84AB   85 71        1304           sta  dirsec
     84AD   60           1305           rts     	; (z=0)
                         1306   
                         1307   ;  check drive for active diskette
                         1308   ;  init if needed
                         1309   ;   return nodrv status
                         1310   
     84AE   A5 2D        1311   autoi   lda  autofg
     84B0   D0 31        1312           bne  auto2      ; auto-init is disabled
                         1313   
     84B2   A9 01        1314   	lda  #1
     84B4   24 25        1315           bit  wpsw       ; test & clear wpsw
     84B6   F0 2B        1316           beq  auto2      ; no change in diskette
                         1317   
     84B8   20 B0CF      1318   	jsr  psetdef	; clear to default values
     84BB   20 B0B3      1319   	jsr  setdef	; set root directory
     84BE   A9 80        1320           lda  #bit7
     84C0   8D 02A8      1321           sta  jobrtn     ; set error return code
     84C3   20 8EDC      1322           jsr  itrial     ; init-seek test
     84C6   A0 FF        1323           ldy  #$ff       ;  .y= true
     84C8   C9 02        1324           cmp  #2
     84CA   F0 0A        1325           beq  auto1      ; no sync= no diskette
                         1326   
     84CC   C9 03        1327           cmp  #3
     84CE   F0 06        1328           beq  auto1      ; no header= no directory
                         1329   
     84D0   C9 0F        1330           cmp  #$f
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 20-2
"lookitup"   LOOKITUP.SRC

Error Addr  Code          Seq   Source statement

     84D2   F0 02        1331           beq  auto1      ; no drive!!!!
                         1332   
     84D4   A0 00        1333           ldy  #0         ; set .y false
     84D6   98           1334   auto1   tya
     84D7   85 6E        1335           sta  nodrv      ; set condn of no-drive
     84D9   D0 08        1336           bne  auto2      ; no need to init crud!
                         1337   
     84DB   A9 80        1338           lda  #bit7
     84DD   8D 02A8      1339           sta  jobrtn     ; set error return code
     84E0   20 8F03      1340           jsr  initdr     ; init that drive
     84E3                1341   auto2
     84E3   24 8A        1342   	bit  dkoramask
     84E5   10 04        1343   	bpl  1$
                         1344   
     84E7   A9 FF        1345   	lda  #$ff
     84E9   85 6E        1346   	sta  nodrv
     84EB   A5 6E        1347   1$      lda  nodrv      ; return no-drive condn
     84ED   60           1348   	rts
                         1349   	.INCLUDE trnsfr
                         1350           .messg "trnsfr"
                         1351           .subttl "trnsfr"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 21
"trnsfr"   TRNSFR.SRC

Error Addr  Code          Seq   Source statement

     84EE   48           1353   trname  pha     	; trnsfr fname fr cmd to buf
     84EF   20 8526      1354           jsr  fndlmt     ;  a: string size
     84F2   20 8508      1355           jsr  trcmbf     ;  x: starting index in cmdbuf
     84F5   68           1356           pla     	;  y: buffer #
     84F6   38           1357           sec
     84F7   ED 026C      1358           sbc  strsiz
     84FA   AA           1359           tax
     84FB   F0 0A        1360           beq  tn20
                         1361   
     84FD   90 08        1362           bcc  tn20
                         1363   
     84FF   A9 A0        1364           lda  #$a0
     8501   91 64        1365   tn10    sta  (dirbuf),y
     8503   C8           1366           iny
     8504   CA           1367           dex
     8505   D0 FA        1368           bne  tn10
                         1369   
     8507   60           1370   tn20    rts
                         1371   
     8508   98           1372   trcmbf  tya     	; trnsfr cmd buf to other buf
     8509   0A           1373           asl  a          ; uses current buffer ptr
     850A   A8           1374           tay     	; limit:ending index+1 in cmd buf
     850B   B9 00BB      1375           lda  buftab,y   ;  x: starting index in cmd buf
     850E   85 64        1376           sta  dirbuf     ;  y: buffer #
     8510   B9 00BC      1377           lda  buftab+1,y
     8513   85 65        1378           sta  dirbuf+1
     8515   A0 00        1379           ldy  #0
     8517   BD 0200      1380   tr10    lda  cmdbuf,x
     851A   91 64        1381           sta  (dirbuf),y
     851C   C8           1382           iny
     851D   F0 06        1383           beq  tr20
                         1384   
     851F   E8           1385           inx
     8520   EC 0290      1386           cpx  limit
     8523   90 F2        1387           bcc  tr10
                         1388   
     8525   60           1389   tr20    rts
                         1390   
     8526   A9 00        1391   fndlmt  lda  #0         ; find string limit in cmdbuf
     8528   8D 026C      1392           sta  strsiz     ; pointed to by x
     852B   8A           1393           txa
     852C   48           1394           pha
     852D   BD 0200      1395   fl05    lda  cmdbuf,x
     8530   C9 2C        1396           cmp  #',
     8532   F0 13        1397           beq  fl10
                         1398   
     8534   C9 3D        1399           cmp  #'=
     8536   F0 0F        1400           beq  fl10
                         1401   
     8538   EE 026C      1402           inc  strsiz
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 21-1
"trnsfr"   TRNSFR.SRC

Error Addr  Code          Seq   Source statement

     853B   E8           1403           inx
     853C   A9 0F        1404           lda  #15
     853E   CD 026C      1405           cmp  strsiz
     8541   90 04        1406           bcc  fl10
                         1407   
     8543   E4 29        1408           cpx  cmdsiz
     8545   90 E6        1409           bcc  fl05
                         1410   
     8547   8E 0290      1411   fl10    stx  limit
     854A   68           1412           pla
     854B   AA           1413           tax
     854C   60           1414           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 22
"trnsfr"   TRNSFR.SRC

Error Addr  Code          Seq   Source statement

                         1416   ;get file entry from directory
                         1417   ; called by stdir, getdir
                         1418   
     854D   A5 52        1419   getnam  lda  sa         ; save variables
     854F   48           1420           pha
     8550   A5 50        1421           lda  lindx
     8552   48           1422           pha
     8553   20 855D      1423           jsr  gnsub
     8556   68           1424           pla     	; restore variables
     8557   85 50        1425           sta  lindx
     8559   68           1426           pla
     855A   85 52        1427           sta  sa
     855C   60           1428           rts
                         1429   
     855D   A9 11        1430   gnsub   lda  #irsa
     855F   85 52        1431           sta  sa
     8561   20 9027      1432           jsr  fndrch
     8564   20 9442      1433           jsr  getpnt
     8567   AD 026D      1434           lda  entfnd
     856A   10 05        1435           bpl  gn05       ; more files
     856C   20 866B      1436           jsr  msgfre     ; send blocks free
     856F   18           1437           clc     	; (c=0): end
     8570   60           1438           rts     	; terminate
                         1439   
     8571   AD 02A4      1440   gn05    lda  drvflg     ; (drvflg=0):
     8574   F0 15        1441           beq  gn10       ;  send file name
                         1442   
     8576   CE 02A4      1443   gn050   dec  drvflg     ; (drvflg=-1):new dir
     8579   D0 03        1444           bne  gn051
                         1445   
     857B   4C 802D      1446           jmp  bcerr      ; no drv 1
                         1447   
     857E   A9 00        1448   gn051   lda  #0
     8580   8D 028E      1449           sta  nbtemp+1
     8583   8D 02A4      1450           sta  drvflg     ; reset flag
     8586   20 8627      1451           jsr  newdir
     8589   38           1452           sec
     858A   60           1453           rts
                         1454   
     858B   A2 18        1455   gn10    ldx  #dirlen    ; set number blocks
     858D   A0 1D        1456           ldy  #29        ;  & adjust spacing
     858F   B1 64        1457           lda  (dirbuf),y
     8591   8D 028E      1458           sta  nbtemp+1
     8594   F0 02        1459           beq  gn12
                         1460   
     8596   A2 16        1461           ldx  #dirlen-2
     8598   88           1462   gn12    dey
     8599   B1 64        1463           lda  (dirbuf),y
     859B   8D 028D      1464           sta  nbtemp
     859E   E0 16        1465           cpx  #dirlen-2
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 22-1
"trnsfr"   TRNSFR.SRC

Error Addr  Code          Seq   Source statement

     85A0   F0 0A        1466           beq  gn14
                         1467   
     85A2   C9 0A        1468           cmp  #10
     85A4   90 06        1469           bcc  gn14
                         1470   
     85A6   CA           1471           dex
     85A7   C9 64        1472           cmp  #100
     85A9   90 01        1473           bcc  gn14
                         1474   
     85AB   CA           1475           dex
     85AC   20 861C      1476   gn14    jsr  blknb      ; clear name buffer
     85AF   B1 64        1477           lda  (dirbuf),y ; set type chars
     85B1   48           1478           pha
     85B2   0A           1479           asl  a          ; (used in bcs)
     85B3   10 05        1480           bpl  gn15
                         1481   
     85B5   A9 3C        1482           lda  #'<
     85B7   9D 02AD      1483           sta  nambuf+1,x
     85BA   68           1484   gn15    pla
     85BB   29 0F        1485           and  #$f
     85BD   A8           1486           tay
U    85BE   B9 0000 "    1487           lda  tp2lst,y
     85C1   9D 02AC      1488           sta  nambuf,x
     85C4   CA           1489           dex
U    85C5   B9 0000 "    1490           lda  tp1lst,y
     85C8   9D 02AC      1491           sta  nambuf,x
     85CB   CA           1492           dex
U    85CC   B9 0000 "    1493           lda  typlst,y
     85CF   9D 02AC      1494           sta  nambuf,x
     85D2   CA           1495           dex
     85D3   CA           1496           dex
     85D4   B0 05        1497           bcs  gn20       ; (from asl)
                         1498   
     85D6   A9 2A        1499           lda  #'*        ; file not closed
     85D8   9D 02AD      1500           sta  nambuf+1,x
     85DB   A9 A0        1501   gn20    lda  #$a0
     85DD   9D 02AC      1502           sta  nambuf,x
     85E0   CA           1503           dex
     85E1   A0 12        1504           ldy  #18
     85E3   B1 64        1505   gn22    lda  (dirbuf),y
     85E5   9D 02AC      1506           sta  nambuf,x
     85E8   CA           1507           dex
     85E9   88           1508           dey
     85EA   C0 03        1509           cpy  #3
     85EC   B0 F5        1510           bcs  gn22
                         1511   
     85EE   A9 22        1512           lda  #'"        ; send name in quotes
     85F0   9D 02AC      1513           sta  nambuf,x
     85F3   E8           1514   gn30    inx
     85F4   E0 20        1515           cpx  #$20
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 22-2
"trnsfr"   TRNSFR.SRC

Error Addr  Code          Seq   Source statement

     85F6   B0 0B        1516           bcs  gn35
                         1517   
     85F8   BD 02AC      1518           lda  nambuf,x
     85FB   C9 22        1519           cmp  #'"
     85FD   F0 04        1520           beq  gn35
                         1521   
     85FF   C9 A0        1522           cmp  #$a0
     8601   D0 F0        1523           bne  gn30
                         1524   
     8603   A9 22        1525   gn35    lda  #'"
     8605   9D 02AC      1526           sta  nambuf,x
     8608   E8           1527   gn37    inx
     8609   E0 20        1528           cpx  #$20
     860B   B0 0A        1529           bcs  gn40
                         1530   
     860D   A9 7F        1531           lda  #$7f
     860F   3D 02AC      1532           and  nambuf,x
     8612   9D 02AC      1533           sta  nambuf,x
     8615   10 F1        1534           bpl  gn37
                         1535   
     8617   20 8304      1536   gn40    jsr  fndfil
     861A   38           1537           sec
     861B   60           1538           rts
                         1539   
     861C   A0 1B        1540   blknb   ldy  #nbsiz     ; blank nambuf
     861E   A9 20        1541           lda  #$20
     8620   99 02AB      1542   blknb1  sta  nambuf-1,y
     8623   88           1543           dey
     8624   D0 FA        1544           bne  blknb1
                         1545   
     8626   60           1546           rts
                         1547   
     8627   20 84AE      1548   newdir  jsr  autoi      ; new dir in listing
     862A   20 B633      1549           jsr  rddir      ; rd in dir
     862D   20 861C      1550           jsr  blknb
     8630   A9 FF        1551           lda  #$ff
     8632   85 40        1552           sta  temp
     8634   A9 00        1553           lda  #0
     8636   8D 028D      1554           sta  nbtemp
     8639   8D 028E      1555           sta  nbtemp+1
     863C   A6 6C        1556           ldx  jobnum
     863E   BD 01F1      1557           lda  bufind,x
     8641   85 65        1558           sta  dirbuf+1
U    8643   AD 0000 "    1559           lda  dsknam
     8646   85 64        1560           sta  dirbuf
     8648   A0 16        1561           ldy  #22
     864A   B1 64        1562   nd15    lda  (dirbuf),y
     864C   C9 A0        1563           cmp  #$a0
     864E   D0 02        1564           bne  nd20
                         1565   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 22-3
"trnsfr"   TRNSFR.SRC

Error Addr  Code          Seq   Source statement

     8650   A9 20        1566           lda  #$20
     8652   99 02AE      1567   nd20    sta  nambuf+2,y
     8655   88           1568           dey
     8656   10 F2        1569           bpl  nd15
                         1570   
     8658   A9 12        1571           lda  #$12
     865A   8D 02AC      1572           sta  nambuf
     865D   A9 22        1573           lda  #'"
     865F   8D 02AD      1574           sta  nambuf+1
     8662   8D 02BE      1575           sta  nambuf+18
     8665   A9 20        1576           lda  #$20
     8667   8D 02BF      1577           sta  nambuf+19
     866A   60           1578           rts
                         1579   
     866B   20 861C      1580   msgfre  jsr  blknb
     866E   A0 0B        1581           ldy  #msglen-1
     8670   B9 867C      1582   msg1    lda  fremsg,y
     8673   99 02AC      1583           sta  nambuf,y
     8676   88           1584           dey
     8677   10 F7        1585           bpl  msg1
                         1586   
     8679   4C B65B      1587           jmp  numfre
     867C   42 4C 4F     1588   fremsg   .byte  'BLOCKS FREE.'
     867F   43 4B 53 
     8682   20 46 52 
     8685   45 45 2E 
            =000C        1589   msglen   =*-fremsg
                         1590   	.INCLUDE scrtch
                         1591   	.messg "scrtch"
                         1592   	.subttl "scrtch"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 23
"scrtch"   SCRTCH.SRC

Error Addr  Code          Seq   Source statement

                         1594   ; scratch file(s)
                         1595   
     8688   20 8270      1596   scrtch  jsr  fs1set     ; set up for 1 stream
     868B   20 820B      1597   	jsr  alldrs
     868E   20 82A2      1598   	jsr  optsch
     8691   A9 00        1599   	lda  #0
     8693   85 55        1600   	sta  r0         ; used as file count
     8695   20 82ED      1601   	jsr  ffst
     8698   30 6E        1602   	bmi  sc30
                         1603   
     869A   20 9CF5      1604   sc15    jsr  tstchn     ; is it active ?
     869D   90 64        1605   	bcc  sc25       ; yes - don't scratch
                         1606   
     869F   A0 00        1607   	ldy  #0
     86A1   B1 64        1608   	lda  (dirbuf),y
     86A3   8D 01EE      1609   	sta  lo         ; save type
     86A6   29 40        1610   	and  #$40       ; lock bit
     86A8   D0 59        1611   	bne  sc25       ; it's locked
                         1612   
     86AA   20 873B      1613   	jsr  deldir     ; delete directory
                         1614   
     86AD   AD 01EE      1615   	lda  lo         ; recall type
     86B0   29 07        1616   	and  #typmsk
     86B2   C9 05        1617   	cmp  #partyp    ; par file?
     86B4   D0 25        1618   	bne  sc16
                         1619   
     86B6   C8           1620   	iny
     86B7   B1 64        1621   	lda  (dirbuf),y
     86B9   85 4D        1622   	sta  track
     86BB   C8           1623   	iny
     86BC   B1 64        1624   	lda  (dirbuf),y
     86BE   85 4E        1625   	sta  sector
     86C0   A0 1C        1626   	ldy  #$1c
     86C2   B1 64        1627   	lda  (dirbuf),y
     86C4   8D 01EE      1628   	sta  lo
     86C7   C8           1629   	iny
     86C8   B1 64        1630   	lda  (dirbuf),y
     86CA   8D 01ED      1631   	sta  hi
                         1632   
     86CD   20 94B5      1633   1$      jsr  tschk      ; check track
     86D0   20 B546      1634   	jsr  frets      ; free it
     86D3   20 B2EF      1635   	jsr  calcpar
     86D6   D0 F5        1636   	bne  1$
U    86D8   4C 0000 "    1637   	jmp  scrtch_patch       ; update BAM and move on to next file
                         1638   
                         1639   
     86DB   A0 13        1640   sc16    ldy  #19        ; is this a relative ?
     86DD   B1 64        1641   	lda  (dirbuf),y ; has a ss ?
     86DF   F0 0A        1642   	beq  sc17       ; no
                         1643   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 23-1
"scrtch"   SCRTCH.SRC

Error Addr  Code          Seq   Source statement

     86E1   85 4D        1644   	sta  track      ; yes - save track
     86E3   C8           1645   	iny
     86E4   B1 64        1646   	lda  (dirbuf),y ; get sector
     86E6   85 4E        1647   	sta  sector
     86E8   20 8713      1648   	jsr  delfil     ; delete by links
     86EB   AE 026D      1649   sc17    ldx  entfnd
     86EE   A9 20        1650   	lda  #$20
     86F0   35 F4        1651   	and  pattyp,x
     86F2   D0 0D        1652   	bne  sc20       ; created, not closed
                         1653   
     86F4   BD 0297      1654   	lda  filtrk,x   ; delete by links
     86F7   85 4D        1655   	sta  track
     86F9   BD 029C      1656   	lda  filsec,x
     86FC   85 4E        1657   	sta  sector
     86FE   20 8713      1658   	jsr  delfil
     8701   E6 55        1659   sc20    inc  r0
     8703   20 82E6      1660   sc25    jsr  ffre
     8706   10 92        1661   	bpl  sc15
                         1662   
     8708   A5 55        1663   sc30    lda  r0         ; finished, set
     870A   85 4D        1664   	sta  track      ; file count
     870C   A0 00        1665   	ldy  #0
     870E   A9 01        1666   	lda  #1
     8710   4C 805D      1667   	jmp  scrend     ; end of scratch
                         1668   
     8713   20 B546      1669   delfil  jsr  frets      ; delete file by links
     8716   20 93CF      1670   	jsr  opnird     ; update bam
     8719   A9 00        1671   del1    lda  #0
     871B   20 9422      1672   	jsr  setpnt
     871E   20 909B      1673   	jsr  rdbyt
     8721   85 4D        1674   	sta  track
     8723   20 909B      1675   	jsr  rdbyt
     8726   85 4E        1676   	sta  sector
     8728   A5 4D        1677   	lda  track
     872A   D0 06        1678   	bne  del2
                         1679   
     872C   20 B515      1680   	jsr  mapout
     872F   4C 919E      1681   	jmp  frechn
                         1682   
     8732   20 B546      1683   del2    jsr  frets
     8735   20 93AA      1684   	jsr  nxtbuf
     8738   4C 8719      1685   	jmp  del1
                         1686   
     873B   A0 00        1687   deldir  ldy  #0         ; delete dir entry
     873D   98           1688   	tya
     873E   91 64        1689   	sta  (dirbuf),y
     8740   20 9D9A      1690   	jsr  wrtout
     8743   4C 94ED      1691   	jmp  watjob
                         1692   	.INCLUDE formatd
                         1693   	.messg "formatd"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 23-2
"formatd"   FORMATD.SRC

Error Addr  Code          Seq   Source statement

                         1694   	.subttl "formatd"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 24
"formatd"   FORMATD.SRC

Error Addr  Code          Seq   Source statement

                         1696   ;format routines
     8746   A5 90        1697   format  lda  startrk	; get logical starting track
     8748   85 4D        1698           sta  track
     874A   A9 00        1699           lda  #0
     874C   85 4E        1700           sta  sector
     874E   20 9588      1701           jsr  seth       ; set up header/jobn=0
                         1702   
     8751   20 B0CF      1703   	jsr  psetdef	; set defaults
                         1704   	
     8754   A9 C0        1705   	lda  #restore_dv
     8756   20 959D      1706   	jsr  strobe_controller
                         1707   	
     8759   A4 9B        1708   	ldy  fillbyte
     875B   A9 00        1709   	lda  #0
     875D   85 9B        1710   	sta  fillbyte
                         1711   
     875F   A9 F0        1712           lda  #formatdk_dv
     8761   20 959D      1713   	jsr  strobe_controller
     8764   84 9B        1714   	sty  fillbyte
     8766   C9 02        1715           cmp  #2         ; test for errors
     8768   90 03        1716           bcc  1$		; no error..
                         1717   
U    876A   4C 0000 "    1718           jmp  error      ; x= job number
                         1719   
     876D   60           1720   1$	rts
                         1721   	.INCLUDE copy
                         1722   	.messg "copy"
                         1723   	.subttl "copy"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 25
"copy"   COPY.SRC

Error Addr  Code          Seq   Source statement

                         1725   ; dskcpy check for type
                         1726   ; and parses special case
                         1727   
     876E   A9 00        1728   dskcpy  lda  #00        ; kill bam
     8770   8D 0A00      1729           sta  bam1
     8773   A9 1F        1730           lda  #lxint
     8775   85 70        1731           sta  linuse     ; free all lindxs
     8777   20 8099      1732           jsr  prscln     ; find ":"
     877A   D0 03        1733           bne  dsk10
                         1734   
     877C   4C 897E      1735           jmp  cmer       ; bad cmnd error, cx=x not allowed
                         1736   
     877F   20 80AC      1737   dsk10   jsr  tc30       ; normal parse
     8782   20 820B      1738           jsr  alldrs     ; put drv's in filtbl
     8785   AD 02A2      1739           lda  image      ; get parse image
     8788   29 55        1740           and  #%01010101 ; val for patt copy
     878A   D0 0F        1741           bne  dsk30      ; must be concat or normal
                         1742   
     878C   AE 0291      1743           ldx  filtbl     ; chk for *
     878F   BD 0200      1744           lda  cmdbuf,x
     8792   C9 2A        1745           cmp  #'*
     8794   D0 05        1746           bne  dsk30
                         1747   
     8796   A9 30        1748   dsk20   lda  #badsyn    ; syntax error
     8798   4C 807C      1749           jmp  cmderr
                         1750   
     879B   AD 02A2      1751   dsk30   lda  image      ; chk for normal
     879E   29 D9        1752           and  #%11011001
     87A0   D0 F4        1753           bne  dsk20
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 26
"copy"   COPY.SRC

Error Addr  Code          Seq   Source statement

                         1755   ; copy file(s) to one file
                         1756   
     87A2   20 82B9      1757   copy    jsr  lookup     ; look ip all files
     87A5   AD 022F      1758           lda  f2cnt
     87A8   C9 03        1759           cmp  #3
     87AA   90 42        1760           bcc  cop10
                         1761   
     87AC   A5 EF        1762           lda  fildrv
     87AE   C5 F0        1763           cmp  fildrv+1
     87B0   D0 3C        1764           bne  cop10
                         1765   
     87B2   A5 EA        1766           lda  entind
     87B4   C5 EB        1767           cmp  entind+1
     87B6   D0 36        1768           bne  cop10
                         1769   
     87B8   A5 E5        1770           lda  entsec
     87BA   C5 E6        1771           cmp  entsec+1
     87BC   D0 30        1772           bne  cop10
                         1773   
     87BE   20 8903      1774           jsr  chkin      ; concat
     87C1   A9 01        1775           lda  #1
     87C3   8D 0230      1776           sta  f2ptr
     87C6   20 8841      1777           jsr  opirfl
     87C9   20 905F      1778           jsr  typfil
     87CC   B0 04        1779           bcs  cop01    	; greater than or equal to relative...
                         1780   
     87CE   C9 02        1781           cmp  #prgtyp
     87D0   D0 05        1782           bne  cop05
                         1783   
     87D2   A9 64        1784   cop01   lda  #mistyp
     87D4   20 807C      1785           jsr  cmderr
                         1786   
     87D7   A9 12        1787   cop05   lda  #iwsa
     87D9   85 52        1788           sta  sa
     87DB   A5 B9        1789           lda  lintab+irsa
     87DD   85 BA        1790           sta  lintab+iwsa
     87DF   A9 FF        1791           lda  #$ff
     87E1   85 B9        1792           sta  lintab+irsa
     87E3   20 98CC      1793           jsr  append
     87E6   A2 02        1794           ldx  #2
     87E8   20 8800      1795           jsr  cy10
     87EB   4C 804C      1796           jmp  endcmd
                         1797   
     87EE   20 87F4      1798   cop10   jsr  cy
     87F1   4C 804C      1799           jmp  endcmd
                         1800   
     87F4   20 891E      1801   cy      jsr  chkio      ; ck fil for existence
     87F7   20 93E0      1802           jsr  opniwr     ; open internal write chnl
     87FA   20 95AB      1803           jsr  addfil     ; add to directory
     87FD   AE 022E      1804           ldx  f1cnt
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 26-1
"copy"   COPY.SRC

Error Addr  Code          Seq   Source statement

     8800   8E 0230      1805   cy10    stx  f2ptr      ; set up read file
     8803   20 8841      1806           jsr  opirfl
     8806   A9 11        1807           lda  #irsa      ; add for rel copy
     8808   85 52        1808           sta  sa
     880A   20 9027      1809           jsr  fndrch
     880D   20 905F      1810           jsr  typfil
     8810   D0 03        1811           bne  cy10a      ; not rel
                         1812   
     8812   20 8895      1813           jsr  cyext
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 27
"copy"   COPY.SRC

Error Addr  Code          Seq   Source statement

     8815   A9 08        1815   cy10a   lda  #eoisnd
     8817   85 51        1816           sta  eoiflg
     8819   4C 881F      1817           jmp  cy20
                         1818   
     881C   20 8E5C      1819   cy15    jsr  pibyte
     881F   20 8876      1820   cy20    jsr  gibyte
     8822   A9 80        1821           lda  #lrf
     8824   20 9CE4      1822           jsr  tstflg
     8827   F0 F3        1823           beq  cy15
                         1824   
     8829   20 905F      1825           jsr  typfil
     882C   F0 03        1826           beq  cy30
                         1827   
     882E   20 8E5C      1828           jsr  pibyte
     8831   AE 0230      1829   cy30    ldx  f2ptr
     8834   E8           1830           inx
     8835   EC 022F      1831           cpx  f2cnt
     8838   90 C6        1832           bcc  cy10       ; more files to copy
                         1833   
     883A   A9 12        1834           lda  #iwsa
     883C   85 52        1835           sta  sa
     883E   4C 999F      1836           jmp  clschn     ; close copy chnl, file
                         1837   
     8841   AE 0230      1838   opirfl  ldx  f2ptr
     8844   AD 022B      1839           lda  dirtrk
     8847   85 4D        1840           sta  track
     8849   B5 E5        1841           lda  entsec,x
     884B   85 4E        1842           sta  sector
     884D   20 93CF      1843           jsr  opnird
     8850   AE 0230      1844           ldx  f2ptr
     8853   B5 EA        1845           lda  entind,x
     8855   20 9422      1846           jsr  setpnt
     8858   AE 0230      1847           ldx  f2ptr
     885B   B5 F4        1848           lda  pattyp,x
     885D   29 07        1849           and  #typmsk
     885F   8D 022D      1850           sta  type
     8862   A9 00        1851           lda  #0
     8864   8D 026F      1852           sta  rec
     8867   20 984D      1853           jsr  opread
     886A   A0 01        1854           ldy  #1
     886C   20 905F      1855           jsr  typfil
     886F   F0 01        1856           beq  opir10
                         1857   
     8871   C8           1858           iny
     8872   98           1859   opir10  tya
     8873   4C 9422      1860           jmp  setpnt
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 28
"copy"   COPY.SRC

Error Addr  Code          Seq   Source statement

     8876   A9 11        1862   gibyte  lda  #irsa
     8878   85 52        1863           sta  sa
     887A   20 92F4      1864   gcbyte  jsr  gbyte
     887D   85 54        1865           sta  data
     887F   A6 50        1866           ldx  lindx
     8881   BD 0234      1867           lda  chnrdy,x
     8884   29 08        1868           and  #eoisnd
     8886   85 51        1869           sta  eoiflg
     8888   D0 0A        1870           bne  gib20
                         1871   
     888A   20 905F      1872           jsr  typfil
     888D   F0 05        1873           beq  gib20
                         1874   
     888F   A9 80        1875           lda  #lrf
     8891   20 9CD5      1876           jsr  setflg
     8894   60           1877   gib20   rts
                         1878   
     8895   20 A15C      1879   cyext   jsr  ssend      ; copy rel rec's
     8898   20 A56E      1880   	jsr  hugerel	; humugo?
     889B   D0 04        1881   	bne  cyext1	; br, nope
                         1882   
     889D   AD 0100      1883   	lda  grpnum	; save grpnum
     88A0   48           1884   	pha
     88A1                1885   cyext1
     88A1   A5 6A        1886           lda  ssind
     88A3   48           1887           pha
     88A4   A5 69        1888           lda  ssnum
     88A6   48           1889           pha
     88A7   A9 12        1890           lda  #iwsa
     88A9   85 52        1891           sta  sa
     88AB   20 9042      1892           jsr  fndwch
     88AE   20 A438      1893   	jsr  adrels
     88B1   85 6B        1894   	sta  relptr
     88B3   68           1895   	pla
     88B4   85 69        1896           sta  ssnum
     88B6   68           1897   	pla
     88B7   85 6A        1898   	sta  ssind
     88B9   20 A56E      1899   	jsr  hugerel
     88BC   D0 04        1900   	bne  cyext2
                         1901   
     88BE   68           1902   	pla
     88BF   8D 0100      1903   	sta  grpnum	; restore group number
     88C2                1904   cyext2
     88C2   4C A2DC      1905   	jmp  addr1
                         1906   	.INCLUDE rename
                         1907           .messg "rename"
                         1908           .subttl "rename"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 29
"rename"   RENAME.SRC

Error Addr  Code          Seq   Source statement

                         1910   ; rename file name in directory
     88C5   20 820B      1911   rename  jsr  alldrs     ; set both drive #'s
     88C8   A5 F0        1912           lda  fildrv+1
     88CA   29 01        1913           and  #1
     88CC   85 F0        1914           sta  fildrv+1
     88CE   C5 EF        1915           cmp  fildrv
     88D0   F0 02        1916           beq  rn10       ; same drive #'s
                         1917   
     88D2   09 80        1918           ora  #$80       ; check both drives for name
     88D4   85 EF        1919   rn10    sta  fildrv
     88D6   20 82B9      1920           jsr  lookup     ; look up both names
     88D9   20 891E      1921           jsr  chkio      ; check for existence
     88DC   A5 E6        1922           lda  entsec+1
     88DE   85 4E        1923           sta  sector
     88E0   20 9D94      1924           jsr  rdab       ; read directory sector
     88E3   20 94ED      1925           jsr  watjob
     88E6   A5 EB        1926           lda  entind+1
     88E8   18           1927           clc     	; set sector index
     88E9   69 03        1928           adc  #3         ; ...+3
     88EB   20 9422      1929           jsr  setpnt
     88EE   20 9F11      1930           jsr  getact
     88F1   A8           1931           tay
     88F2   AE 0291      1932           ldx  filtbl
     88F5   A9 10        1933           lda  #16
     88F7   20 84EE      1934           jsr  trname     ; transfer name
     88FA   20 9D9A      1935           jsr  wrtout     ; write sector out
     88FD   20 94ED      1936           jsr  watjob
     8900   4C 804C      1937           jmp  endcmd
                         1938   
                         1939   ; check i/o file for exist
                         1940   
     8903   A5 F5        1941   chkin   lda  pattyp+1   ; 1st file bears type
     8905   29 07        1942           and  #typmsk
     8907   8D 022D      1943           sta  type
     890A   AE 022F      1944           ldx  f2cnt
     890D   CA           1945   ck10    dex
     890E   EC 022E      1946           cpx  f1cnt
     8911   90 0A        1947           bcc  ck20
                         1948   
     8913   BD 0297      1949           lda  filtrk,x
     8916   D0 F5        1950           bne  ck10
                         1951   
     8918   A9 62        1952           lda  #flntfd    ; input file not found
     891A   4C 807C      1953           jmp  cmderr
                         1954   
     891D   60           1955   ck20    rts
                         1956   
     891E   20 8903      1957   chkio   jsr  chkin
     8921   BD 0297      1958   ck25    lda  filtrk,x
     8924   F0 05        1959           beq  ck30
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 29-1
"rename"   RENAME.SRC

Error Addr  Code          Seq   Source statement

                         1960   
     8926   A9 63        1961           lda  #flexst
     8928   4C 807C      1962           jmp  cmderr
                         1963   
     892B   CA           1964   ck30    dex
     892C   10 F3        1965           bpl  ck25
                         1966   
     892E   60           1967           rts
                         1968   	.INCLUDE memrw
                         1969           .messg "memrw"
                         1970           .subttl "memrw"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 30
"memrw"   MEMRW.SRC

Error Addr  Code          Seq   Source statement

                         1972   ;  memory access commands
                         1973   ;  "-" must be 2nd char
     892F   AD 0201      1974   mem     lda  cmdbuf+1
     8932   C9 2D        1975           cmp  #'-
     8934   D0 48        1976           bne  cmer
                         1977   
     8936   AD 0203      1978           lda  cmdbuf+3   ; set adr in temp
     8939   85 40        1979           sta  temp
     893B   AD 0204      1980           lda  cmdbuf+4
     893E   85 41        1981           sta  temp+1
     8940   A0 00        1982           ldy  #0
     8942   AD 0202      1983           lda  cmdbuf+2
     8945   C9 52        1984           cmp  #'R
     8947   F0 0B        1985           beq  memrd      ; read
                         1986   
     8949   C9 57        1987           cmp  #'W
     894B   F0 36        1988           beq  memwrt     ; write
                         1989   
     894D   C9 45        1990           cmp  #'E
     894F   D0 2D        1991           bne  cmer       ; error
                         1992   
     8951   6C 0040      1993           jmp  (temp)     ; execute
                         1994   
     8954   B1 40        1995   memrd   lda  (temp),y
     8956   85 54        1996           sta  data
     8958   A5 29        1997           lda  cmdsiz
     895A   C9 06        1998           cmp  #6
     895C   90 1A        1999           bcc  m30
                         2000   
     895E   AE 0205      2001           ldx  cmdbuf+5
     8961   CA           2002           dex
     8962   F0 14        2003           beq  m30
                         2004   
     8964   8A           2005           txa
     8965   18           2006           clc
     8966   65 40        2007           adc  temp
     8968   E6 40        2008           inc  temp
     896A   8D 0248      2009           sta  lstchr+errchn
     896D   A5 40        2010           lda  temp
     896F   85 CF        2011           sta  cb+2
     8971   A5 41        2012           lda  temp+1
     8973   85 D0        2013           sta  cb+3
     8975   4C 939F      2014           jmp  ge20
                         2015   
     8978   20 9027      2016   m30     jsr  fndrch
     897B   4C 9396      2017           jmp  ge15
                         2018   
     897E   A9 31        2019   cmer    lda  #badcmd    ; bad command
     8980   4C 807C      2020           jmp  cmderr
                         2021   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 30-1
"memrw"   MEMRW.SRC

Error Addr  Code          Seq   Source statement

     8983   B9 0206      2022   memwrt  lda  cmdbuf+6,y ; write
     8986   91 40        2023           sta  (temp),y   ; transfer from cmdbuf
     8988   C8           2024           iny
     8989   CC 0205      2025           cpy  cmdbuf+5   ; # of bytes to write
     898C   90 F5        2026           bcc  memwrt
                         2027   
     898E   60           2028           rts
                         2029   	.INCLUDE blk
                         2030   	.messg "blk"
                         2031   	.subttl "blk"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 31
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

                         2033   ; user commands
                         2034   
     898F   AC 0201      2035   user    ldy  cmdbuf+1
     8992   C0 30        2036           cpy  #'0
     8994   D0 36        2037           bne  us10       ; 0 resets pntr
                         2038   
     8996   A5 29        2039   	lda  cmdsiz     ; check command size
     8998   C9 03        2040   	cmp  #3
     899A   90 27        2041   	bcc  usrint
                         2042   
     899C   78           2043   	sei
     899D   AD 0202      2044   	lda  cmdbuf+2	; get command
     89A0   85 7C        2045   	sta  switch	; save info
     89A2   29 1F        2046   	and  #$1f
     89A4   AA           2047   	tax		; command info
     89A5   0A           2048   	asl  a
     89A6   A8           2049   	tay
U    89A7   B9 0000 "    2050   	lda  cmdtbb,y
     89AA   85 46        2051   	sta  ip
U    89AC   B9 0000 "    2052   	lda  cmdtbb+1,y
     89AF   85 47        2053   	sta  ip+1
                         2054   
     89B1   20 81F6      2055   	jsr  setlds	; set leds
                         2056   
     89B4   A5 76        2057   	lda  fsflag 	; clear clock bit
     89B6   29 FB        2058   	and  #all-clkin
     89B8   85 76        2059   	sta  fsflag
     89BA   20 89C0      2060   	jsr  burst_doit
     89BD   4C 804C      2061   	jmp  endcmd
                         2062   
     89C0                2063   burst_doit
     89C0   6C 0046      2064   	jmp  (ip)
                         2065   
     89C3                2066   usrint
U    89C3   A9 00   "    2067           lda  #<ublock   ; set default block add
     89C5   85 33        2068           sta  usrjmp
U    89C7   A9 00   "    2069           lda  #>ublock
     89C9   85 34        2070           sta  usrjmp+1
     89CB   60           2071   unused  rts
     89CC                2072   us10
     89CC   20 89D2      2073           jsr  usrexc     ; execute code by table
     89CF   4C 804C      2074           jmp  endcmd
     89D2                2075   usrexc
     89D2   88           2076           dey     	; entry is (((index-1)and$f)*2)
     89D3   98           2077           tya
     89D4   29 0F        2078           and  #$f
     89D6   0A           2079           asl  a
     89D7   A8           2080           tay
     89D8   B1 33        2081           lda  (usrjmp),y
     89DA   85 46        2082           sta  ip
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 31-1
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

     89DC   C8           2083           iny
     89DD   B1 33        2084           lda  (usrjmp),y
     89DF   85 47        2085           sta  ip+1
     89E1   6C 0046      2086           jmp  (ip)
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 32
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

                         2088   ; open direct access buffer
                         2089   ;  from open "#"
     89E4   A5 52        2090   opnblk  lda  sa         ; sa is destroyed by this patch
     89E6   48           2091           pha
     89E7   20 84AE      2092           jsr  autoi      ; init disk for proper channel assignment
     89EA   68           2093           pla     	; restore sa
     89EB   85 52        2094           sta  sa
     89ED   A6 29        2095           ldx  cmdsiz
     89EF   CA           2096           dex
     89F0   D0 0D        2097           bne  ob10
                         2098   
     89F2   A9 01        2099           lda  #1         ; get any buffer
     89F4   20 915A      2100           jsr  getrch
     89F7   4C 8A35      2101           jmp  ob30
                         2102   
     89FA   A9 70        2103   ob05    lda  #nochnl
     89FC   4C 807C      2104           jmp  cmderr
                         2105   
     89FF   A0 01        2106   ob10    ldy  #1         ; buffer # is requested
     8A01   20 8AAC      2107           jsr  bp05
     8A04   AE 029C      2108           ldx  filsec
     8A07   E0 08        2109           cpx  #bfcnt+1   ; must be less than or equal to buffer count
     8A09   B0 EF        2110           bcs  ob05
                         2111   
     8A0B   A9 00        2112           lda  #0
     8A0D   85 40        2113           sta  temp
     8A0F   38           2114           sec
     8A10   26 40        2115   ob15    rol  temp
     8A12   CA           2116           dex
     8A13   10 FB        2117           bpl  ob15
                         2118   
     8A15   A5 40        2119           lda  temp
     8A17   25 6D        2120           and  bufuse
     8A19   D0 DF        2121           bne  ob05       ; buffer is used
                         2122   
     8A1B   A5 40        2123           lda  temp
     8A1D   05 6D        2124           ora  bufuse     ; set buffer as used
     8A1F   85 6D        2125           sta  bufuse
     8A21   A9 00        2126           lda  #0         ; set up channel
     8A23   20 915A      2127           jsr  getrch
     8A26   A6 50        2128           ldx  lindx
     8A28   AD 029C      2129           lda  filsec
     8A2B   95 D1        2130           sta  buf0,x
     8A2D   AA           2131           tax
     8A2E   A9 00        2132           lda  #0
     8A30   95 02        2133           sta  jobs,x
     8A32   9D 0272      2134           sta  lstjob,x
     8A35   A6 52        2135   ob30    ldx  sa
     8A37   B5 A8        2136           lda  lintab,x   ; set lindx table
     8A39   09 40        2137           ora  #$40
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 32-1
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

     8A3B   95 A8        2138           sta  lintab,x
     8A3D   A4 50        2139           ldy  lindx
     8A3F   A9 FF        2140           lda  #$ff
     8A41   99 0242      2141           sta  lstchr,y
     8A44   A9 89        2142           lda  #rndrdy
     8A46   99 0234      2143           sta  chnrdy,y   ; set channel ready
     8A49   B9 00D1      2144           lda  buf0,y
     8A4C   99 023B      2145           sta  chndat,y   ; buffer # as 1st char
     8A4F   0A           2146           asl  a
     8A50   AA           2147           tax
     8A51   A9 01        2148           lda  #1
     8A53   95 BB        2149           sta  buftab,x
     8A55   A9 0E        2150           lda  #dirtyp+dirtyp
     8A57   99 00F9      2151           sta  filtyp,y   ; set direct file type
     8A5A   4C 804C      2152           jmp  endcmd
                         2153   
     8A5D   A0 00        2154   block   ldy  #0         ; block commands
     8A5F   A2 00        2155           ldx  #0
     8A61   A9 2D        2156   	lda  #'-        ; separates cmd from subcmd
     8A63   20 811C      2157   	jsr  parse      ; locate sub-cmd
     8A66   D0 0A        2158           bne  blk40
                         2159   
     8A68   A9 31        2160   blk10   lda  #badcmd
     8A6A   4C 807C      2161           jmp  cmderr
                         2162   
     8A6D   A9 30        2163   blk30   lda  #badsyn
     8A6F   4C 807C      2164           jmp  cmderr
                         2165   
     8A72   8A           2166   blk40   txa
     8A73   D0 F8        2167           bne  blk30
                         2168   
     8A75   A2 09        2169           ldx  #nbcmds-1   ; find command
     8A77   B9 0200      2170           lda  cmdbuf,y
     8A7A   DD 8C61      2171   blk50   cmp  bctab,x
     8A7D   F0 05        2172           beq  blk60
                         2173   
     8A7F   CA           2174           dex
     8A80   10 F8        2175           bpl  blk50
                         2176   
     8A82   30 E4        2177           bmi  blk10
                         2178   
     8A84   8A           2179   blk60   txa
     8A85   09 80        2180           ora  #$80
     8A87   8D 022A      2181           sta  cmdnum
     8A8A   20 8A9F      2182           jsr  blkpar     ; parse parms
     8A8D   AD 022A      2183           lda  cmdnum
     8A90   0A           2184           asl  a
     8A91   AA           2185           tax
     8A92   BD 8C6C      2186           lda  bcjmp+1,x
     8A95   85 41        2187           sta  temp+1
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 32-2
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

     8A97   BD 8C6B      2188           lda  bcjmp,x
     8A9A   85 40        2189           sta  temp
     8A9C   6C 0040      2190           jmp  (temp)     ; goto command
                         2191   
     8A9F   A0 00        2192   blkpar  ldy  #0         ; parse block parms
     8AA1   A2 00        2193           ldx  #0
     8AA3   A9 3A        2194           lda  #':
     8AA5   20 811C      2195           jsr  parse
     8AA8   D0 02        2196           bne  bp05       ; found ":"
                         2197   
     8AAA   A0 03        2198           ldy  #3         ; else char #3 is beginning
     8AAC   B9 0200      2199   bp05    lda  cmdbuf,y
V    8AAF   C9 00        2200           cmp  #'
     8AB1   F0 08        2201           beq  bp10
                         2202   
     8AB3   C9 1D        2203           cmp  #29        ; skip character
     8AB5   F0 04        2204           beq  bp10
                         2205   
     8AB7   C9 2C        2206           cmp  #',
     8AB9   D0 06        2207           bne  bp20
                         2208   
     8ABB   C8           2209   bp10    iny
     8ABC   C4 29        2210           cpy  cmdsiz
     8ABE   90 EC        2211           bcc  bp05
                         2212   
     8AC0   60           2213           rts     	; that's all
                         2214   
     8AC1   20 8AD0      2215   bp20    jsr  aschex
     8AC4   EE 022E      2216           inc  f1cnt
     8AC7   AC 0230      2217           ldy  f2ptr
     8ACA   E0 04        2218           cpx  #mxfils-1
     8ACC   90 ED        2219           bcc  bp10
                         2220   
     8ACE   B0 9D        2221           bcs  blk30      ; bad syntax
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 33
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

                         2223   ; convert ascii to hex (binary)
                         2224   ;  & store conversion in tables
                         2225   ;  .y= ptr into cmdbuf
                         2226   
     8AD0   A9 00        2227   aschex  lda  #0
     8AD2   85 40        2228           sta  temp
     8AD4   85 41        2229           sta  temp+1
     8AD6   85 43        2230           sta  temp+3
     8AD8   A2 FF        2231           ldx  #$ff
     8ADA   B9 0200      2232   ah10    lda  cmdbuf,y   ; test for dec #
     8ADD   C9 40        2233           cmp  #$40
     8ADF   B0 17        2234           bcs  ah20       ; non-numeric terminates
                         2235   
     8AE1   C9 30        2236           cmp  #$30
     8AE3   90 13        2237           bcc  ah20       ; non-numeric
                         2238   
     8AE5   29 0F        2239           and  #$f
     8AE7   48           2240           pha
     8AE8   A5 41        2241           lda  temp+1     ; shift digits (*10)
     8AEA   85 42        2242           sta  temp+2
     8AEC   A5 40        2243           lda  temp
     8AEE   85 41        2244           sta  temp+1
     8AF0   68           2245           pla
     8AF1   85 40        2246           sta  temp
     8AF3   C8           2247           iny
     8AF4   C4 29        2248           cpy  cmdsiz
     8AF6   90 E2        2249           bcc  ah10       ; still in string
                         2250   
     8AF8   8C 0230      2251   ah20    sty  f2ptr      ; convert digits to...
     8AFB   18           2252           clc     	; ...binary by dec table
     8AFC   A9 00        2253           lda  #0
     8AFE   E8           2254   ah30    inx
     8AFF   E0 03        2255           cpx  #3
     8B01   B0 0F        2256           bcs  ah40
                         2257   
     8B03   B4 40        2258           ldy  temp,x
     8B05   88           2259   ah35    dey
     8B06   30 F6        2260           bmi  ah30
                         2261   
     8B08   7D 8B20      2262           adc  dectab,x
     8B0B   90 F8        2263           bcc  ah35
                         2264   
     8B0D   18           2265           clc
     8B0E   E6 43        2266           inc  temp+3
     8B10   D0 F3        2267           bne  ah35
                         2268   
     8B12   48           2269   ah40    pha
     8B13   AE 022E      2270           ldx  f1cnt
     8B16   A5 43        2271           lda  temp+3
     8B18   9D 0297      2272           sta  filtrk,x   ; store result in table
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 33-1
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

     8B1B   68           2273           pla
     8B1C   9D 029C      2274           sta  filsec,x
     8B1F   60           2275           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 34
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

     8B20   01 0A 64     2277   dectab  .byte 1,10,100  ; decimal table
     8B23   20 84AE      2278   blkfre  jsr  autoi	; init if neccessary
     8B26   20 8C32      2279   	jsr  blktst     ; block-free
     8B29   20 B546      2280           jsr  frets
     8B2C   4C 8050      2281           jmp  endsav
                         2282   
     8B2F   20 84AE      2283   blkalc  jsr  autoi	; init if neccessary
     8B32   20 8C32      2284   	jsr  blktst
     8B35   A5 4E        2285           lda  sector
     8B37   48           2286           pha
     8B38   20 B746      2287           jsr  getsec
     8B3B   F0 0B        2288           beq  ba15       ; none greater this trk
                         2289   
     8B3D   68           2290           pla
     8B3E   C5 4E        2291           cmp  sector
     8B40   D0 19        2292           bne  ba30       ; requested sec not avail
                         2293   
     8B42   20 B572      2294           jsr  wused
     8B45   4C 8050      2295           jmp  endsav
     8B48   68           2296   ba15    pla     	; pop stack
     8B49   A9 00        2297   ba20    lda  #0
     8B4B   85 4E        2298           sta  sector
     8B4D   E6 4D        2299           inc  track
     8B4F   A5 4D        2300           lda  track
     8B51   CD 022C      2301           cmp  maxtrk
     8B54   B0 0A        2302           bcs  ba40       ; gone all the way
                         2303   
     8B56   20 B746      2304           jsr  getsec
     8B59   F0 EE        2305           beq  ba20
                         2306   
     8B5B   A9 65        2307   ba30    lda  #noblk
U    8B5D   20 0000 "    2308           jsr  cmder2
                         2309   
     8B60   A9 65        2310   ba40    lda  #noblk
     8B62   20 807C      2311           jsr  cmderr     ; t=0,s=0 :none left
                         2312   ; block read subs
                         2313   
     8B65   20 8C2F      2314   blkrd2  jsr  bkotst     ; test parms
     8B68   4C 93BD      2315           jmp  drtrd
                         2316   
     8B6B   20 9069      2317   getsim  jsr  getpre     ; get byte w/o inc
     8B6E   A1 BB        2318           lda  (buftab,x)
     8B70   60           2319           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 35
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

                         2321   ; block read
                         2322   
     8B71   20 8B65      2323   blkrd3  jsr  blkrd2
     8B74   A9 00        2324   blkrd4  lda  #0
     8B76   20 9422      2325           jsr  setpnt
     8B79   20 8B6B      2326           jsr  getsim     ; y=lindx
     8B7C   99 0242      2327           sta  lstchr,y
     8B7F   A9 89        2328           lda  #rndrdy
     8B81   99 0234      2329           sta  chnrdy,y
     8B84   60           2330           rts
                         2331   
     8B85   20 8B71      2332   blkrd   jsr  blkrd3
     8B88   20 9348      2333           jsr  rnget1
     8B8B   4C 804C      2334           jmp  endcmd
                         2335   
                         2336   
                         2337   ;user direct read, lstchr=$ff
                         2338   
     8B8E   20 8C44      2339   xublkrd jsr  xbkotst
     8B91   20 93BD      2340           jsr  drtrd
     8B94   20 8B74      2341           jsr  blkrd4
     8B97   4C 8BA0      2342   	jmp  ublkrd1
                         2343   
     8B9A   20 8A9F      2344   ublkrd  jsr  blkpar
     8B9D   20 8B71      2345           jsr  blkrd3
     8BA0   B9 0242      2346   ublkrd1 lda  lstchr,y
     8BA3   99 023B      2347           sta  chndat,y
     8BA6   A9 FF        2348           lda  #$ff
     8BA8   99 0242      2349           sta  lstchr,y
     8BAB   4C 804C      2350           jmp  endcmd     ; (rts)
                         2351   
                         2352   ;block-write
                         2353   
     8BAE   20 8C2F      2354   blkwt   jsr  bkotst
     8BB1   20 9442      2355           jsr  getpnt
     8BB4   A8           2356           tay
     8BB5   88           2357           dey
     8BB6   C9 02        2358           cmp  #2
     8BB8   B0 02        2359           bcs  bw10
                         2360   
     8BBA   A0 01        2361           ldy  #1
     8BBC   A9 00        2362   bw10    lda  #0         ; set record size
     8BBE   20 9422      2363           jsr  setpnt
     8BC1   98           2364           tya
     8BC2   20 8EB1      2365           jsr  putbyt
     8BC5   8A           2366           txa
     8BC6   48           2367           pha
     8BC7   20 93C1      2368           jsr  drtwrt     ; write block
     8BCA   68           2369           pla
     8BCB   AA           2370           tax
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 35-1
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

     8BCC   A4 50        2371           ldy  lindx
     8BCE   4C 8C09      2372           jmp  blkp4
                         2373   
                         2374   ;user dirct write, no lstchr, no ts check
                         2375   
     8BD1   20 8C44      2376   xublkwt jsr  xbkotst
     8BD4   4C 8BDD      2377           jmp  ublkwt1
                         2378   
                         2379   ;user dirct write, no lstchr
                         2380   
     8BD7   20 8A9F      2381   ublkwt  jsr  blkpar
     8BDA   20 8C2F      2382           jsr  bkotst
     8BDD   20 93C1      2383   ublkwt1 jsr  drtwrt
     8BE0   4C 804C      2384           jmp  endcmd
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 36
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

                         2386   ;in .file vector:
                         2387   
     8BE3   20 8B65      2388   blkexc  jsr  blkrd2     ; read block & execute
     8BE6   A9 00        2389           lda  #0
     8BE8   85 40        2390           sta  temp
     8BEA   A6 6C        2391           ldx  jobnum
     8BEC   BD 01F1      2392           lda  bufind,x
     8BEF   85 41        2393           sta  temp+1
     8BF1   20 8BF7      2394           jsr  be10       ; indirect jsr
     8BF4   4C 804C      2395           jmp  endcmd
                         2396   
     8BF7   6C 0040      2397   be10    jmp  (temp)
                         2398   
     8BFA   20 8C0F      2399   blkptr  jsr  buftst     ; set buffer pointer
     8BFD   A5 6C        2400           lda  jobnum
     8BFF   0A           2401           asl  a
     8C00   AA           2402           tax
     8C01   AD 029D      2403           lda  filsec+1
     8C04   95 BB        2404           sta  buftab,x
     8C06   20 9069      2405           jsr  getpre
     8C09   20 934A      2406   blkp4   jsr  rnget2     ; set up get
     8C0C   4C 804C      2407           jmp  endcmd
                         2408   
     8C0F   A6 67        2409   buftst  ldx  f1ptr      ; test allocated buf
     8C11   E6 67        2410           inc  f1ptr      ; ...related to sa
     8C13   BD 029C      2411           lda  filsec,x
     8C16   A8           2412           tay
     8C17   88           2413           dey
     8C18   88           2414           dey
     8C19   C0 0D        2415           cpy  #$d        ;  set limit to # of sas
     8C1B   90 05        2416           bcc  bt20
                         2417   
     8C1D   A9 70        2418   bt15    lda  #nochnl
     8C1F   4C 807C      2419           jmp  cmderr
                         2420   
     8C22   85 52        2421   bt20    sta  sa
     8C24   20 9027      2422           jsr  fndrch
     8C27   B0 F4        2423           bcs  bt15
                         2424   
     8C29   20 9F11      2425           jsr  getact
     8C2C   85 6C        2426           sta  jobnum
     8C2E   60           2427           rts
                         2428   
     8C2F   20 8C0F      2429   bkotst  jsr  buftst     ; test parms
     8C32   A6 67        2430   blktst  ldx  f1ptr      ; test legal block and
     8C34   BD 029E      2431           lda  filsec+2,x
     8C37   85 4E        2432           sta  sector
     8C39   BD 029D      2433           lda  filsec+1,x
     8C3C   85 4D        2434           sta  track
     8C3E   20 94B5      2435           jsr  tschk
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 36-1
"blk"   BLK.SRC

Error Addr  Code          Seq   Source statement

     8C41   4C 81F6      2436           jmp  setlds     ; (rts)
                         2437   
     8C44   20 8C0F      2438   xbkotst	jsr  buftst     ; test parms
     8C47   A6 67        2439   	ldx  f1ptr      ; set track and sector
     8C49   BD 029E      2440           lda  filsec+2,x
     8C4C   85 4E        2441           sta  sector
     8C4E   BD 029D      2442           lda  filsec+1,x
     8C51   85 4D        2443           sta  track
     8C53   20 81F6      2444           jsr  setlds
     8C56   A9 40        2445   	lda  #bit6
     8C58   8D 02A8      2446   	sta  jobrtn
     8C5B   60           2447   	rts
                         2448   
     8C5C                2449   allocbuf
     8C5C   05 6D        2450   	ora  bufuse
     8C5E   85 6D        2451   	sta  bufuse
     8C60   60           2452   	rts
                         2453   
                         2454   
     8C61   41 46 52     2455   bctab    .byt  'AFRWEP',$d2,$d7,'?','*'
     8C64   57 45 50 
     8C67   D2 D7 3F 
     8C6A   2A 
            =000A        2456   nbcmds   =*-bctab
     8C6B                2457   bcjmp
     8C6B   8B2F         2458   	.word blkalc    ; block-allocate
     8C6D   8B23         2459   	.word blkfre    ; block-free
     8C6F   8B85         2460   	.word blkrd     ; block-read
     8C71   8BAE         2461   	.word blkwt     ; block-write
     8C73   8BE3         2462   	.word blkexc    ; block-execute
     8C75   8BFA         2463   	.word blkptr    ; block-pointer
     8C77   8B8E         2464   	.word xublkrd  	; user read no tschk
     8C79   8BD1         2465   	.word xublkwt   ; user write no tschk
     8C7B   8C7F         2466   	.word blkme
     8C7D   8C84         2467   	.word blkwif
                         2468   
                         2469   
     8C7F   A9 79        2470   blkme	lda  #$79
     8C81   4C A867      2471   	jmp  errts0
                         2472   
     8C84   A9 7A        2473   blkwif	lda  #$7a
     8C86   4C A867      2474   	jmp  errts0
                         2475   	.INCLUDE fndrel
                         2476           .messg "fndrel"
                         2477   	.subttl "fndrel"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 37
"fndrel"   FNDREL.SRC

Error Addr  Code          Seq   Source statement

                         2479   ;********************************
                         2480   ;*
                         2481   ;* find relative file
                         2482   ;*
                         2483   ;* version 10
                         2484   ;*
                         2485   ;*
                         2486   ;* inputs
                         2487   ;*  recl   - 1byte=lo record #
                         2488   ;*  rech   - 1byte=hi record #
                         2489   ;*  rs - 1byte=record size
                         2490   ;*  recptr - 1byte=first byte
                         2491   ;*            wanted from record
                         2492   ;*
                         2493   ;* outputs
                         2494   ;*  ssnum  - 1byte=side sector #
                         2495   ;*  ssind  - 1byte=index into ss
                         2496   ;*  relptr - 1byte=ptr to first
                         2497   ;*            byte wanted
                         2498   ;*
                         2499   ;********************************
                         2500   ;
                         2501   ;
     8C89   20 8CC1      2502   fndrel  jsr  mulply     ; result=rn*rs+rp
     8C8C   20 8D06      2503           jsr  div254     ; divide by 254
     8C8F   A5 60        2504           lda  accum+1    ; save remainder
     8C91   85 6B        2505           sta  relptr
     8C93   20 8D09      2506           jsr  div120     ; divide by 120
     8C96   E6 6B        2507           inc  relptr
     8C98   E6 6B        2508           inc  relptr
     8C9A   20 A56E      2509   	jsr  hugerel
     8C9D   F0 0D        2510   	beq  fndre1	; br, big
                         2511   
     8C9F   A5 5B        2512           lda  result     ; save quotient
     8CA1   85 69        2513           sta  ssnum
     8CA3   A5 60        2514           lda  accum+1    ; save remainder
     8CA5   0A           2515           asl  a          ; calc index into ss
     8CA6   18           2516           clc
     8CA7   69 10        2517           adc  #16        ; skip link table
     8CA9   85 6A        2518           sta  ssind
     8CAB   60           2519           rts
     8CAC                2520   fndre1
     8CAC   A5 60        2521   	lda  accum+1
     8CAE   0A           2522   	asl  a
     8CAF   18           2523   	clc
     8CB0   69 10        2524   	adc  #16
     8CB2   85 6A        2525   	sta  ssind	; steps to figure grpnum
     8CB4   20 8D0C      2526   	jsr  div006
     8CB7   A5 60        2527   	lda  accum+1
     8CB9   85 69        2528   	sta  ssnum
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 37-1
"fndrel"   FNDREL.SRC

Error Addr  Code          Seq   Source statement

     8CBB   A5 5B        2529   	lda  result
     8CBD   8D 0100      2530   	sta  grpnum
     8CC0   60           2531   	rts
                         2532   
                         2533   
                         2534   ; multiply
                         2535   
                         2536   ; result=recnum*rs+recptr
                         2537   
                         2538   ;  destroys a,x
                         2539   
     8CC1   20 8D38      2540   mulply  jsr  zerres     ; result=0
     8CC4   85 62        2541           sta  accum+3    ; a=0
     8CC6   A6 50        2542           ldx  lindx      ; get index
     8CC8   BD 0249      2543           lda  recl,x
     8CCB   85 60        2544           sta  accum+1
     8CCD   BD 0250      2545           lda  rech,x
     8CD0   85 61        2546           sta  accum+2
     8CD2   D0 04        2547           bne  mul25      ; adjust for rec #1 &...
     8CD4   A5 60        2548           lda  accum+1    ; ...#0 = 1st rec
     8CD6   F0 0B        2549           beq  mul50
     8CD8   A5 60        2550   mul25   lda  accum+1
     8CDA   38           2551           sec
     8CDB   E9 01        2552           sbc  #1
     8CDD   85 60        2553           sta  accum+1
     8CDF   B0 02        2554           bcs  mul50
     8CE1   C6 61        2555           dec  accum+2
     8CE3                2556   mul50
     8CE3   BD 025E      2557           lda  rs,x       ; copy recsiz
     8CE6   85 40        2558           sta  temp
     8CE8   46 40        2559   mul100  lsr  temp       ; do an add ?
     8CEA   90 03        2560           bcc  mul200     ; no
     8CEC   20 8D4C      2561           jsr  addres     ; result=result+accum+1,2,3
     8CEF   20 8D44      2562   mul200  jsr  accx2      ; 2*(accum+1,2,3)
     8CF2   A5 40        2563           lda  temp       ; done ?
     8CF4   D0 F2        2564           bne  mul100     ; no
     8CF6   A5 68        2565           lda  recptr     ; add in last bit
     8CF8   18           2566           clc
     8CF9   65 5B        2567           adc  result
     8CFB   85 5B        2568           sta  result
     8CFD   90 06        2569           bcc  mul400     ; skip no carry
     8CFF   E6 5C        2570           inc  result+1
     8D01   D0 02        2571           bne  mul400
     8D03   E6 5D        2572           inc  result+2
     8D05   60           2573   mul400  rts
                         2574   
                         2575   
                         2576   
                         2577   ; divide
                         2578   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 37-2
"fndrel"   FNDREL.SRC

Error Addr  Code          Seq   Source statement

                         2579   ; result=quotient ,accum+1=remainder
                         2580   
                         2581   ;  destroys a,x
                         2582   
     8D06   A9 FE        2583   div254  lda  #254       ; divide by 254
     8D08   2C           2584   	.byte skip2     ; skip two bytes
     8D09   A9 78        2585   div120  lda  #120       ; divide by 120
     8D0B   2C           2586           .byte skip2
     8D0C                2587   div006
     8D0C   A9 06        2588           lda  #6         ; divide by 6
     8D0E   85 40        2589           sta  temp       ; 8 bit divisor
     8D10   A9 00        2590           lda  #0
     8D12   85 60        2591           sta  accum+1
     8D14   85 61        2592           sta  accum+2
     8D16   A2 18        2593           ldx  #24
     8D18                2594   divid1
     8D18   06 5B        2595           asl  result
     8D1A   26 5C        2596           rol  result+1
     8D1C   26 5D        2597           rol  result+2
     8D1E   26 60        2598           rol  accum+1
     8D20   26 61        2599           rol  accum+2
     8D22   A5 60        2600           lda  accum+1
     8D24   38           2601           sec
     8D25   E5 40        2602           sbc  temp
     8D27   A8           2603           tay     	; save result
     8D28   A5 61        2604           lda  accum+2
     8D2A   E9 00        2605           sbc  #0
     8D2C   90 06        2606           bcc  divid2     ; br, if temp > dividend
     8D2E   E6 5B        2607           inc  result
     8D30   85 61        2608           sta  accum+2
     8D32   84 60        2609           sty  accum+1
     8D34                2610   divid2
     8D34   CA           2611           dex
     8D35   D0 E1        2612           bne  divid1
     8D37   60           2613           rts
                         2614   
                         2615   ; zero result
                         2616   
     8D38   A9 00        2617   zerres  lda  #0
     8D3A   85 5B        2618           sta  result
     8D3C   85 5C        2619           sta  result+1
     8D3E   85 5D        2620           sta  result+2
     8D40   60           2621           rts
                         2622   
                         2623   ; multiply accum by 4
     8D41   20 8D44      2624   accx4   jsr accx2
                         2625   ;
                         2626   
                         2627   ; multiply accum by 2
                         2628   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 37-3
"fndrel"   FNDREL.SRC

Error Addr  Code          Seq   Source statement

     8D44   18           2629   accx2   clc
     8D45   26 60        2630   acc200  rol  accum+1
     8D47   26 61        2631           rol  accum+2
     8D49   26 62        2632           rol  accum+3
     8D4B   60           2633           rts
                         2634   
                         2635   
                         2636   
                         2637   ; add accum to result
                         2638   
                         2639   ;  result=result+accum+1,2,3
                         2640   
     8D4C   18           2641   addres  clc
     8D4D   A2 FD        2642           ldx  #$fd
     8D4F   B5 5E        2643   add100  lda  result+3,x
     8D51   75 63        2644           adc  accum+4,x
     8D53   95 5E        2645           sta  result+3,x
     8D55   E8           2646           inx
     8D56   D0 F7        2647           bne  add100
     8D58   60           2648           rts
                         2649   	.INCLUDE tst2
                         2650           .messg "tst2"
                         2651           .subttl "tst2"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 38
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8D59   A2 00        2653   lruint  ldx  #0         ; init lru table
     8D5B   8A           2654   lruilp  txa
     8D5C   95 DF        2655           sta  lrutbl,x
     8D5E   E8           2656           inx
     8D5F   E0 05        2657           cpx  #cmdchn
     8D61   D0 F8        2658           bne  lruilp
                         2659   
     8D63   A9 05        2660   	lda  #cmdchn
     8D65   95 DF        2661           sta  lrutbl,x
     8D67   60           2662           rts
                         2663   
                         2664   ; least recently used table update
                         2665   ; input parms: lindx-current chnl
                         2666   ; output parms: lrutbl-update
                         2667   
     8D68   A0 05        2668   lruupd  ldy  #cmdchn
     8D6A   A6 50        2669           ldx  lindx
     8D6C   B9 00DF      2670   lrulp1  lda  lrutbl,y
     8D6F   96 DF        2671           stx  lrutbl,y
     8D71   C5 50        2672           cmp  lindx
     8D73   F0 07        2673           beq  lruext
                         2674   
     8D75   88           2675           dey
     8D76   30 E1        2676           bmi  lruint
                         2677   
     8D78   AA           2678           tax
     8D79   4C 8D6C      2679           jmp  lrulp1
                         2680   
     8D7C   60           2681   lruext  rts
                         2682   
                         2683   ; double buffer
                         2684   ; rtn to switch the active and
                         2685   ; inactive buffers
     8D7D                2686   dblbuf
     8D7D   20 8D68      2687           jsr  lruupd     ; update table
     8D80   A6 50        2688           ldx  lindx
     8D82   B5 D1        2689           lda  buf0,x
     8D84   30 02        2690           bmi  dblget
                         2691   
     8D86   B5 D8        2692           lda  buf1,x
     8D88   C9 FF        2693   dblget  cmp  #$ff
     8D8A   F0 18        2694           beq  dbl00
                         2695   
     8D8C   B5 D1        2696           lda  buf0,x     ; toggle the buffer
     8D8E   49 80        2697           eor  #$80
     8D90   95 D1        2698           sta  buf0,x
     8D92   48           2699           pha
     8D93   B5 D8        2700           lda  buf1,x
     8D95   49 80        2701           eor  #$80
     8D97   95 D8        2702           sta  buf1,x
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 38-1
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8D99   A8           2703           tay
     8D9A   68           2704           pla     	; get active buffer
     8D9B   10 01        2705           bpl  dbljmp
                         2706   
     8D9D   98           2707           tya
     8D9E   29 BF        2708   dbljmp  and  #$bf
     8DA0   AA           2709           tax
     8DA1   4C 94ED      2710           jmp  watjob
     8DA4                2711   dbl00
     8DA4   B5 D1        2712           lda  buf0,x
     8DA6   10 02        2713           bpl  dbldrv
                         2714   
     8DA8   B5 D8        2715           lda  buf1,x
     8DAA   29 BF        2716   dbldrv  and  #$bf
     8DAC   A8           2717           tay
     8DAD   20 9204      2718           jsr  getbuf
     8DB0   10 05        2719           bpl  dbl01
                         2720   
     8DB2   A9 70        2721           lda  #nochnl    ; no buffers to steal
     8DB4   4C 807C      2722           jmp  cmderr
                         2723   
     8DB7   A6 50        2724   dbl01   ldx  lindx      ; getbuf corrupts x
     8DB9   09 80        2725           ora  #$80
     8DBB   B4 D1        2726           ldy  buf0,x
     8DBD   10 04        2727           bpl  dblput
                         2728   
     8DBF   95 D1        2729           sta  buf0,x
     8DC1   30 02        2730           bmi  dblpt1     ; bra
                         2731   
     8DC3   95 D8        2732   dblput  sta  buf1,x
     8DC5   A5 4D        2733   dblpt1  lda  track
     8DC7   48           2734           pha
     8DC8   A5 4E        2735           lda  sector
     8DCA   48           2736           pha
     8DCB   A9 01        2737           lda  #1
     8DCD   85 42        2738           sta  temp+2
     8DCF   B5 D1        2739           lda  buf0,x
     8DD1   10 02        2740           bpl  dbldrd
                         2741   
     8DD3   B5 D8        2742           lda  buf1,x
     8DD5   29 BF        2743   dbldrd  and  #$bf
     8DD7   A8           2744           tay
     8DD8   B9 01F1      2745           lda  bufind,y
     8DDB   85 43        2746           sta  temp+3
     8DDD   A0 00        2747           ldy  #0
     8DDF   B1 42        2748           lda  (temp+2),y
     8DE1   85 4E        2749           sta  sector
     8DE3   A9 00        2750           lda  #0
     8DE5   85 42        2751           sta  temp+2
     8DE7   B5 D1        2752           lda  buf0,x
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 38-2
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8DE9   10 02        2753           bpl  dbldr1
                         2754   
     8DEB   B5 D8        2755           lda  buf1,x
     8DED   29 BF        2756   dbldr1  and  #$bf
     8DEF   A8           2757           tay
     8DF0   B9 01F1      2758           lda  bufind,y
     8DF3   85 43        2759           sta  temp+3
     8DF5   A0 00        2760           ldy  #0
     8DF7   B1 42        2761           lda  (temp+2),y
     8DF9   85 4D        2762           sta  track
     8DFB   F0 2A        2763           beq  dbl10
                         2764   
     8DFD   20 905F      2765           jsr  typfil
     8E00   F0 0B        2766           beq  dbl05      ; it's rel
                         2767   
     8E02   20 9CE9      2768           jsr  tstwrt
     8E05   D0 06        2769           bne  dbl05      ; read ahead
                         2770   
     8E07   20 8E4D      2771           jsr  tglbuf     ; just switch on write
     8E0A   4C 8E1E      2772           jmp  dbl08
                         2773   
     8E0D                2774   dbl05
     8E0D   A6 50        2775           ldx  lindx      ; toggle active buffers
     8E0F   B5 D1        2776           lda  buf0,x
     8E11   49 80        2777           eor  #$80
     8E13   95 D1        2778           sta  buf0,x
     8E15   B5 D8        2779           lda  buf1,x
     8E17   49 80        2780           eor  #$80
     8E19   95 D8        2781           sta  buf1,x
     8E1B   20 9D94      2782           jsr  rdab
     8E1E                2783   dbl08
     8E1E   68           2784           pla
     8E1F   85 4E        2785           sta  sector
     8E21   68           2786           pla
     8E22   85 4D        2787           sta  track
     8E24   4C 8E30      2788           jmp  dbl20
     8E27                2789   dbl10
     8E27   68           2790           pla
     8E28   85 4E        2791           sta  sector
     8E2A   68           2792           pla
     8E2B   85 4D        2793           sta  track
     8E2D   20 8E4D      2794   dbl15   jsr  tglbuf
     8E30   20 9F11      2795   dbl20   jsr  getact
     8E33   AA           2796           tax
     8E34   4C 94ED      2797           jmp  watjob
                         2798   ;
                         2799   ; there are no buffers to steal
                         2800   ;
     8E37                2801   dbl30
     8E37   A9 70        2802           lda  #nochnl
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 38-3
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8E39   4C 807C      2803           jmp  cmderr
                         2804   ;
                         2805   ;********************************
                         2806   ;
     8E3C                2807   dbset
     8E3C   20 8D68      2808           jsr  lruupd
     8E3F   20 9F33      2809           jsr  getina
     8E42   D0 08        2810           bne  dbs10
                         2811   
     8E44   20 9204      2812           jsr  getbuf
     8E47   30 EE        2813           bmi  dbl30      ; no buffers
                         2814   
     8E49   4C 9F3E      2815           jmp  putina     ; store inactive buff #
     8E4C                2816   dbs10
     8E4C   60           2817           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 39
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

                         2819   ; toggle the inactive and active
                         2820   ; buffers. input parms: lindx-chnl#
                         2821   ;
     8E4D   A6 50        2822   tglbuf  ldx  lindx
     8E4F   B5 D1        2823           lda  buf0,x
     8E51   49 80        2824           eor  #$80
     8E53   95 D1        2825           sta  buf0,x
     8E55   B5 D8        2826           lda  buf1,x
     8E57   49 80        2827           eor  #$80
     8E59   95 D8        2828           sta  buf1,x
     8E5B   60           2829           rts
                         2830   
     8E5C   A2 12        2831   pibyte  ldx  #iwsa
     8E5E   86 52        2832           stx  sa
     8E60   20 9042      2833           jsr  fndwch
     8E63   20 81F6      2834           jsr  setlds
     8E66   20 905F      2835           jsr  typfil
     8E69   90 05        2836           bcc  pbyte
                         2837   
     8E6B   A9 20        2838           lda  #ovrflo
     8E6D   20 9CDB      2839           jsr  clrflg
     8E70   A5 52        2840   pbyte   lda  sa
     8E72   C9 0F        2841           cmp  #15
     8E74   F0 23        2842           beq  l42
                         2843   
     8E76   D0 08        2844           bne  l40
                         2845   
                         2846   ; main routine to write to chanl
                         2847   ;
     8E78   A5 53        2848   put     lda  orgsa      ; is chanl cmd or dat
     8E7A   29 8F        2849           and  #$8f
     8E7C   C9 0F        2850           cmp  #15        ; <15
     8E7E   B0 19        2851           bcs  l42
                         2852   
     8E80   20 905F      2853   l40     jsr  typfil     ; data byte to store
     8E83   B0 05        2854           bcs  l41        ; branch if rnd
                         2855   
     8E85   A5 54        2856           lda  data       ; seq file
     8E87   4C 9112      2857           jmp  wrtbyt     ; write byte to chanl
                         2858   
     8E8A   D0 03        2859   l41     bne  l46
                         2860   
     8E8C   4C A033      2861           jmp  wrtrel
                         2862   
     8E8F   A5 54        2863   l46     lda  data       ; rnd file write
     8E91   20 8EB1      2864           jsr  putbyt     ; write to chanl
     8E94   A4 50        2865           ldy  lindx      ; prepare nxt byte
     8E96   4C 934A      2866           jmp  rnget2
                         2867   
     8E99   A9 05        2868   l42     lda  #cmdchn    ; write to cmd chanl
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 39-1
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8E9B   85 50        2869           sta  lindx
     8E9D   20 9442      2870           jsr  getpnt     ; test if comm and buffer full
     8EA0   C9 2A        2871           cmp  #<cmdbuf+cmdlen+1
     8EA2   F0 05        2872           beq  l50        ; it is full (>cmdlen)
                         2873   
     8EA4   A5 54        2874           lda  data       ; not full yet
     8EA6   20 8EB1      2875           jsr  putbyt     ; store the byte
     8EA9   A5 51        2876   l50     lda  eoiflg     ; tst if lst byte of msg
     8EAB   F0 01        2877           beq  l45        ; it is
     8EAD   60           2878           rts     	; not yet , return
                         2879   
     8EAE   E6 7B        2880   l45     inc  cmdwat     ; set cmd waiting flag
     8EB0   60           2881           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 40
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

                         2883   ; put .a into active buffer of lindx
                         2884   ;
     8EB1   48           2885   putbyt  pha     	;  save .a
     8EB2   20 9F11      2886           jsr  getact     ; get active buf#
     8EB5   10 06        2887           bpl  putb1      ; brach if there is one
                         2888   
     8EB7   68           2889           pla     	; no buffer error
     8EB8   A9 61        2890           lda  #filnop
     8EBA   4C 807C      2891           jmp  cmderr     ;  jmp to error routine
                         2892   
     8EBD   0A           2893   putb1   asl  a          ; save the byte in buffer
     8EBE   AA           2894           tax
     8EBF   68           2895           pla
     8EC0   81 BB        2896           sta  (buftab,x)
     8EC2   F6 BB        2897           inc  buftab,x   ; inc the buffer pointer
     8EC4   60           2898           rts     	; last slot in buf, acm=1
                         2899   ;
                         2900   ; find the active buffer # (lindx)
     8EC5   20 8085      2901   intdrv  jsr  simprs     ; init drvs (command)
     8EC8   20 B0CF      2902   	jsr  psetdef	; set def parms
     8ECB   20 B0B3      2903   	jsr  setdef	; *
     8ECE   20 8F03      2904           jsr  initdr
     8ED1   2C 01FB      2905   	bit  dejavu
     8ED4   50 03        2906   	bvc  1$
                         2907   
     8ED6   4C A938      2908   	jmp  cbmboot	; auto boot
                         2909   
     8ED9   4C 804C      2910   1$      jmp  endcmd
                         2911   
     8EDC   20 9204      2912   itrial  jsr  getbuf
     8EDF   85 6C        2913           sta  jobnum
     8EE1   AA           2914   	tax
     8EE2   20 9235      2915   	jsr  fb2	; release buffer
     8EE5   A2 00        2916           ldx  #0
     8EE7   86 4E        2917           stx  sector
     8EE9   AE 022B      2918           ldx  dirtrk
     8EEC   86 4D        2919           stx  track
     8EEE   20 9588      2920           jsr  seth       ; set the bam header
     8EF1   A9 B0        2921           lda  #seekhd_dv
     8EF3   20 94E4      2922           jsr  dojob      ; do a seek
     8EF6   A6 6C        2923   	ldx  jobnum
     8EF8   48           2924   	pha
     8EF9   A9 B6        2925   	lda  #detwp_dv
     8EFB   20 959D      2926   	jsr  strobe_controller
     8EFE   8D 01FA      2927   	sta  wpstat	; save write protect status
     8F01   68           2928   	pla		; restore status from seek
     8F02   60           2929   	rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 41
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8F03   AD 01FB      2931   initdr  lda  dejavu
     8F06   29 BF        2932   	and  #all-bit6
     8F08   8D 01FB      2933   	sta  dejavu
     8F0B   A5 8A        2934   	lda  dkoramask
     8F0D   09 80        2935   	ora  #bit7
     8F0F   85 8A        2936   	sta  dkoramask	; set alien
     8F11   20 926E      2937   	jsr  cldchn
     8F14   20 8EDC      2938           jsr  itrial
     8F17   C9 02        2939   	cmp  #2
     8F19   B0 06        2940   	bcs  1$		; problems don't bother
                         2941   
     8F1B   A5 91        2942   	lda  psectorsiz
     8F1D   C9 02        2943   	cmp  #sysiz
     8F1F   F0 03        2944   	beq  2$
                         2945   
     8F21   4C 8FB9      2946   1$	jmp  nmf21
                         2947   	
     8F24   20 94DE      2948   2$	jsr  doread     ; rd in dir header
     8F27   A5 6C        2949   	lda  jobnum
     8F29   0A           2950           asl  a
     8F2A   AA           2951           tax
     8F2B   A9 01        2952           lda  #1         ; skip track link
     8F2D   95 BB        2953           sta  buftab,x
     8F2F   A1 BB        2954           lda  (buftab,x)
     8F31   8D 01E5      2955           sta  dirst      ; set up directory sector start
     8F34   A9 02        2956           lda  #2         ; skip link bytes
     8F36   95 BB        2957           sta  buftab,x
     8F38   A1 BB        2958           lda  (buftab,x)
     8F3A   85 6F        2959           sta  dskver     ; set up disk version #
     8F3C   A9 00        2960   	lda  #0
     8F3E   8D 0A00      2961   	sta  bam1
     8F41   20 B64F      2962           jsr  setbpt	; read in both bams
     8F44   A9 00        2963           lda  #0
     8F46   85 25        2964           sta  wpsw       ; clear wp switch
     8F48   85 6E        2965           sta  nodrv      ; clr not active flag
     8F4A   A0 02        2966   	ldy  #2
     8F4C   B1 31        2967   	lda  (bmpnt),y	; vernum here?
     8F4E   CD 01EB      2968   	cmp  vernum
     8F51   D0 66        2969   	bne  nmf21
                         2970   
     8F53   C8           2971   	iny
     8F54   B1 31        2972   	lda  (bmpnt),y
     8F56   49 FF        2973   	eor  #$ff
     8F58   CD 01EB      2974   	cmp  vernum	; eor of vernum?
     8F5B   D0 5C        2975   	bne  nmf21
                         2976   
     8F5D   A5 8A        2977   	lda  dkoramask
     8F5F   29 7F        2978   	and  #all-bit7
     8F61   85 8A        2979   	sta  dkoramask	; set resident
                         2980   	
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 41-1
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8F63   A0 04        2981   	ldy  #4
     8F65   B1 31        2982   	lda  (bmpnt),y
     8F67   85 1D        2983   	sta  dskid	; save id's
     8F69   C8           2984   	iny
     8F6A   B1 31        2985   	lda  (bmpnt),y
     8F6C   85 1E        2986   	sta  dskid+1
     8F6E   C8           2987   	iny
     8F6F   B1 31        2988   	lda  (bmpnt),y
     8F71   85 8D        2989   	sta  iobyte	; get i/o byte
     8F73   29 20        2990   	and  #bit5
     8F75   8D 0101      2991   	sta  relsw
     8F78   C8           2992   	iny
     8F79   B1 31        2993   	lda  (bmpnt),y	; check auto boot flag
     8F7B   10 08        2994   	bpl  nfcalc
                         2995   	
     8F7D   AD 01FB      2996   	lda  dejavu	; boot on initdrv command
     8F80   09 40        2997   	ora  #bit6
     8F82   8D 01FB      2998   	sta  dejavu
                         2999   
     8F85   A5 4D        3000   nfcalc  lda  track      ; get current trk
     8F87   48           3001           pha     	; save it
     8F88   A2 00        3002           ldx  #0         ;
     8F8A   8E 02A9      3003           stx  ndbl       ; lsb
     8F8D   8E 02AA      3004           stx  ndbh       ; msb
     8F90   A6 90        3005   	ldx  startrk
     8F92   24           3006   	.byte  skip1
     8F93   E8           3007   nmf10   inx     	; next trk
     8F94   86 4D        3008           stx  track
     8F96   EC 022B      3009           cpx  dirtrk
     8F99   F0 F8        3010           beq  nmf10      ; skip the dir trk
                         3011   
     8F9B   EC 022C      3012           cpx  maxtrk     ; done ?
     8F9E   B0 13        3013           bcs  nmf20      ; yes
                         3014   
     8FA0   20 B5BD      3015           jsr  bamtrk     ; set up next bam trk
     8FA3   B1 31        3016           lda  (bmpnt),y  ; get blks free (y=0)
     8FA5   18           3017           clc
     8FA6   6D 02A9      3018           adc  ndbl       ; up date count
     8FA9   8D 02A9      3019           sta  ndbl       ;
     8FAC   90 E5        3020           bcc  nmf10      ; no carry
                         3021   
     8FAE   EE 02AA      3022           inc  ndbh       ; msb
     8FB1   D0 E0        3023           bne  nmf10      ; always branch
                         3024   
     8FB3   68           3025   nmf20   pla     	; restore track
     8FB4   85 4D        3026           sta  track
     8FB6   A2 00        3027   	ldx  #0         ; restore it
     8FB8   60           3028   	rts
                         3029   
     8FB9   A2 03        3030   nmf21   ldx  #sysdirsec
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 41-2
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8FBB   8E 01E5      3031   	stx  dirst	; starting directory sector
                         3032   
     8FBE   A2 C0        3033   	ldx  #sysiob
     8FC0   86 8D        3034   	stx  iobyte	; init iobyte crccheck on,verify on
                         3035   
     8FC2   A2 00        3036   	ldx  #0
     8FC4   8E 0101      3037   	stx  relsw	; huge rel
     8FC7   86 25        3038           stx  wpsw       ; clear wp switch
     8FC9   86 6E        3039           stx  nodrv      ; clr not active flag
     8FCB   8E 02A9      3040           stx  ndbl       ; lsb
     8FCE   8E 02AA      3041           stx  ndbh       ; msb
     8FD1   86 1D        3042   	stx  dskid
     8FD3   86 1E        3043   	stx  dskid+1
     8FD5   60           3044   	rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 42
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     8FD6   20 9585      3046   strrd   jsr  sethdr     ; start dbl buf, use
     8FD9   20 8FFE      3047           jsr  rdbuf      ; trk, sec as start block
     8FDC   20 94ED      3048           jsr  watjob
     8FDF   20 9071      3049           jsr  getbyt
     8FE2   85 4D        3050           sta  track
     8FE4   20 9071      3051           jsr  getbyt
     8FE7   85 4E        3052           sta  sector
     8FE9   60           3053           rts
                         3054   
     8FEA   20 8FD6      3055   strdbl  jsr  strrd
     8FED   A5 4D        3056           lda  track
     8FEF   D0 01        3057           bne  str1
     8FF1   60           3058           rts
                         3059   
     8FF2   20 8D7D      3060   str1    jsr  dblbuf
     8FF5   20 9585      3061           jsr  sethdr
     8FF8   20 8FFE      3062           jsr  rdbuf
     8FFB   4C 8D7D      3063           jmp  dblbuf
                         3064   
     8FFE   A9 80        3065   rdbuf   lda  #read_dv	; rd job on trk, sec
     9000   D0 02        3066           bne  strtit
                         3067   
     9002   A9 90        3068   wrtbuf  lda  #wrtsd_dv	; wr job on trk, sec
     9004   85 28        3069   strtit  sta  cmd
     9006   20 9F11      3070           jsr  getact
     9009   AA           3071           tax
     900A   20 9471      3072           jsr  setljb
     900D   8A           3073           txa
     900E   48           3074           pha
     900F   0A           3075           asl  a
     9010   AA           3076           tax
     9011   A9 00        3077           lda  #0
     9013   95 BB        3078           sta  buftab,x
     9015   20 905F      3079           jsr  typfil
     9018   C9 04        3080           cmp  #4
     901A   B0 08        3081           bcs  wrtc1      ; not sequential type
                         3082   
     901C   FE 0249      3083           inc  nbkl,x
     901F   D0 03        3084           bne  wrtc1
                         3085   
     9021   FE 0250      3086           inc  nbkh,x
     9024   68           3087   wrtc1   pla
     9025   AA           3088           tax
     9026   60           3089           rts
                         3090   
     9027   A5 52        3091   fndrch  lda  sa
     9029   C9 13        3092           cmp  #maxsa+1
     902B   90 02        3093           bcc  fndc20
                         3094   
     902D   29 0F        3095           and  #$f
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 42-1
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     902F   C9 0F        3096   fndc20  cmp  #cmdsa
     9031   D0 02        3097           bne  fndc25
                         3098   
     9033   A9 10        3099           lda  #errsa
     9035   AA           3100   fndc25  tax
     9036   38           3101           sec
     9037   B5 A8        3102           lda  lintab,x
     9039   30 06        3103           bmi  fndc30
                         3104   
     903B   29 0F        3105           and  #$f
     903D   85 50        3106           sta  lindx
     903F   AA           3107           tax
     9040   18           3108           clc
     9041   60           3109   fndc30  rts
                         3110   
     9042   A5 52        3111   fndwch  lda  sa
     9044   C9 13        3112           cmp  #maxsa+1
     9046   90 02        3113           bcc  fndw13
                         3114   
     9048   29 0F        3115           and  #$f
     904A   AA           3116   fndw13  tax
     904B   B5 A8        3117           lda  lintab,x
     904D   A8           3118           tay
     904E   0A           3119           asl  a
     904F   90 0A        3120           bcc  fndw15
                         3121   
     9051   30 0A        3122           bmi  fndw20
                         3123   
     9053   98           3124   fndw10  tya
     9054   29 0F        3125           and  #$0f
     9056   85 50        3126           sta  lindx
     9058   AA           3127           tax
     9059   18           3128           clc
     905A   60           3129           rts
                         3130   
     905B   30 F6        3131   fndw15  bmi  fndw10
                         3132   
     905D   38           3133   fndw20  sec
     905E   60           3134           rts
     905F                3135   typfil          	; get file type
     905F   A6 50        3136           ldx  lindx
     9061   B5 F9        3137           lda  filtyp,x
     9063   4A           3138           lsr  a
     9064   29 07        3139           and  #7
     9066   C9 04        3140           cmp  #reltyp
     9068   60           3141           rts
                         3142   
     9069   20 9F11      3143   getpre  jsr  getact
     906C   0A           3144           asl  a
     906D   AA           3145           tax
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 42-2
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     906E   A4 50        3146           ldy  lindx
     9070   60           3147           rts
                         3148   
                         3149   ; read byte from active buffer
                         3150   ; and set flag if last data byte
                         3151   ; if last then z=1 else z=0 ;
                         3152   
     9071                3153   getbyt
     9071   A6 50        3154   	ldx  lindx
     9073   B5 D1        3155   	lda  buf0,x	; active buffer
     9075   10 02        3156   	bpl  1$
                         3157   
     9077   B5 D8        3158   	lda  buf1,x
     9079   29 BF        3159   1$	and  #$bf
     907B   0A           3160           asl  a
     907C   AA           3161           tax
     907D   A4 50        3162           ldy  lindx
     907F   B9 0242      3163           lda  lstchr,y
     9082   F0 12        3164           beq  getb1
                         3165   
     9084   A1 BB        3166           lda  (buftab,x)
     9086   48           3167           pha
     9087   B5 BB        3168           lda  buftab,x
     9089   D9 0242      3169           cmp  lstchr,y
     908C   D0 04        3170           bne  getb2
                         3171   
     908E   A9 FF        3172           lda  #$ff
     9090   95 BB        3173           sta  buftab,x
     9092   68           3174   getb2   pla
     9093   F6 BB        3175           inc  buftab,x
     9095   60           3176           rts
                         3177   
     9096   A1 BB        3178   getb1   lda  (buftab,x)
     9098   F6 BB        3179           inc  buftab,x
     909A   60           3180           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 43
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

                         3182   ;
                         3183   ; read a char from file and read next
                         3184   ; block of file if needed.
                         3185   ; set chnrdy=eoi if end of file
                         3186   ;
     909B   20 9071      3187   rdbyt   jsr  getbyt
     909E   D0 66        3188           bne  rd3
     90A0   85 54        3189           sta  data
                         3190   
     90A2   B9 0242      3191   rd0     lda  lstchr,y
     90A5   F0 08        3192           beq  rd1
     90A7   A9 80        3193           lda  #eoiout
     90A9   99 0234      3194   rd01    sta  chnrdy,y
     90AC   A5 54        3195           lda  data
     90AE   60           3196           rts
     90AF   20 8D7D      3197   rd1     jsr  dblbuf
     90B2   A9 00        3198           lda  #0
     90B4   85 40        3199           sta  temp
     90B6   A6 50        3200           ldx  lindx
     90B8   B5 D1        3201           lda  buf0,x
     90BA   10 02        3202           bpl  rdypnt
                         3203   
     90BC   B5 D8        3204           lda  buf1,x
     90BE   29 BF        3205   rdypnt  and  #$bf
     90C0   0A           3206           asl  a
     90C1   AA           3207           tax
     90C2   B5 BC        3208           lda  buftab+1,x
     90C4   85 65        3209           sta  dirbuf+1
     90C6   A5 40        3210           lda  temp
     90C8   95 BB        3211           sta  buftab,x
     90CA   85 64        3212           sta  dirbuf
     90CC   20 9071      3213           jsr  getbyt
     90CF   C9 00        3214           cmp  #0
     90D1   F0 34        3215           beq  rd4
                         3216   
     90D3   85 4D        3217           sta  track
     90D5   20 9071      3218           jsr  getbyt
     90D8   85 4E        3219           sta  sector
     90DA   20 8D7D      3220           jsr  dblbuf
     90DD   A6 50        3221           ldx  lindx
     90DF   B5 D1        3222           lda  buf0,x
     90E1   10 02        3223           bpl  rdydrv
                         3224   
     90E3   B5 D8        3225           lda  buf1,x
     90E5   29 BF        3226   rdydrv  and  #$bf
     90E7   AA           3227           tax
     90E8   A6 50        3228           ldx  lindx
     90EA   B5 D1        3229           lda  buf0,x
     90EC   10 02        3230           bpl  rdydr1
                         3231   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 43-1
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

     90EE   B5 D8        3232           lda  buf1,x
     90F0   29 BF        3233   rdydr1  and  #$bf
     90F2   0A           3234           asl  a
     90F3   A8           3235           tay
     90F4   A5 4D        3236           lda  track
     90F6   99 000B      3237           sta  hdrs,y
     90F9   A5 4E        3238           lda  sector
     90FB   99 000C      3239           sta  hdrs+1,y
     90FE   20 8FFE      3240           jsr  rdbuf
     9101   20 8D7D      3241           jsr  dblbuf
     9104   A5 54        3242           lda  data
     9106   60           3243   rd3     rts
     9107   20 9071      3244   rd4     jsr  getbyt
     910A   A4 50        3245           ldy  lindx
     910C   99 0242      3246           sta  lstchr,y
     910F   A5 54        3247           lda  data
     9111   60           3248           rts
                         3249   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 44
"tst2"   TST2.SRC

Error Addr  Code          Seq   Source statement

                         3251   ; write a char to chanl and write
                         3252   ; buffer out to disk if its full
                         3253   ;
     9112   20 8EB1      3254   wrtbyt  jsr  putbyt
     9115   F0 01        3255           beq  wrt0
                         3256   
     9117   60           3257           rts
                         3258   
     9118   20 B668      3259   wrt0    jsr  nxtts
     911B   A9 00        3260           lda  #0
     911D   20 9422      3261           jsr  setpnt
     9120   A5 4D        3262           lda  track
     9122   20 8EB1      3263           jsr  putbyt
     9125   A5 4E        3264           lda  sector
     9127   20 8EB1      3265           jsr  putbyt
     912A   20 9002      3266           jsr  wrtbuf
     912D   20 8D7D      3267           jsr  dblbuf
     9130   20 9585      3268           jsr  sethdr
     9133   A9 02        3269           lda  #2
     9135   4C 9422      3270           jmp  setpnt
                         3271   ;
                         3272   ; inc pointer of active buffer
                         3273   ; by .a
                         3274   ;
     9138                3275   incptr
     9138   85 40        3276           sta  temp
     913A   20 9442      3277           jsr  getpnt
     913D   18           3278           clc
     913E   65 40        3279           adc  temp
     9140   95 BB        3280           sta  buftab,x
     9142   85 64        3281           sta  dirbuf
     9144   60           3282           rts
                         3283   ;
                         3284   ; sec carry auto boot loader
                         3285   ;
                         3286   ;
     9145   AD 01FB      3287   vujade  lda  dejavu	; clear bit7
     9148   29 7F        3288   	and  #all-bit7
     914A   8D 01FB      3289   	sta  dejavu
     914D   A9 00        3290   	lda  #0
     914F   6A           3291   	ror  a		; new bit 7
     9150   0D 01FB      3292   	ora  dejavu
     9153   8D 01FB      3293   	sta  dejavu
     9156   60           3294   	rts
                         3295   	.INCLUDE tst3
                         3296   	.messg "tst3"
                         3297   	.subttl "tst3"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 45
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

                         3299   ; .a=#buffers needed
                         3300   ; sets up buffer # and allocates lindx
                         3301   
     9157   38           3302   getwch  sec     	; set .c=1 indicate write
     9158   B0 01        3303           bcs  getr2
                         3304   
     915A   18           3305   getrch  clc     	; set .c=0 indicate read
     915B   08           3306   getr2   php     	; save r/w flag (.c)
     915C   85 40        3307           sta  temp       ; save #bufs needed
     915E   20 919E      3308           jsr  frechn     ; free any channels
     9161   20 92DB      3309           jsr  fndlnx     ; get next lindx open
     9164   85 50        3310           sta  lindx
     9166   A6 52        3311           ldx  sa
     9168   28           3312           plp
     9169   90 02        3313           bcc  getr55
                         3314   
     916B   09 80        3315           ora  #$80
     916D   95 A8        3316   getr55  sta  lintab,x   ; save lindx in lintab
     916F   29 3F        3317           and  #$3f
     9171   A8           3318           tay     	; now get the buffers
     9172   A9 FF        3319           lda  #$ff
     9174   99 00D1      3320           sta  buf0,y
     9177   99 00D8      3321           sta  buf1,y
     917A   99 0265      3322           sta  ss,y
     917D   C6 40        3323           dec  temp
     917F   30 1C        3324           bmi  getr4
                         3325   
     9181   20 9204      3326           jsr  getbuf
     9184   10 08        3327           bpl  getr5
                         3328   
     9186   20 91CE      3329   gberr   jsr  relbuf     ;  error ,rel bufs
     9189   A9 70        3330           lda  #nochnl
     918B   4C 807C      3331           jmp  cmderr
                         3332   
     918E   99 00D1      3333   getr5   sta  buf0,y
     9191   C6 40        3334           dec  temp
     9193   30 08        3335           bmi  getr4
                         3336   
     9195   20 9204      3337           jsr  getbuf
     9198   30 EC        3338           bmi  gberr
                         3339   
     919A   99 00D8      3340           sta  buf1,y
     919D   60           3341   getr4   rts
                         3342   
     919E   A5 52        3343   frechn  lda  sa         ; free chnl assoc w/sa
     91A0   C9 0F        3344           cmp  #$f        ; free rd/wrt chnls
     91A2   D0 01        3345           bne  freeit     ; but don't free ch15
                         3346   
     91A4   60           3347           rts
                         3348   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 45-1
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

     91A5   A6 52        3349   freeit  ldx  sa
     91A7   B5 A8        3350           lda  lintab,x
     91A9   C9 FF        3351           cmp  #$ff
     91AB   F0 20        3352           beq  fre25
                         3353   
     91AD   29 3F        3354           and  #$3f
     91AF   85 50        3355           sta  lindx
     91B1   A9 FF        3356           lda  #$ff
     91B3   95 A8        3357           sta  lintab,x
     91B5   A6 50        3358           ldx  lindx
     91B7   A9 00        3359           lda  #0
     91B9   9D 0234      3360           sta  chnrdy,x
     91BC   20 91CE      3361           jsr  relbuf
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 46
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

     91BF   A6 50        3363           ldx  lindx      ; release lindx
     91C1   A9 01        3364           lda  #1
     91C3   CA           3365   rel15   dex
     91C4   30 03        3366           bmi  rel10
                         3367   
     91C6   0A           3368           asl  a
     91C7   D0 FA        3369           bne  rel15
                         3370   
     91C9   05 70        3371   rel10   ora  linuse     ; 1=free 0=used
     91CB   85 70        3372           sta  linuse
     91CD   60           3373   fre25   rts
                         3374   
     91CE   A6 50        3375   relbuf  ldx  lindx      ; given sa, free read chnl
     91D0   B5 D1        3376           lda  buf0,x     ; release buffers (lindx)
     91D2   C9 FF        3377           cmp  #$ff
     91D4   F0 09        3378           beq  rel1
                         3379   
     91D6   48           3380           pha
     91D7   A9 FF        3381           lda  #$ff
     91D9   95 D1        3382           sta  buf0,x
     91DB   68           3383           pla
     91DC   20 9252      3384           jsr  frebuf
     91DF   A6 50        3385   rel1    ldx  lindx
     91E1   B5 D8        3386           lda  buf1,x
     91E3   C9 FF        3387           cmp  #$ff
     91E5   F0 09        3388           beq  rel2
                         3389   
     91E7   48           3390           pha
     91E8   A9 FF        3391           lda  #$ff
     91EA   95 D8        3392           sta  buf1,x
     91EC   68           3393           pla
     91ED   20 9252      3394           jsr  frebuf
     91F0   A6 50        3395   rel2    ldx  lindx
     91F2   BD 0265      3396           lda  ss,x
     91F5   C9 FF        3397           cmp  #$ff
     91F7   F0 0A        3398           beq  rel3
                         3399   
     91F9   48           3400           pha
     91FA   A9 FF        3401           lda  #$ff
     91FC   9D 0265      3402           sta  ss,x
     91FF   68           3403           pla
     9200   4C 9252      3404           jmp  frebuf
     9203   60           3405   rel3    rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 47
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

                         3407   ; get a free buffer #
                         3408   ;  regs destroyed: .a  .x
                         3409   ;  out:  .a,.x= buf # or $ff  if failed
                         3410   ;        .n= 1 if failed
                         3411   ;     if successful init jobs & lstjob
                         3412   ;
     9204   98           3413   getbuf  tya     	; save .y
     9205   48           3414           pha
     9206   20 9228      3415           jsr  fndbuf
     9209   10 06        3416           bpl  gbf1       ; found one
                         3417   
     920B   20 9291      3418           jsr  stlbuf     ; steal one
     920E   AA           3419           tax     	; test it
     920F   30 13        3420           bmi  gbf2       ; didn't find one
                         3421   
     9211   B5 02        3422   gbf1    lda  jobs,x
     9213   30 FC        3423           bmi  gbf1       ; wait for job free
                         3424   
     9215   A9 00        3425           lda  #0
     9217   95 02        3426           sta  jobs,x     ; clear job queue
     9219   9D 0272      3427           sta  lstjob,x
     921C   8A           3428           txa
     921D   0A           3429           asl  a
     921E   A8           3430           tay
     921F   A9 02        3431           lda  #2
     9221   99 00BB      3432           sta  buftab,y
     9224   68           3433   gbf2    pla
     9225   A8           3434           tay     	; restore .y
     9226   8A           3435           txa     	; exit with buf # in .a & cc set
     9227   60           3436           rts
                         3437   
                         3438   ; find a free buf # & set bit in bufuse
                         3439   ;  in:  .y= index into bufuse
                         3440   ; out:  .x= buf # or $ff  if failed
                         3441   ;       .n= 1 if failed
                         3442   
     9228   A2 07        3443   fndbuf  ldx  #7
     922A   A5 6D        3444   fb1     lda  bufuse     ; search bufuse
     922C   3D B5EA      3445           and  bmask,x
     922F   F0 04        3446           beq  fb2        ; found a free one
                         3447   
     9231   CA           3448           dex
     9232   10 F6        3449           bpl  fb1        ; until all bits are tested
                         3450   
     9234   60           3451           rts
     9235                3452   fb2             	; set it used
     9235   A5 6D        3453           lda  bufuse
     9237   5D B5EA      3454           eor  bmask,x    ; set bit
     923A   85 6D        3455           sta  bufuse
     923C   8A           3456           txa
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 47-1
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

     923D   60           3457           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 48
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

     923E                3459   freiac          	; free inactive buffer
     923E   A6 50        3460           ldx  lindx
     9240   B5 D1        3461           lda  buf0,x
     9242   30 04        3462           bmi  fri10
                         3463   
     9244   B5 D8        3464           lda  buf1,x
     9246   10 19        3465           bpl  freb3
                         3466   
     9248   C9 FF        3467   fri10   cmp  #$ff
     924A   F0 15        3468           beq  freb3
                         3469   
     924C   48           3470           pha
     924D   A9 FF        3471           lda  #$ff
     924F   95 D1        3472           sta  buf0,x
     9251   68           3473           pla
     9252   29 0F        3474   frebuf  and  #$f
     9254   A8           3475           tay
     9255   C8           3476           iny
     9256   A2 08        3477           ldx  #8
     9258   66 6D        3478   freb1   ror  bufuse
     925A   88           3479           dey
     925B   D0 01        3480           bne  freb2
                         3481   
     925D   18           3482           clc
     925E   CA           3483   freb2   dex
     925F   10 F7        3484           bpl  freb1
                         3485   
     9261   60           3486   freb3   rts
                         3487   
     9262   A9 0E        3488   clrchn  lda  #14
     9264   85 52        3489           sta  sa
     9266   20 919E      3490   clrc1   jsr  frechn
     9269   C6 52        3491           dec  sa
     926B   D0 F9        3492           bne  clrc1
                         3493   
     926D   60           3494           rts
                         3495   
     926E   A9 0E        3496   cldchn  lda  #14
     9270   85 52        3497           sta  sa
     9272   A6 52        3498   clsd    ldx  sa
     9274   B5 A8        3499           lda  lintab,x
     9276   C9 FF        3500           cmp  #$ff
     9278   F0 12        3501           beq  cld2
                         3502   
     927A   29 3F        3503           and  #$3f
     927C   85 50        3504           sta  lindx
     927E   20 9F11      3505           jsr  getact
     9281   AA           3506           tax
     9282   BD 0272      3507           lda  lstjob,x
     9285   29 01        3508           and  #1
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 48-1
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

     9287   D0 03        3509           bne  cld2
                         3510   
     9289   20 919E      3511           jsr  frechn
     928C   C6 52        3512   cld2    dec  sa
     928E   10 E2        3513           bpl  clsd
                         3514   
     9290   60           3515           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 49
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

     9291   A5 40        3517   stlbuf  lda  t0         ; search chnl's for least recently
     9293   48           3518           pha     	; used buf & steals first inact buf.
     9294   A0 00        3519           ldy  #0         ; input: lrutbl-least recently
     9296   B6 DF        3520   stl05   ldx  lrutbl,y   ; output: a=buf#
     9298   B5 D1        3521           lda  buf0,x     ;         x=chnl index
     929A   10 04        3522           bpl  stl10      ;         y=lrutbl index
                         3523   
     929C   C9 FF        3524           cmp  #$ff
     929E   D0 16        3525           bne  stl30      ; it's inactive
                         3526   
     92A0   8A           3527   stl10   txa
     92A1   18           3528           clc
     92A2   69 08        3529           adc  #mxchns+1	; <<<<<<<<<<<<<<
     92A4   AA           3530           tax
     92A5   B5 D1        3531           lda  buf0,x
     92A7   10 04        3532           bpl  stl20
                         3533   
     92A9   C9 FF        3534           cmp  #$ff
     92AB   D0 09        3535           bne  stl30
                         3536   
     92AD   C8           3537   stl20   iny
     92AE   C0 06        3538           cpy  #mxchns-1
     92B0   90 E4        3539           bcc  stl05
                         3540   
     92B2   A2 FF        3541           ldx  #$ff       ; set failure
     92B4   D0 20        3542           bne  stl60      ; bra
                         3543   
     92B6   86 40        3544   stl30   stx  t0         ; steal buf if no error
     92B8   29 3F        3545           and  #$3f
     92BA   AA           3546           tax
     92BB   B5 02        3547   stl40   lda  jobs,x
     92BD   30 FC        3548           bmi  stl40      ; wait till done
                         3549   
     92BF   C9 02        3550           cmp  #2         ; errors?
     92C1   90 0C        3551           bcc  stl50      ; ok
                         3552   
     92C3   C9 0F        3553   	cmp  #15	; no drive
     92C5   F0 08        3554   	beq  stl50	; steal it also
                         3555   
     92C7   A6 40        3556           ldx  t0
     92C9   E0 08        3557           cpx  #mxchns+1	; <<<<<<<<<<<<<<
     92CB   90 D3        3558           bcc  stl10      ; check opposite slot
                         3559   
     92CD   B0 DE        3560           bcs  stl20      ; check another channel
                         3561   
     92CF   A4 40        3562   stl50   ldy  t0         ; found one !, so lets
     92D1   A9 FF        3563           lda  #$ff       ; steal it
     92D3   99 00D1      3564           sta  buf0,y     ; clear slot
     92D6   68           3565   stl60   pla
     92D7   85 40        3566           sta  t0
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 49-1
"tst3"   TST3.SRC

Error Addr  Code          Seq   Source statement

     92D9   8A           3567           txa     	; buf # in .a & set cc's
     92DA   60           3568           rts
                         3569   
     92DB   A0 00        3570   fndlnx  ldy  #0         ; find free lindx to use
     92DD   A9 01        3571           lda  #1         ; mark used in linuse
     92DF   24 70        3572   fnd10   bit  linuse     ; 1=free 0=used
     92E1   D0 09        3573           bne  fnd30
                         3574   
     92E3   C8           3575           iny
     92E4   0A           3576           asl  a
     92E5   D0 F8        3577           bne  fnd10
                         3578   
     92E7   A9 70        3579           lda  #nochnl    ; no free lindx available
     92E9   4C 807C      3580           jmp  cmderr
                         3581   
     92EC   49 FF        3582   fnd30   eor  #$ff       ; toggle bit mask
     92EE   25 70        3583           and  linuse     ; mark bit used
     92F0   85 70        3584           sta  linuse
     92F2   98           3585           tya     	; return lindx in .a
     92F3   60           3586           rts
                         3587   	.INCLUDE tst4
                         3588           .messg "tst4"
                         3589   	.subttl "tst4"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 50
"tst4"   TST4.SRC

Error Addr  Code          Seq   Source statement

                         3591   ; get next char from a chanl
     92F4                3592   gbyte           	; get it thru internal chnl
     92F4   20 9027      3593           jsr  fndrch
     92F7   20 81F6      3594           jsr  setlds
     92FA   20 9303      3595           jsr  get
     92FD   A6 50        3596           ldx  lindx
     92FF   BD 023B      3597           lda  chndat,x
     9302   60           3598           rts
                         3599   
     9303   A6 50        3600   get     ldx  lindx
     9305   20 905F      3601           jsr  typfil     ; get file type
     9308   D0 03        3602           bne  get00
                         3603   
     930A   4C A0A6      3604           jmp  rdrel
                         3605   
     930D   A5 52        3606   get00   lda  sa
     930F   C9 0F        3607           cmp  #$f
     9311   F0 5D        3608           beq  geterc
                         3609   
     9313   BD 0234      3610           lda  chnrdy,x   ; was last char just sent
     9316   29 08        3611           and  #eoisnd    ; just sent eoi
     9318   D0 15        3612           bne  get1       ; nope not this time
                         3613   
     931A   20 905F      3614           jsr  typfil
     931D   C9 07        3615           cmp  #dirtyp
     931F   D0 08        3616           bne  get0       ; not direct type
                         3617   
     9321   A9 89        3618           lda  #rndrdy    ; direct file remains active
     9323   9D 0234      3619           sta  chnrdy,x   ; talker listener noeoi
     9326   4C 933A      3620           jmp  rndget     ; prepare the next char
                         3621   
     9329   A9 00        3622   get0    lda  #notrdy    ; lst char sent,not ready
     932B   9D 0234      3623           sta  chnrdy,x
     932E   60           3624           rts
                         3625   
     932F   A5 52        3626   get1    lda  sa         ; test if a load
     9331   F0 32        3627           beq  get6       ; its a load sa of 0
                         3628   
     9333   20 905F      3629           jsr  typfil     ;  tst for rnd file
     9336   C9 04        3630           cmp  #4
     9338   90 22        3631           bcc  seqget     ; seq file char get
                         3632   
     933A   20 9069      3633   rndget  jsr  getpre     ; direct file get
     933D   B5 BB        3634           lda  buftab,x
     933F   D9 0242      3635           cmp  lstchr,y   ; up to lst char yet
     9342   D0 04        3636           bne  rnget1     ; not yet
                         3637   
     9344   A9 00        3638           lda  #0         ; read the whole thing
     9346   95 BB        3639           sta  buftab,x   ; wrap pntr to 0
     9348   F6 BB        3640   rnget1  inc  buftab,x   ; get the next char
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 50-1
"tst4"   TST4.SRC

Error Addr  Code          Seq   Source statement

     934A   A1 BB        3641   rnget2  lda  (buftab,x)
     934C   99 023B      3642           sta  chndat,y   ; save char in
     934F   B5 BB        3643           lda  buftab,x
     9351   D9 0242      3644           cmp  lstchr,y
     9354   D0 05        3645           bne  rnget3
                         3646   
     9356   A9 81        3647           lda  #rndeoi
     9358   99 0234      3648           sta  chnrdy,y   ; this is last char
     935B   60           3649   rnget3  rts     	; send eoi with it
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 51
"tst4"   TST4.SRC

Error Addr  Code          Seq   Source statement

     935C   20 909B      3651   seqget  jsr  rdbyt      ; read the next byte
     935F   A6 50        3652   get3    ldx  lindx
     9361   9D 023B      3653           sta  chndat,x   ; store in chndat
     9364   60           3654           rts
                         3655   
     9365   AD 026E      3656   get6    lda  dirlst     ; test if dir lsting
     9368   F0 F2        3657           beq  seqget     ; no, its not
                         3658   
     936A   20 B245      3659           jsr  getdir     ; yes it is,get dir char
     936D   4C 935F      3660           jmp  get3
                         3661   
     9370   20 9442      3662   geterc  jsr  getpnt
     9373   C9 CF        3663           cmp  #<errbuf-1
     9375   D0 18        3664           bne  ge10
                         3665   
     9377   A5 65        3666           lda  dirbuf+1
     9379   C9 02        3667           cmp  #>errbuf
     937B   D0 12        3668           bne  ge10
                         3669   
     937D   A9 0D        3670           lda  #cr
     937F   85 54        3671           sta  data
     9381   20 81E5      3672           jsr  erroff
     9384   A9 00        3673           lda  #0
     9386   20 A867      3674           jsr  errts0
     9389   C6 CF        3675           dec  cb+2
     938B   A9 80        3676           lda  #eoiout
     938D   D0 12        3677           bne  ge30       ; (jump)
                         3678   
     938F   20 9071      3679   ge10    jsr  getbyt
     9392   85 54        3680           sta  data
     9394   D0 09        3681           bne  ge20
                         3682   
     9396   A9 CF        3683   ge15    lda  #<errbuf-1
     9398   20 9422      3684           jsr  setpnt
     939B   A9 02        3685           lda  #>errbuf
     939D   95 BC        3686           sta  buftab+1,x
     939F   A9 88        3687   ge20    lda  #rdytlk
     93A1   8D 023A      3688   ge30    sta  chnrdy+errchn
     93A4   A5 54        3689           lda  data
     93A6   8D 0241      3690           sta  chndat+errchn
     93A9   60           3691           rts
                         3692   
     93AA   20 9F11      3693   nxtbuf  jsr  getact     ; read next buffer of a
     93AD   0A           3694           asl  a          ; file, follow links in the first
     93AE   AA           3695           tax     	; two bytes. end of file if 1st char
     93AF   A9 00        3696           lda  #0         ; byte=0. 2nd char =length
     93B1   95 BB        3697           sta  buftab,x
     93B3   A1 BB        3698           lda  (buftab,x)
     93B5   F0 05        3699           beq  nxtb1
                         3700   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 51-1
"tst4"   TST4.SRC

Error Addr  Code          Seq   Source statement

     93B7   D6 BB        3701           dec  buftab,x
     93B9   4C 909B      3702           jmp  rdbyt
                         3703   
     93BC   60           3704   nxtb1   rts
                         3705   
     93BD   A9 80        3706   drtrd   lda  #read_dv	; direct block read
     93BF   D0 02        3707           bne  drt
                         3708   
     93C1   A9 90        3709   drtwrt  lda  #wrtsd_dv	; direct block write
     93C3   85 28        3710   drt     sta  cmd
     93C5   A5 6C        3711           lda  jobnum
     93C7   20 9588      3712           jsr  seth
     93CA   A6 6C        3713           ldx  jobnum
     93CC   4C 94E8      3714           jmp  doit2
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 52
"tst4"   TST4.SRC

Error Addr  Code          Seq   Source statement

                         3716   ; open internal read chanl (sa=16)
                         3717   ;
     93CF   A9 01        3718   opnird  lda  #1
     93D1   8D 022D      3719   opntyp  sta  type
     93D4   A9 11        3720           lda  #irsa
     93D6   85 52        3721           sta  sa
     93D8   20 9B0D      3722           jsr  opnrch
     93DB   A9 02        3723           lda  #2
     93DD   4C 9422      3724           jmp  setpnt
                         3725   
     93E0   A9 12        3726   opniwr  lda  #iwsa      ; open internal wr chnl
     93E2   85 52        3727           sta  sa         ; sa=16
     93E4   4C 9BC3      3728           jmp  opnwch
                         3729   
                         3730   ; allocate next directory block on system track
                         3731   ;  and mark as used in bam
                         3732   
     93E7   20 9D79      3733   nxdrbk  jsr  curblk
     93EA   A9 01        3734           lda  #1
     93EC   85 40        3735           sta  temp
     93EE   A5 2E        3736           lda  secinc
     93F0   48           3737           pha
     93F1   A9 01        3738           lda  #1         ; incr sec by 1 in dir
     93F3   85 2E        3739           sta  secinc
     93F5   20 B675      3740           jsr  nxtds
     93F8   68           3741           pla
     93F9   85 2E        3742           sta  secinc
     93FB   A9 00        3743           lda  #0
     93FD   20 9422      3744           jsr  setpnt
     9400   A5 4D        3745           lda  track
     9402   20 8EB1      3746           jsr  putbyt
     9405   A5 4E        3747           lda  sector
     9407   20 8EB1      3748           jsr  putbyt
     940A   20 9002      3749           jsr  wrtbuf
     940D   20 94ED      3750           jsr  watjob
     9410   A9 00        3751           lda  #0
     9412   20 9422      3752           jsr  setpnt
     9415   20 8EB1      3753   nxdb1   jsr  putbyt
     9418   D0 FB        3754           bne  nxdb1
                         3755   
     941A   20 8EB1      3756           jsr  putbyt
     941D   A9 FF        3757           lda  #$ff
     941F   4C 8EB1      3758           jmp  putbyt
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 53
"tst4"   TST4.SRC

Error Addr  Code          Seq   Source statement

     9422   85 40        3760   setpnt  sta  temp       ; new pntr value in a.
     9424   20 9F11      3761           jsr  getact
     9427   0A           3762           asl  a
     9428   AA           3763           tax
     9429   B5 BC        3764           lda  buftab+1,x
     942B   85 65        3765           sta  dirbuf+1
     942D   A5 40        3766           lda  temp
     942F   95 BB        3767           sta  buftab,x
     9431   85 64        3768           sta  dirbuf
     9433   60           3769           rts
                         3770   ;
                         3771   ; free the internal chanl (sa=16)
                         3772   ;
                         3773   
     9434   A9 11        3774   freich  lda  #irsa
     9436   85 52        3775           sta  sa
     9438   20 919E      3776           jsr  frechn
     943B   A9 12        3777           lda  #iwsa
     943D   85 52        3778           sta  sa
     943F   4C 919E      3779           jmp  frechn
                         3780   
     9442   20 9F11      3781   getpnt  jsr  getact     ; rd act buf pntr
     9445   0A           3782   gp1     asl  a
     9446   AA           3783           tax
     9447   B5 BC        3784           lda  buftab+1,x
     9449   85 65        3785           sta  dirbuf+1
     944B   B5 BB        3786           lda  buftab,x
     944D   85 64        3787           sta  dirbuf
     944F   60           3788           rts
                         3789   
     9450   85 42        3790   drdbyt  sta  temp+2     ; direct rd byte
     9452   20 9F11      3791           jsr  getact     ; accm=byte# to rd
     9455   AA           3792           tax
     9456   BD 01F1      3793           lda  bufind,x
     9459   85 43        3794           sta  temp+3
     945B   A0 00        3795           ldy  #0
     945D   B1 42        3796           lda  (temp+2),y
     945F   60           3797           rts
                         3798   
                         3799   ; index table containing high
                         3800   ; byte address of buffers
                         3801   	.INCLUDE tst5
                         3802   	.messg "tst5"
                         3803   	.subttl "tst5"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 54
"tst5"   TST5.SRC

Error Addr  Code          Seq   Source statement

                         3805   ; init to default parms
     9460                3806   intdsk
     9460   A9 01        3807   	lda  #bit0	; set?
     9462   24 25        3808   	bit  wpsw
     9464   F0 0A        3809   	beq  1$
                         3810   
     9466   49 01        3811   	eor  #bit0
     9468   85 25        3812   	sta  wpsw
     946A   20 B0CF      3813   	jsr  psetdef	; set physical parms
     946D   4C B0B3      3814   	jmp  setdef	; reg parms
     9470   60           3815   1$	rts
                         3816   	.INCLUDE job
                         3817   	.messg "job"
                         3818   	.subttl "job"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 55
"job"   JOB.SRC

Error Addr  Code          Seq   Source statement

     9471   A5 28        3820   setljb  lda  cmd
     9473   48           3821   setjob  pha             ; set up job and
     9474   86 6C        3822   	stx  jobnum     ; chk trk/sec
     9476   2C 02A8      3823   	bit  jobrtn
     9479   70 58        3824   	bvs  sjb1       ; no check on vernum & track,sector
                         3825   
     947B   8A           3826   	txa             ; accm=job cmd/x=job#
     947C   0A           3827   	asl  a
     947D   AA           3828   	tax
     947E   B5 0C        3829   	lda  hdrs+1,x   ; 4/12
     9480   85 28        3830   	sta  cmd        ; save sector
     9482   B5 0B        3831   	lda  hdrs,x     ; 4/12
     9484   F0 1A        3832   	beq  tserr
                         3833   
     9486   CD 022C      3834   	cmp  maxtrk
     9489   B0 15        3835   	bcs  tserr      ; track too large
                         3836   
     948B   68           3837   	pla             ; check for write
     948C   48           3838   	pha
     948D   C9 90        3839   	cmp  #wrtsd_dv
     948F   D0 42        3840   	bne  sjb1       ; not write,skip check
                         3841   
     9491   A5 6F        3842   	lda  dskver     ; get version #
     9493   CD 01EB      3843   	cmp  vernum
     9496   D0 33        3844   	bne  vnerr      ; not same vernum #
                         3845   
     9498   A5 75        3846   	lda  numsec
     949A   C5 28        3847   	cmp  cmd
     949C   F0 02        3848   	beq  tserr
                         3849   
     949E   B0 33        3850   	bcs  sjb1       ; sector is ok!
                         3851   
     94A0   20 94A8      3852   tserr   jsr  hed2ts     ; illegal trk/sec
     94A3   A9 66        3853   tser1   lda  #badts
U    94A5   4C 0000 "    3854   	jmp  cmder2
                         3855   
     94A8   A5 6C        3856   hed2ts  lda  jobnum
     94AA   0A           3857   	asl  a
     94AB   AA           3858   	tax
     94AC   B5 0B        3859   	lda  hdrs,x     ; 4/12
     94AE   85 4D        3860   	sta  track
     94B0   B5 0C        3861   	lda  hdrs+1,x   ; 4/12
     94B2   85 4E        3862   	sta  sector
     94B4   60           3863   	rts
                         3864   
     94B5   A5 4D        3865   tschk   lda  track
     94B7   F0 EA        3866   	beq  tser1
                         3867   
     94B9   CD 022C      3868   	cmp  maxtrk
     94BC   B0 E5        3869   	bcs  tser1
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 55-1
"job"   JOB.SRC

Error Addr  Code          Seq   Source statement

                         3870   
     94BE   C5 90        3871   	cmp  startrk
     94C0   90 E1        3872   	bcc  tser1
                         3873   
     94C2   A5 75        3874   	lda  numsec
     94C4   C5 4E        3875   	cmp  sector
     94C6   F0 DB        3876   	beq  tser1
                         3877   
     94C8   90 D9        3878   	bcc  tser1
                         3879   
     94CA   60           3880   	rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 56
"job"   JOB.SRC

Error Addr  Code          Seq   Source statement

     94CB   20 94A8      3882   vnerr   jsr  hed2ts
     94CE   A9 73        3883   	lda  #cbmv2     ; write to wrong version
U    94D0   4C 0000 "    3884   	jmp  cmder2
                         3885   
     94D3   A6 6C        3886   sjb1    ldx  jobnum
     94D5   68           3887   	pla
     94D6   85 28        3888   	sta  cmd
     94D8   9D 0272      3889   	sta  lstjob,x
     94DB   4C 959D      3890   	jmp  strobe_controller
                         3891   
                         3892   ;do job in .a, set up error count
                         3893   ;and lstjob. rtn when job done ok
                         3894   
     94DE   A9 80        3895   doread  lda  #read_dv
     94E0   D0 02        3896   	bne  dojob      ; -jmp
                         3897   
     94E2   A9 90        3898   dowrit  lda  #wrtsd_dv
     94E4   A6 6C        3899   dojob   ldx  jobnum
     94E6   85 28        3900   doit    sta  cmd
     94E8   A5 28        3901   doit2   lda  cmd
     94EA   20 9473      3902   	jsr  setjob
     94ED   20 94F8      3903   watjob  jsr  tstjob     ; wait job(x) done
     94F0   48           3904   	pha             ; clr jobrtn flag
     94F1   A9 00        3905   	lda  #0
     94F3   8D 02A8      3906   	sta  jobrtn
     94F6   68           3907   	pla
     94F7   60           3908   	rts
                         3909   
     94F8   20 9598      3910   tstjob  jsr  test_controller
     94FB   C9 02        3911   	cmp  #2
     94FD   90 19        3912   	bcc  ok
                         3913   
     94FF   C9 08        3914   	cmp  #8         ; check for wp switch on
     9501   F0 0C        3915   	beq  tj10
                         3916   
     9503   C9 0B        3917   	cmp  #11        ; check for id mismatch
     9505   F0 08        3918   	beq  tj10
                         3919   
     9507   C9 03        3920   	cmp  #$3        ; check for nodrive
     9509   F0 04        3921   	beq  tj10
                         3922   
     950B   C9 0F        3923   	cmp  #$f        ; check for nodrive
     950D   D0 0B        3924   	bne  recov
                         3925   
     950F   24 81        3926   tj10    bit  xjobrtn    ; job return which is not cleared
     9511   30 05        3927   	bmi  ok
                         3928   
     9513   2C 02A8      3929   	bit  jobrtn
     9516   10 17        3930   	bpl  quit2
                         3931   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 56-1
"job"   JOB.SRC

Error Addr  Code          Seq   Source statement

     9518   18           3932   ok      clc             ; c=0 finished ok or quit
     9519   60           3933   	rts
                         3934   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 57
"job"   JOB.SRC

Error Addr  Code          Seq   Source statement

     951A   98           3936   recov   tya             ; save .y
     951B   48           3937   	pha
     951C   20 9564      3938   	jsr  dorec
     951F   C9 02        3939   	cmp  #2
     9521   90 37        3940   	bcc  rec92
                         3941   
     9523   24 30        3942   	bit  revcnt     ; check bump-on flag
     9525   10 12        3943   	bpl  rec7       ; no bump?
                         3944   
     9527   68           3945   quit    pla
     9528   C9 90        3946   	cmp  #wrtsd_dv  ; check original job
     952A   D0 03        3947   	bne  quit2
                         3948   
     952C   9D 0272      3949   	sta  lstjob,x   ; must restore original
     952F   A9 00        3950   quit2   lda  #0
     9531   8D 02A8      3951   	sta  jobrtn
     9534   B5 02        3952   	lda  jobs,x     ; .a= error #
U    9536   20 0000 "    3953   	jsr  error
                         3954   
     9539   24 81        3955   rec7    bit  xjobrtn
     953B   30 21        3956   	bmi  rec95
                         3957   
     953D   2C 02A8      3958   	bit  jobrtn
     9540   30 1C        3959   	bmi  rec95      ; return job error
                         3960   
     9542   48           3961   	pha
     9543   A9 C0        3962   	lda  #restore_dv
     9545   20 959D      3963   	jsr  strobe_controller
                         3964   
     9548   20 9564      3965   	jsr  dorec      ; try one last set
     954B   C9 02        3966   	cmp  #2
     954D   B0 D8        3967   	bcs  quit       ; it clearly ain't gonna work
                         3968   
     954F   68           3969   rec9    pla             ; check original job for write
     9550   C9 90        3970   	cmp  #wrtsd_dv
     9552   D0 0A        3971   	bne  rec95      ; original job worked
                         3972   
     9554   9D 0272      3973   	sta  lstjob,x   ; set write job back
     9557   20 9564      3974   	jsr  dorec      ; try last set of writes
     955A   C9 02        3975   rec92   cmp  #2         ; check error code
     955C   B0 D1        3976   	bcs  quit2      ; error
                         3977   
     955E   68           3978   rec95   pla
     955F   A8           3979   	tay             ; restore .y
     9560   B5 02        3980   	lda  jobs,x
     9562   18           3981   	clc             ; ok!
     9563   60           3982   	rts
                         3983   
                         3984   
     9564   A5 30        3985   dorec   lda  revcnt     ; re-try job revcnt...
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 57-1
"job"   JOB.SRC

Error Addr  Code          Seq   Source statement

     9566   29 3F        3986   	and  #$3f       ; ...# of times
     9568   A8           3987   	tay
     9569   A5 79        3988   dorec1  lda  ledprint
     956B   09 20        3989   	ora  #pwr_led
     956D   85 79        3990   	sta  ledprint
     956F   BD 0272      3991   	lda  lstjob,x   ; set last job
     9572   20 959D      3992   	jsr  strobe_controller
     9575   C9 02        3993   	cmp  #2
     9577   90 03        3994   	bcc  dorec3     ; it worked
                         3995   
     9579   88           3996   	dey
     957A   D0 ED        3997   	bne  dorec1     ; keep trying
                         3998   
     957C   48           3999   dorec3  pha
     957D   A5 79        4000   	lda  ledprint
     957F   29 DF        4001   	and  #all-pwr_led
     9581   85 79        4002   	sta  ledprint
     9583   68           4003   	pla
     9584   60           4004   	rts             ; finished
                         4005   
     9585   20 9F11      4006   sethdr  jsr  getact     ; set hdr of act buf of
     9588   0A           4007   seth    asl  a          ; current lindx to t,s,id
     9589   A8           4008   	tay
     958A   A5 4D        4009   	lda  track
     958C   99 000B      4010   	sta  hdrs,y     ; 4/12 set track
     958F   A5 4E        4011   	lda  sector
     9591   99 000C      4012   	sta  hdrs+1,y   ; 4/12 set sector
     9594   A9 00        4013   	lda  #0
     9596   AA           4014   	tax
     9597   60           4015   	rts
                         4016   
     9598                4017   test_controller
     9598   08           4018   	php
     9599   58           4019   	cli
     959A   4C 95A1      4020   	jmp  brk_controller
                         4021   
     959D                4022   strobe_controller
     959D   08           4023   	php
     959E   58           4024   	cli             ; let controller run free
     959F   95 02        4025   	sta  jobs,x     ; send job
                         4026   
     95A1                4027   brk_controller
     95A1   00           4028   	brk
     95A2   EA           4029   	nop
     95A3   B5 02        4030   1$      lda  jobs,x
     95A5   30 FC        4031   	bmi  1$
                         4032   
     95A7   28           4033   	plp
     95A8   B5 02        4034   	lda  jobs,x     ; get status
     95AA   60           4035   	rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 57-2
"job"   ADDFIL.SRC

Error Addr  Code          Seq   Source statement

                         4036   	.INCLUDE addfil
                         4037   	.messg "addfil"
                         4038   	.subttl "addfil"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 58
"addfil"   ADDFIL.SRC

Error Addr  Code          Seq   Source statement

                         4040   ; add file to directory
     95AB   A5 52        4041   addfil  lda  sa         ; save variables
     95AD   48           4042   	pha
     95AE   A5 50        4043   	lda  lindx
     95B0   48           4044   	pha
     95B1   A5 4E        4045   	lda  sector
     95B3   48           4046   	pha
     95B4   A5 4D        4047   	lda  track
     95B6   48           4048   	pha
     95B7   A9 11        4049   	lda  #irsa
     95B9   85 52        4050   	sta  sa
     95BB   20 9D79      4051   	jsr  curblk     ; use last accessed search
     95BE   AD 022D      4052   	lda  type
     95C1   48           4053   	pha
     95C2   A6 6C        4054   	ldx  jobnum
     95C4   A5 EF        4055   	lda  fildrv
     95C6   5D 0272      4056   	eor  lstjob,x
     95C9   4A           4057   	lsr  a
     95CA   90 0B        4058   	bcc  af08       ; same drive as required
                         4059   
     95CC   A2 01        4060   	ldx  #1
     95CE   86 73        4061   	stx  delind     ; look for deleted entry
     95D0   20 8424      4062   	jsr  srchst
     95D3   F0 20        4063   	beq  af15       ; all full, new sector
                         4064   
     95D5   D0 2D        4065   	bne  af20       ; found one
                         4066   
     95D7   A5 72        4067   af08    lda  delsec
     95D9   F0 11        4068   	beq  af10       ; deleted entry not located
                         4069   
     95DB   C5 4E        4070   	cmp  sector
     95DD   F0 25        4071   	beq  af20       ; sector is resident
                         4072   
     95DF   85 4E        4073   	sta  sector
     95E1   20 93BD      4074   	jsr  drtrd      ; read sector in
     95E4   4C 9604      4075   	jmp  af20
                         4076   
     95E7   A9 72        4077   af09    lda  #dskful
     95E9   20 807C      4078   	jsr  cmderr     ; disk full
                         4079   	
     95EC   A9 01        4080   af10    lda  #1         ; find deleted entry
     95EE   85 73        4081   	sta  delind
     95F0   20 8489      4082   	jsr  search
     95F3   D0 0F        4083   	bne  af20
                         4084   
     95F5   20 93E7      4085   af15    jsr  nxdrbk     ; all full, new sector
     95F8   A5 4E        4086   	lda  sector
     95FA   C9 03        4087   	cmp  #sysdirsec
     95FC   90 E9        4088   	bcc  af09       ; must be > sysdirsec
                         4089   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 58-1
"addfil"   ADDFIL.SRC

Error Addr  Code          Seq   Source statement

     95FE   85 72        4090   	sta  delsec
     9600   A9 02        4091   	lda  #2
     9602   85 73        4092   	sta  delind
     9604   A5 73        4093   af20    lda  delind
     9606   20 9422      4094   	jsr  setpnt
     9609   68           4095   	pla
     960A   8D 022D      4096   	sta  type       ; set type
     960D   C9 04        4097   	cmp  #reltyp
     960F   D0 02        4098   	bne  af25
                         4099   
     9611   09 80        4100   	ora  #$80
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 59
"addfil"   ADDFIL.SRC

Error Addr  Code          Seq   Source statement

     9613   20 8EB1      4102   af25    jsr  putbyt
     9616   68           4103   	pla
     9617   8D 0297      4104   	sta  filtrk     ; ...table & entry
     961A   20 8EB1      4105   	jsr  putbyt
     961D   68           4106   	pla
     961E   8D 029C      4107   	sta  filsec     ; set sector link in...
     9621   20 8EB1      4108   	jsr  putbyt     ; ...table & entry
     9624   20 9F11      4109   	jsr  getact
     9627   A8           4110   	tay
     9628   AD 0291      4111   	lda  filtbl
     962B   AA           4112   	tax
     962C   A9 10        4113   	lda  #16
     962E   20 84EE      4114   	jsr  trname     ; transfer name
     9631   A0 10        4115   	ldy  #16
     9633   A9 00        4116   	lda  #0         ; clear # of blocks &...
     9635   91 64        4117   af30    sta  (dirbuf),y ; ...& replace links
     9637   C8           4118   	iny
     9638   C0 1B        4119   	cpy  #27
     963A   90 F9        4120   	bcc  af30
                         4121   
     963C   AD 022D      4122   	lda  type       ; a relative file ?
     963F   C9 04        4123   	cmp  #reltyp
     9641   D0 13        4124   	bne  af50       ; no
                         4125   
     9643   A0 10        4126   	ldy  #16        ; yes
     9645   AD 0270      4127   	lda  trkss      ; get ss track
     9648   91 64        4128   	sta  (dirbuf),y ; put in directory
     964A   C8           4129   	iny
     964B   AD 0271      4130   	lda  secss      ; get ss sector
     964E   91 64        4131   	sta  (dirbuf),y ; put in
     9650   C8           4132   	iny
     9651   AD 026F      4133   	lda  rec        ; get record size
     9654   91 64        4134   	sta  (dirbuf),y
     9656   20 93C1      4135   af50    jsr  drtwrt     ; write it out
     9659   68           4136   	pla
     965A   85 50        4137   	sta  lindx
     965C   AA           4138   	tax
     965D   68           4139   	pla
     965E   85 52        4140   	sta  sa
     9660   A5 72        4141   	lda  delsec
     9662   85 E5        4142   	sta  entsec
     9664   9D 027D      4143   	sta  dsec,x
     9667   A5 73        4144   	lda  delind
     9669   85 EA        4145   	sta  entind
     966B   9D 0284      4146   	sta  dind,x
     966E   AD 022D      4147   	lda  type
     9671   85 F4        4148   	sta  pattyp
     9673   A9 00        4149   	lda  #0
     9675   85 EF        4150   	sta  fildrv
     9677   60           4151   	rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 59-1
"addfil"   OPEN.SRC

Error Addr  Code          Seq   Source statement

                         4152   	.INCLUDE open
                         4153           .messg "open"
                         4154           .subttl "open"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 60
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

                         4156   ;open channel from ieee
                         4157   ;  parses the input string that is
                         4158   ;  sent as an open data channel,
                         4159   ;  load, or save.  channels are allocated
                         4160   ;  and the directory is searched for
                         4161   ;  the filename contained in the string.
                         4162   
     9678   A5 52        4163   open    lda  sa
     967A   85 7A        4164           sta  tempsa
     967C   20 8165      4165           jsr  cmdset     ; initiate cmd ptrs
     967F   8E 022A      4166           stx  cmdnum
     9682   AE 0200      4167           ldx  cmdbuf
     9685   A5 7A        4168           lda  tempsa
     9687   D0 27        4169           bne  op021
                         4170   
     9689   E0 2A        4171           cpx  #'*        ; load last?
     968B   D0 23        4172           bne  op021
                         4173   
     968D   A5 4C        4174           lda  prgtrk
     968F   F0 45        4175           beq  op0415     ; no last prog, init 0
                         4176   
     9691   85 4D        4177           sta  track      ; load last program
     9693   A9 00        4178           lda  #0
     9695   85 EF        4179           sta  fildrv
     9697   A9 02        4180           lda  #prgtyp
     9699   85 F4        4181           sta  pattyp
     969B   AD 028B      4182           lda  prgsec
     969E   85 4E        4183           sta  sector
     96A0   20 81F6      4184           jsr  setlds     ; make sure led gets turned on!!
     96A3   20 9B0D      4185           jsr  opnrch
     96A6   A9 04        4186           lda  #prgtyp+prgtyp
     96A8   A6 50        4187   endrd   ldx  lindx
     96AA   99 00F9      4188           sta  filtyp,y
     96AD   4C 804C      4189           jmp  endcmd
                         4190   
     96B0   E0 24        4191   op021   cpx  #'$
     96B2   D0 1B        4192           bne  op041
                         4193   
     96B4   A5 7A        4194           lda  tempsa     ; load directory
     96B6   D0 03        4195           bne  op04
                         4196   
     96B8   4C 98F7      4197           jmp  loadir
                         4198   
     96BB   20 8085      4199   op04    jsr  simprs     ; open dir as seq file
     96BE   AD 022B      4200           lda  dirtrk
     96C1   85 4D        4201           sta  track
     96C3   A9 00        4202           lda  #0
     96C5   85 4E        4203           sta  sector
     96C7   20 9B0D      4204           jsr  opnrch
     96CA   A9 02        4205           lda  #seqtyp+seqtyp
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 60-1
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

     96CC   4C 96A8      4206           jmp  endrd
                         4207   
     96CF   E0 23        4208   op041   cpx  #'#        ; "#" is direct access
     96D1   D0 0B        4209           bne  op042
                         4210   
     96D3   4C 89E4      4211           jmp  opnblk
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 61
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

     96D6   A9 02        4213   op0415  lda  #prgtyp    ; program type
     96D8   8D 0233      4214           sta  typflg
     96DB   20 8F03      4215           jsr  initdr
     96DE   20 8099      4216   op042   jsr  prscln     ; look for ":"
     96E1   D0 04        4217           bne  op049
                         4218   
     96E3   A2 00        4219           ldx  #0
     96E5   F0 0C        4220           beq  op20       ; bra
                         4221   
     96E7   8A           4222   op049   txa
     96E8   F0 05        4223           beq  op10
                         4224   
     96EA   A9 30        4225           lda  #badsyn    ; something amiss
     96EC   4C 807C      4226           jmp  cmderr
                         4227   
     96EF   88           4228   op10    dey     	; back up to ":"
     96F0   F0 01        4229           beq  op20       ; 1st char is ":"
                         4230   
     96F2   88           4231           dey
     96F3   8C 0291      4232   op20    sty  filtbl     ; save filename ptr
     96F6   A9 8D        4233           lda  #$8d       ; look for cr-shifted
     96F8   20 811C      4234           jsr  parse
     96FB   E8           4235           inx
     96FC   8E 022F      4236           stx  f2cnt
     96FF   20 81FD      4237           jsr  onedrv
     9702   20 82A2      4238           jsr  optsch
     9705   20 82ED      4239           jsr  ffst       ; look for file entry
     9708   A2 00        4240           ldx  #0
     970A   8E 026F      4241           stx  rec
     970D   8E 02A7      4242           stx  mode       ; read mode
     9710   8E 022D      4243           stx  type       ; deleted
     9713   E8           4244           inx
     9714   EC 022E      4245           cpx  f1cnt
     9717   B0 10        4246           bcs  op40       ; no parameters
                         4247   
     9719   20 98AB      4248           jsr  cktm       ; check for type & mode
     971C   E8           4249           inx
     971D   EC 022E      4250           cpx  f1cnt
     9720   B0 07        4251           bcs  op40       ; only one parameter
                         4252   
     9722   C0 04        4253           cpy  #reltyp
     9724   F0 38        4254           beq  op60       ; set record size
                         4255   
     9726   20 98AB      4256           jsr  cktm       ; set type/mode
     9729   A6 7A        4257   op40    ldx  tempsa
     972B   86 52        4258           stx  sa         ; set sa back
     972D   E0 02        4259           cpx  #2
     972F   B0 0D        4260           bcs  op45       ; not load or save
                         4261   
     9731   8E 02A7      4262           stx  mode       ; mode=sa
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 61-1
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

     9734   AD 022D      4263           lda  type
     9737   D0 1B        4264           bne  op50       ; type from parm
                         4265   
     9739   A9 02        4266           lda  #prgtyp
     973B   8D 022D      4267           sta  type       ; use prg
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 62
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

     973E   AD 022D      4269   op45    lda  type
     9741   D0 11        4270           bne  op50       ; type from parm
                         4271   
     9743   A5 F4        4272           lda  pattyp
     9745   29 07        4273           and  #typmsk
     9747   8D 022D      4274           sta  type       ; type from file
     974A   AD 0297      4275           lda  filtrk
     974D   D0 05        4276           bne  op50       ; yes, it exists
                         4277   
     974F   A9 01        4278           lda  #seqtyp
     9751   8D 022D      4279           sta  type       ; default is seq
     9754   AD 02A7      4280   op50    lda  mode
     9757   C9 01        4281           cmp  #wtmode
     9759   F0 18        4282           beq  op75       ; go write
                         4283   
     975B   4C 97ED      4284           jmp  op90
                         4285   
     975E   BC 0291      4286   op60    ldy  filtbl,x   ; get record size
     9761   B9 0200      4287           lda  cmdbuf,y
     9764   8D 026F      4288           sta  rec
     9767   AD 0297      4289           lda  filtrk
     976A   D0 BD        4290           bne  op40       ; it's here, read
                         4291   
     976C   A9 01        4292           lda  #wtmode    ; use write to open
     976E   8D 02A7      4293           sta  mode
     9771   D0 B6        4294           bne  op40       ; (bra)
                         4295   
     9773   A5 F4        4296   op75    lda  pattyp
     9775   29 80        4297           and  #$80
     9777   AA           4298           tax
     9778   D0 14        4299           bne  op81
                         4300   
     977A   A9 20        4301           lda  #$20       ; open write
     977C   24 F4        4302           bit  pattyp
     977E   F0 06        4303           beq  op80
                         4304   
     9780   20 873B      4305           jsr  deldir     ; created
     9783   4C 9890      4306           jmp  opwrit
                         4307   
     9786   AD 0297      4308   op80    lda  filtrk
     9789   D0 03        4309           bne  op81
     978B   4C 9890      4310           jmp  opwrit     ; not found, ok!
                         4311   
     978E   AD 0200      4312   op81    lda  cmdbuf
     9791   C9 40        4313           cmp  #'@        ; check for replace
     9793   F0 0D        4314           beq  op82
                         4315   
     9795   8A           4316           txa
     9796   D0 05        4317           bne  op815
                         4318   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 62-1
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

     9798   A9 63        4319           lda  #flexst
     979A   4C 807C      4320           jmp  cmderr
                         4321   
     979D   A9 33        4322   op815   lda  #badfn
     979F   4C 807C      4323           jmp  cmderr
                         4324   
     97A2   A5 F4        4325   op82    lda  pattyp     ; replace
     97A4   29 07        4326           and  #typmsk
     97A6   CD 022D      4327           cmp  type
     97A9   D0 67        4328           bne  op115
                         4329   
     97AB   C9 04        4330           cmp  #reltyp
     97AD   F0 63        4331           beq  op115
                         4332   
     97AF   20 9BC3      4333           jsr  opnwch
     97B2   A5 50        4334           lda  lindx
     97B4   8D 028C      4335           sta  wlindx
     97B7   A9 11        4336           lda  #irsa      ; internal chan
     97B9   85 52        4337           sta  sa
     97BB   20 9027      4338           jsr  fndrch
     97BE   AD 0232      4339           lda  index
     97C1   20 9422      4340           jsr  setpnt
     97C4   A0 00        4341           ldy  #0
     97C6   B1 64        4342           lda  (dirbuf),y
     97C8   09 20        4343           ora  #$20       ; set replace bit
     97CA   91 64        4344           sta  (dirbuf),y
     97CC   A0 1A        4345           ldy  #26
     97CE   A5 4D        4346           lda  track
     97D0   91 64        4347           sta  (dirbuf),y
     97D2   C8           4348           iny
     97D3   A5 4E        4349           lda  sector
     97D5   91 64        4350           sta  (dirbuf),y
     97D7   AE 028C      4351           ldx  wlindx
     97DA   A5 E5        4352           lda  entsec
     97DC   9D 027D      4353           sta  dsec,x
     97DF   A5 EA        4354           lda  entind
     97E1   9D 0284      4355           sta  dind,x
     97E4   20 9D79      4356           jsr  curblk
     97E7   20 93C1      4357           jsr  drtwrt
     97EA   4C 9896      4358           jmp  opfin
                         4359   
     97ED   AD 0297      4360   op90    lda  filtrk     ; open read (& load)
     97F0   D0 05        4361           bne  op100
                         4362   
     97F2   A9 62        4363           lda  #flntfd    ; track not recorded
     97F4   4C 807C      4364           jmp  cmderr     ; not found
                         4365   
     97F7   AD 02A7      4366   op100   lda  mode
     97FA   C9 03        4367           cmp  #mdmode
     97FC   F0 0B        4368           beq  op110
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 62-2
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

                         4369   
     97FE   A9 20        4370           lda  #$20
     9800   24 F4        4371           bit  pattyp
     9802   F0 05        4372           beq  op110
                         4373   
     9804   A9 60        4374           lda  #filopn
     9806   4C 807C      4375           jmp  cmderr
                         4376   
     9809   A5 F4        4377   op110   lda  pattyp
     980B   29 07        4378           and  #typmsk    ; type is in index table
     980D   CD 022D      4379           cmp  type
     9810   F0 05        4380           beq  op120
                         4381   
     9812   A9 64        4382   op115   lda  #mistyp    ; type mismatch
     9814   4C 807C      4383           jmp  cmderr
                         4384   
     9817   A0 00        4385   op120   ldy  #0         ; everything is ok!
     9819   8C 0230      4386           sty  f2ptr
     981C   AE 02A7      4387           ldx  mode
     981F   E0 02        4388           cpx  #apmode
     9821   D0 1A        4389           bne  op125
                         4390   
     9823   C9 04        4391           cmp  #reltyp
     9825   F0 EB        4392           beq  op115
                         4393   
     9827   B1 64        4394           lda  (dirbuf),y
     9829   29 4F        4395           and  #$4f
     982B   91 64        4396           sta  (dirbuf),y
     982D   A5 52        4397           lda  sa
     982F   48           4398           pha
     9830   A9 11        4399           lda  #irsa
     9832   85 52        4400           sta  sa
     9834   20 9D79      4401           jsr  curblk
     9837   20 93C1      4402           jsr  drtwrt
     983A   68           4403           pla
     983B   85 52        4404           sta  sa
     983D   20 984D      4405   op125   jsr  opread
     9840   AD 02A7      4406           lda  mode
     9843   C9 02        4407           cmp  #apmode
     9845   D0 4F        4408           bne  opfin
                         4409   
     9847   20 98CC      4410           jsr  append
     984A   4C 804C      4411           jmp  endcmd
                         4412   
     984D   A0 13        4413   opread  ldy  #19
     984F   B1 64        4414           lda  (dirbuf),y
     9851   8D 0270      4415           sta  trkss
     9854   C8           4416           iny
     9855   B1 64        4417           lda  (dirbuf),y
     9857   8D 0271      4418           sta  secss
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 62-3
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

     985A   C8           4419           iny
     985B   B1 64        4420           lda  (dirbuf),y
     985D   AE 026F      4421           ldx  rec
     9860   8D 026F      4422           sta  rec
     9863   8A           4423           txa
     9864   F0 0A        4424           beq  op130
                         4425   
     9866   CD 026F      4426           cmp  rec
     9869   F0 05        4427           beq  op130
                         4428   
     986B   A9 50        4429           lda  #norec
     986D   20 807C      4430           jsr  cmderr
                         4431   
     9870   AE 0230      4432   op130   ldx  f2ptr
     9873   BD 0297      4433           lda  filtrk,x
     9876   85 4D        4434           sta  track
     9878   BD 029C      4435           lda  filsec,x
     987B   85 4E        4436           sta  sector
     987D   20 9B0D      4437           jsr  opnrch
     9880   A4 50        4438           ldy  lindx      ; open a read chnl
     9882   AE 0230      4439           ldx  f2ptr
     9885   B5 E5        4440           lda  entsec,x
     9887   99 027D      4441           sta  dsec,y
     988A   B5 EA        4442           lda  entind,x
     988C   99 0284      4443           sta  dind,y
     988F   60           4444           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 63
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

     9890   20 9BC3      4446   opwrit  jsr  opnwch
     9893   20 95AB      4447           jsr  addfil     ; add to directory
     9896   A5 52        4448   opfin   lda  sa
     9898   C9 02        4449           cmp  #2
     989A   B0 0C        4450           bcs  opf1
                         4451   
     989C   20 9D7C      4452           jsr  gethdr
     989F   A5 4D        4453           lda  track
     98A1   85 4C        4454           sta  prgtrk
     98A3   A5 4E        4455           lda  sector
     98A5   8D 028B      4456           sta  prgsec
     98A8   4C 8050      4457   opf1    jmp  endsav
                         4458   
     98AB   BC 0291      4459   cktm    ldy  filtbl,x   ; get ptr
     98AE   B9 0200      4460           lda  cmdbuf,y   ; get char
U    98B1   A0 00   "    4461           ldy  #nmodes
     98B3   88           4462   ckm1    dey
     98B4   30 08        4463           bmi  ckm2       ; no valid mode
                         4464   
U    98B6   D9 0000 "    4465           cmp  modlst,y
     98B9   D0 F8        4466           bne  ckm1
                         4467   
     98BB   8C 02A7      4468           sty  mode       ; mode found
U    98BE   A0 00   "    4469   ckm2    ldy  #ntypes
     98C0   88           4470   ckt1    dey
     98C1   30 08        4471           bmi  ckt2       ; no valid type
                         4472   
U    98C3   D9 0000 "    4473           cmp  tplst,y
     98C6   D0 F8        4474           bne  ckt1
                         4475   
     98C8   8C 022D      4476           sty  type       ; type found
     98CB   60           4477   ckt2    rts
                         4478   
     98CC   20 887A      4479   append  jsr  gcbyte
     98CF   A9 80        4480           lda  #lrf
     98D1   20 9CE4      4481           jsr  tstflg
     98D4   F0 F6        4482           beq  append
                         4483   
     98D6   20 9DCE      4484           jsr  rdlnk
     98D9   A6 4E        4485           ldx  sector
     98DB   E8           4486           inx
     98DC   8A           4487           txa
     98DD   D0 05        4488           bne  ap30
                         4489   
     98DF   20 9118      4490           jsr  wrt0       ; get another block
                         4491   
     98E2   A9 02        4492           lda  #2
     98E4   20 9422      4493   ap30    jsr  setpnt
     98E7   A6 50        4494           ldx  lindx
     98E9   A9 01        4495           lda  #rdylst
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 63-1
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

     98EB   9D 0234      4496           sta  chnrdy,x
     98EE   A9 80        4497           lda  #$80       ; chnl bit
     98F0   05 50        4498           ora  lindx
     98F2   A6 52        4499           ldx  sa
     98F4   95 A8        4500           sta  lintab,x
     98F6   60           4501           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 64
"open"   OPEN.SRC

Error Addr  Code          Seq   Source statement

                         4503   ; load directory
U    98F7   A9 00   "    4504   loadir  lda  #ldcmd
     98F9   8D 022A      4505           sta  cmdnum
     98FC   A9 00        4506           lda  #0         ; load only drive zero
     98FE   A6 29        4507           ldx  cmdsiz
     9900   CA           4508           dex
     9901   F0 0B        4509           beq  ld02
                         4510   
     9903   CA           4511           dex     	; load by name
     9904   D0 21        4512           bne  ld03
                         4513   
     9906   AD 0201      4514           lda  cmdbuf+1
     9909   20 8295      4515           jsr  tst0v1
     990C   30 19        4516           bmi  ld03
                         4517   
     990E   85 EF        4518   ld02    sta  fildrv     ; ld dir with a star
     9910   EE 022E      4519           inc  f1cnt
     9913   EE 022F      4520           inc  f2cnt
     9916   EE 0291      4521           inc  filtbl
     9919   A9 80        4522           lda  #$80
     991B   85 F4        4523           sta  pattyp
     991D   A9 2A        4524           lda  #'*
     991F   8D 0200      4525           sta  cmdbuf     ; cover both cases
     9922   8D 0201      4526           sta  cmdbuf+1
     9925   D0 18        4527           bne  ld10       ; (branch)
                         4528   
     9927   20 8099      4529   ld03    jsr  prscln
     992A   D0 05        4530           bne  ld05       ; found ":"
                         4531   
     992C   20 81AF      4532           jsr  cmdrst     ; search by name on both drives
     992F   A0 03        4533           ldy  #3
     9931   88           4534   ld05    dey
     9932   88           4535           dey
     9933   8C 0291      4536           sty  filtbl
     9936   20 80B4      4537           jsr  tc35       ; parse & set tables
     9939   20 8270      4538           jsr  fs1set
     993C   20 820B      4539           jsr  alldrs
     993F   20 82A2      4540   ld10    jsr  optsch     ; new directory
     9942   20 8627      4541           jsr  newdir
     9945   20 82ED      4542           jsr  ffst
     9948   20 B17C      4543           jsr  stdir      ; start directory
     994B   20 9071      4544           jsr  getbyt     ; set 1st byte
     994E   A6 50        4545           ldx  lindx
     9950   9D 023B      4546           sta  chndat,x
     9953   A9 04        4547           lda  #4
     9955   95 F9        4548           sta  filtyp,x
     9957   A9 00        4549           lda  #0
     9959   85 CD        4550           sta  buftab+cbptr
     995B   60           4551           rts
                         4552   	.INCLUDE close
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 64-1
"open"   CLOSE.SRC

Error Addr  Code          Seq   Source statement

                         4553           .messg "close"
                         4554           .subttl "close"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 65
"close"   CLOSE.SRC

Error Addr  Code          Seq   Source statement

                         4556   ; close the file associated with sa
                         4557   
     995C   A5 52        4558   close   lda  sa
     995E   D0 0B        4559           bne  cls10      ; directory close
                         4560   
     9960   A9 00        4561           lda  #0
     9962   8D 026E      4562           sta  dirlst     ; clear dir list
     9965   20 919E      4563           jsr  frechn
     9968   4C 9434      4564   cls05   jmp  freich
                         4565   
     996B   C9 0F        4566   cls10   cmp  #$f
     996D   F0 17        4567           beq  clsall     ; close cmd chanl
                         4568   
     996F   20 999F      4569           jsr  clschn     ; close channel
     9972   A5 52        4570           lda  sa
     9974   C9 02        4571           cmp  #2
     9976   90 F0        4572           bcc  cls05
                         4573   
     9978   AD 02AB      4574           lda  erword
     997B   D0 06        4575           bne  cls15      ; last command had an error
                         4576   
     997D   20 B515      4577   	jsr  mapout     ; write bam
     9980   4C 804C      4578           jmp  endcmd
                         4579   
     9983   4C 8067      4580   cls15   jmp  scren1
                         4581   
     9986   A9 0E        4582   clsall  lda  #14
     9988   85 52        4583           sta  sa
     998A   20 999F      4584   cls20   jsr  clschn
     998D   C6 52        4585           dec  sa
     998F   10 F9        4586           bpl  cls20
                         4587   
     9991   AD 02AB      4588           lda  erword
     9994   D0 06        4589           bne  cls25      ; last command had an error
                         4590   
     9996   20 B515      4591   	jsr  mapout     ; write bam
     9999   4C 804C      4592           jmp  endcmd
                         4593   
     999C   4C 8067      4594   cls25   jmp  scren1
     999F   A6 52        4595   clschn  ldx  sa
     99A1   B5 A8        4596           lda  lintab,x
     99A3   C9 FF        4597           cmp  #$ff
     99A5   D0 01        4598           bne  clsc28
                         4599   
     99A7   60           4600           rts
                         4601   
     99A8   29 0F        4602   clsc28  and  #$f
     99AA   85 50        4603           sta  lindx
     99AC   20 905F      4604           jsr  typfil
     99AF   C9 07        4605           cmp  #dirtyp
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 65-1
"close"   CLOSE.SRC

Error Addr  Code          Seq   Source statement

     99B1   F0 0F        4606           beq  clsc30     ; direct channel
                         4607   
     99B3   C9 04        4608           cmp  #reltyp
     99B5   F0 11        4609           beq  clsrel
                         4610   
     99B7   20 9042      4611           jsr  fndwch     ; look for write channel
     99BA   B0 09        4612           bcs  clsc31
                         4613   
     99BC   20 9A2A      4614           jsr  clswrt     ; close seq write
     99BF   20 9A72      4615           jsr  clsdir     ; close directory
     99C2   20 B515      4616   clsc30  jsr  mapout     ; write bam
     99C5   4C 919E      4617   clsc31  jmp  frechn
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 66
"close"   CLOSE.SRC

Error Addr  Code          Seq   Source statement

     99C8   20 9D2E      4619   clsrel  jsr  scrub
     99CB   20 8D7D      4620           jsr  dblbuf
     99CE   20 A15C      4621           jsr  ssend
     99D1   A6 69        4622           ldx  ssnum
     99D3   86 44        4623           stx  t4
     99D5   20 A56E      4624   	jsr  hugerel
     99D8   F0 2B        4625   	beq  clsbig	; close the big one
                         4626   
     99DA   E6 44        4627   	inc  t4
     99DC   A9 00        4628           lda  #0
     99DE   85 41        4629           sta  t1
     99E0   85 42        4630           sta  t2
     99E2   A5 6A        4631           lda  ssind
     99E4   38           4632           sec
     99E5   E9 0E        4633           sbc  #ssioff-2
     99E7   85 43        4634           sta  t3
     99E9   20 9E82      4635           jsr  sscalc
     99EC   A6 50        4636           ldx  lindx
     99EE   A5 41        4637           lda  t1
     99F0   9D 0249      4638           sta  nbkl,x
     99F3   A5 42        4639           lda  t2
     99F5   9D 0250      4640           sta  nbkh,x
     99F8                4641   clsre1
     99F8   A9 40        4642   	lda  #dyfile
     99FA   20 9CE4      4643           jsr  tstflg
     99FD   F0 03        4644           beq  clsr1
                         4645   
     99FF   20 9A72      4646           jsr  clsdir
     9A02   4C 919E      4647   clsr1   jmp  frechn
                         4648   
     9A05   A5 6A        4649   clsbig	lda  ssind
     9A07   38           4650   	sec
     9A08   E9 0E        4651   	sbc  #ssioff-2
     9A0A   85 43        4652   	sta  t3
     9A0C   AD 0100      4653   	lda  grpnum
     9A0F   85 58        4654   	sta  r3
     9A11   20 9E97      4655   	jsr  ssscal
     9A14   A2 00        4656   	ldx  #0
     9A16   A9 02        4657   	lda  #2
     9A18   20 9ECC      4658   	jsr  addlit
     9A1B   A6 50        4659   	ldx  lindx
     9A1D   A5 5B        4660   	lda  result
     9A1F   9D 0249      4661   	sta  nbkl,x
     9A22   A5 5C        4662   	lda  result+1
     9A24   9D 0250      4663   	sta  nbkh,x
     9A27   4C 99F8      4664   	jmp  clsre1
                         4665   ;
                         4666   ; close write channel
                         4667   ;
     9A2A                4668   clswrt          	; close seq write file
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 66-1
"close"   CLOSE.SRC

Error Addr  Code          Seq   Source statement

     9A2A   A6 50        4669           ldx  lindx
     9A2C   BD 0249      4670           lda  nbkl,x
     9A2F   1D 0250      4671           ora  nbkh,x
     9A32   D0 0C        4672           bne  clsw10     ; at least 1 block written
                         4673   
     9A34   20 9442      4674           jsr  getpnt
     9A37   C9 02        4675           cmp  #2
     9A39   D0 05        4676           bne  clsw10     ; at least 1 byte written
                         4677   
     9A3B   A9 0D        4678           lda  #cr
     9A3D   20 8EB1      4679           jsr  putbyt
     9A40   20 9442      4680   clsw10  jsr  getpnt
     9A43   C9 02        4681           cmp  #2
     9A45   D0 12        4682           bne  clsw20     ; not mt buffer
                         4683   
     9A47   20 8D7D      4684           jsr  dblbuf     ; switch bufs
     9A4A   A6 50        4685           ldx  lindx
     9A4C   BD 0249      4686           lda  nbkl,x
     9A4F   D0 03        4687           bne  clsw15
                         4688   
     9A51   DE 0250      4689           dec  nbkh,x
     9A54   DE 0249      4690   clsw15  dec  nbkl,x
     9A57   A9 00        4691           lda  #0
     9A59   38           4692   clsw20  sec
     9A5A   E9 01        4693           sbc  #1         ; back up 1
     9A5C   48           4694           pha     	; save it
     9A5D   A9 00        4695           lda  #0
     9A5F   20 9422      4696           jsr  setpnt
     9A62   20 8EB1      4697           jsr  putbyt     ; tlink=0
     9A65   68           4698           pla     	; lstchr count
     9A66   20 8EB1      4699           jsr  putbyt
     9A69   20 9002      4700           jsr  wrtbuf     ; write out last buffer
     9A6C   20 94ED      4701           jsr  watjob     ; finish job up
     9A6F   4C 8D7D      4702           jmp  dblbuf     ; make sure both bufs ok
                         4703   ;
                         4704   ;
                         4705   ; directory close on open write file
                         4706   ;
     9A72   A6 50        4707   clsdir  ldx  lindx      ; save lindx
     9A74   8E 028C      4708           stx  wlindx     ; &sa
     9A77   A5 52        4709           lda  sa
     9A79   48           4710           pha
     9A7A   BD 027D      4711           lda  dsec,x     ; get directory sector
     9A7D   85 4E        4712           sta  sector
     9A7F   BD 0284      4713           lda  dind,x     ; get sector offset
     9A82   8D 0232      4714           sta  index
     9A85   AD 022B      4715           lda  dirtrk
     9A88   85 4D        4716           sta  track
     9A8A   20 9F11      4717           jsr  getact     ; allocate a buffer
     9A8D   48           4718           pha
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 66-2
"close"   CLOSE.SRC

Error Addr  Code          Seq   Source statement

     9A8E   85 6C        4719           sta  jobnum
     9A90   20 93BD      4720           jsr  drtrd      ; read directory sector
     9A93   A0 00        4721           ldy  #0
     9A95   BD 01F1      4722           lda  bufind,x   ; .x is job#
     9A98   85 56        4723           sta  r0+1
     9A9A   AD 0232      4724           lda  index
     9A9D   85 55        4725           sta  r0
     9A9F   B1 55        4726           lda  (r0),y
     9AA1   29 20        4727           and  #$20
     9AA3   F0 43        4728           beq  clsd5
                         4729   
     9AA5   20 905F      4730           jsr  typfil
     9AA8   C9 04        4731           cmp  #reltyp
     9AAA   F0 44        4732           beq  clsd6
                         4733   
     9AAC   B1 55        4734           lda  (r0),y
     9AAE   29 8F        4735           and  #$8f       ; replace file
     9AB0   91 55        4736           sta  (r0),y
     9AB2   C8           4737           iny
     9AB3   B1 55        4738           lda  (r0),y
     9AB5   85 4D        4739           sta  track
     9AB7   84 42        4740           sty  temp+2
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 67
"close"   CLOSE.SRC

Error Addr  Code          Seq   Source statement

     9AB9   A0 1B        4742           ldy  #27        ; extract replacement link
     9ABB   B1 55        4743           lda  (r0),y     ;  to last sector
     9ABD   48           4744           pha
     9ABE   88           4745           dey
     9ABF   B1 55        4746           lda  (r0),y
     9AC1   D0 0A        4747           bne  clsd4
                         4748   
     9AC3   85 4D        4749           sta  track
     9AC5   68           4750           pla
     9AC6   85 4E        4751           sta  sector
     9AC8   A9 67        4752           lda  #$67
U    9ACA   20 0000 "    4753           jsr  cmder2
                         4754   
     9ACD   48           4755   clsd4   pha
     9ACE   A9 00        4756           lda  #0
     9AD0   91 55        4757           sta  (r0),y
     9AD2   C8           4758           iny
     9AD3   91 55        4759           sta  (r0),y
     9AD5   68           4760           pla
     9AD6   A4 42        4761           ldy  temp+2
     9AD8   91 55        4762           sta  (r0),y
     9ADA   C8           4763           iny
     9ADB   B1 55        4764           lda  (r0),y
     9ADD   85 4E        4765           sta  sector
     9ADF   68           4766           pla
     9AE0   91 55        4767           sta  (r0),y
     9AE2   20 8713      4768           jsr  delfil     ; delete old file
     9AE5   4C 9AF0      4769           jmp  clsd6      ; set close bit
                         4770   
     9AE8   B1 55        4771   clsd5   lda  (r0),y
     9AEA   29 0F        4772           and  #$f
     9AEC   09 80        4773           ora  #$80
     9AEE   91 55        4774           sta  (r0),y
     9AF0   AE 028C      4775   clsd6   ldx  wlindx
     9AF3   A0 1C        4776           ldy  #28        ; set # of blocks
     9AF5   BD 0249      4777           lda  nbkl,x
     9AF8   91 55        4778           sta  (r0),y
     9AFA   C8           4779           iny
     9AFB   BD 0250      4780           lda  nbkh,x
     9AFE   91 55        4781           sta  (r0),y
     9B00   68           4782           pla
     9B01   AA           4783           tax
     9B02   A9 90        4784           lda  #wrtsd_dv	; write directory sector
     9B04   20 94E6      4785           jsr  doit
     9B07   68           4786           pla
     9B08   85 52        4787           sta  sa
     9B0A   4C 9042      4788           jmp  fndwch     ; restore lindx
                         4789   	.INCLUDE opchnl
                         4790           .messg "opchnl"
                         4791           .subttl "opchnl"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 67-1
"opchnl"   OPCHNL.SRC

Error Addr  Code          Seq   Source statement

1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 68
"opchnl"   OPCHNL.SRC

Error Addr  Code          Seq   Source statement

                         4793   ; open a read chanl with 2 buffers
                         4794   ; will insert sa in lintab
                         4795   ; and inits all pointers.
                         4796   ; relative ss and ptrs are set.
                         4797   
     9B0D   A9 01        4798   opnrch  lda  #1         ; get one data buffer
     9B0F   20 915A      4799           jsr  getrch
     9B12   20 9B9B      4800           jsr  initp      ; clear pointers
     9B15   AD 022D      4801           lda  type
     9B18   48           4802           pha
     9B19   0A           4803           asl  a
     9B1A   95 F9        4804           sta  filtyp,x   ; set file type
     9B1C   20 8FD6      4805           jsr  strrd      ; read 1st one or two blocks
     9B1F   A6 50        4806           ldx  lindx
     9B21   A5 4D        4807           lda  track
     9B23   D0 05        4808           bne  or10
                         4809   
     9B25   A5 4E        4810           lda  sector
     9B27   9D 0242      4811           sta  lstchr,x   ; set last char ptr
     9B2A   68           4812   or10    pla
     9B2B   C9 04        4813           cmp  #reltyp
     9B2D   D0 5E        4814           bne  or30       ; must be sequential stuff
                         4815   
     9B2F   A4 52        4816           ldy  sa
     9B31   B9 00A8      4817           lda  lintab,y   ; set channel as r/w
     9B34   09 40        4818           ora  #$40
     9B36   99 00A8      4819           sta  lintab,y
     9B39   AD 026F      4820           lda  rec
     9B3C   9D 025E      4821           sta  rs,x       ; set record size
     9B3F   20 9204      4822           jsr  getbuf     ; get ss buffer
     9B42   10 03        4823           bpl  or20
                         4824   
     9B44   4C 9186      4825           jmp  gberr      ; no buffer
                         4826   
     9B47   A6 50        4827   or20    ldx  lindx
     9B49   9D 0265      4828           sta  ss,x
     9B4C   48           4829   	pha
     9B4D   20 A56E      4830   	jsr  hugerel
     9B50   F0 17        4831   	beq  or21
                         4832   	
     9B52   68           4833   	pla
     9B53   AC 0270      4834           ldy  trkss      ; set ss track
     9B56   84 4D        4835           sty  track
     9B58   AC 0271      4836           ldy  secss      ; set ss sector
     9B5B   84 4E        4837           sty  sector
     9B5D   20 9588      4838           jsr  seth       ; set ss header
     9B60   20 9DAC      4839           jsr  rdss       ; read it in
     9B63   20 94ED      4840           jsr  watjob
     9B66   4C 9B7B      4841   	jmp  orow	; continue
     9B69                4842   or21
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 68-1
"opchnl"   OPCHNL.SRC

Error Addr  Code          Seq   Source statement

     9B69   68           4843   	pla
     9B6A   AD 0270      4844   	lda  trkss
     9B6D   9D 0110      4845   	sta  ssstrk,x
     9B70   AD 0271      4846   	lda  secss
     9B73   9D 0109      4847   	sta  ssssec,x
     9B76   A9 FF        4848   	lda  #all
     9B78   9D 0102      4849   	sta  sssgrp,x	; no group is resident, ok...
                         4850    
     9B7B   A6 50        4851   orow    ldx  lindx
     9B7D   A9 02        4852           lda  #2
     9B7F   9D 0257      4853           sta  nr,x       ; set for nxtrec
     9B82   A9 00        4854           lda  #0
     9B84   20 9422      4855           jsr  setpnt     ; set first data byte
     9B87   20 A0E1      4856           jsr  rd40       ; set up 1st record
     9B8A   4C 9D7C      4857           jmp  gethdr     ; restore t&s
                         4858   
     9B8D   20 909B      4859   or30    jsr  rdbyt      ; sequential set up
     9B90   A6 50        4860           ldx  lindx
     9B92   9D 023B      4861           sta  chndat,x
     9B95   A9 88        4862           lda  #rdytlk
     9B97   9D 0234      4863           sta  chnrdy,x
     9B9A   60           4864           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 69
"opchnl"   OPCHNL.SRC

Error Addr  Code          Seq   Source statement

     9B9B   A6 50        4866   initp   ldx  lindx      ; init var's, open chnl
     9B9D   B5 D1        4867           lda  buf0,x     ; lstjob,sets act buf#,lstchr
     9B9F   0A           4868           asl  a          ; buf pntrs in buftbl=2
     9BA0   30 06        4869           bmi  initp0
                         4870   
     9BA2   A8           4871           tay
     9BA3   A9 02        4872           lda  #2
     9BA5   99 00BB      4873           sta  buftab,y
     9BA8   B5 D8        4874   initp0  lda  buf1,x
     9BAA   09 80        4875           ora  #$80
     9BAC   95 D8        4876           sta  buf1,x
     9BAE   0A           4877           asl  a
     9BAF   30 06        4878           bmi  initp1
                         4879   
     9BB1   A8           4880           tay
     9BB2   A9 02        4881           lda  #2
     9BB4   99 00BB      4882           sta  buftab,y
     9BB7   A9 00        4883   initp1  lda  #0
     9BB9   9D 0242      4884           sta  lstchr,x
     9BBC   9D 0249      4885           sta  nbkl,x
     9BBF   9D 0250      4886           sta  nbkh,x
     9BC2   60           4887           rts
                         4888   
                         4889   ; open a write chanl with 2 buffers
                         4890   
     9BC3   20 B6ED      4891   opnwch  jsr  intts      ; get first track,sector
     9BC6   A9 01        4892   opnwch1 lda  #1
     9BC8   20 9157      4893           jsr  getwch     ; get 1 buffers for writing
     9BCB   20 9585      4894           jsr  sethdr     ; set up buffer headers
     9BCE   20 9B9B      4895           jsr  initp      ; zropnt
     9BD1   A6 50        4896           ldx  lindx
     9BD3   AD 022D      4897           lda  type
     9BD6   48           4898           pha
     9BD7   0A           4899           asl  a
     9BD8   95 F9        4900           sta  filtyp,x   ; set filtyp=seq
     9BDA   68           4901           pla
     9BDB   C9 04        4902           cmp  #reltyp
     9BDD   F0 06        4903           beq  ow10
                         4904   
     9BDF   A9 01        4905           lda  #rdylst    ; active listener
     9BE1   9D 0234      4906           sta  chnrdy,x
     9BE4   60           4907           rts
                         4908   
     9BE5   A4 52        4909   ow10    ldy  sa
     9BE7   B9 00A8      4910           lda  lintab,y
     9BEA   29 3F        4911           and  #$3f
     9BEC   09 40        4912           ora  #$40
     9BEE   99 00A8      4913           sta  lintab,y   ; set channel as r/w
     9BF1   AD 026F      4914           lda  rec
     9BF4   9D 025E      4915           sta  rs,x       ; set record size
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 69-1
"opchnl"   OPCHNL.SRC

Error Addr  Code          Seq   Source statement

     9BF7   20 9204      4916           jsr  getbuf     ; get ss buffer
     9BFA   10 03        4917           bpl  ow20
                         4918   
     9BFC   4C 9186      4919           jmp  gberr      ; no buffer
                         4920   
     9BFF   A6 50        4921   ow20    ldx  lindx
     9C01   9D 0265      4922           sta  ss,x
     9C04   20 9DFA      4923           jsr  clrbuf
     9C07   20 B668      4924           jsr  nxtts
     9C0A   A5 4D        4925           lda  track
     9C0C   8D 0270      4926           sta  trkss      ; save ss t&s
     9C0F   A5 4E        4927           lda  sector
     9C11   8D 0271      4928           sta  secss
     9C14   A6 50        4929           ldx  lindx
     9C16   BD 0265      4930           lda  ss,x
     9C19   20 9588      4931           jsr  seth       ; set ss header
     9C1C   A9 00        4932           lda  #0
     9C1E   20 9E23      4933           jsr  setssp
     9C21   A9 00        4934           lda  #0         ; set null link
     9C23   20 9CCA      4935           jsr  putss
     9C26   A9 11        4936           lda  #ssioff+1  ; set last char
     9C28   20 9CCA      4937           jsr  putss
     9C2B   A9 00        4938           lda  #0         ; set this ss #
     9C2D   20 9CCA      4939           jsr  putss
     9C30   AD 026F      4940           lda  rec        ; record size
     9C33   20 9CCA      4941           jsr  putss
     9C36   A5 4D        4942           lda  track
     9C38   20 9CCA      4943           jsr  putss
     9C3B   A5 4E        4944           lda  sector
     9C3D   20 9CCA      4945           jsr  putss
     9C40   A9 10        4946           lda  #ssioff
     9C42   20 9E23      4947           jsr  setssp
     9C45   20 9D7C      4948           jsr  gethdr     ; get first t&s
     9C48   A5 4D        4949           lda  track
     9C4A   20 9CCA      4950           jsr  putss
     9C4D   A5 4E        4951           lda  sector
     9C4F   20 9CCA      4952           jsr  putss
     9C52   20 9DA6      4953           jsr  wrtss      ; write it out
     9C55   20 94ED      4954           jsr  watjob
     9C58   20 A56E      4955   	jsr  hugerel
     9C5B   D0 03        4956   	bne  ow21
                         4957   	
     9C5D   20 9C82      4958   	jsr  owbrel
     9C60                4959   ow21
     9C60   A9 02        4960           lda  #2
     9C62   20 9422      4961           jsr  setpnt
     9C65   A6 50        4962           ldx  lindx      ; set nr for null buffer
     9C67   38           4963           sec
     9C68   A9 00        4964           lda  #0
     9C6A   FD 025E      4965           sbc  rs,x
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 69-2
"opchnl"   OPCHNL.SRC

Error Addr  Code          Seq   Source statement

     9C6D   9D 0257      4966           sta  nr,x
     9C70   20 A298      4967           jsr  nulbuf     ; null records
     9C73   20 9D56      4968           jsr  nullnk
     9C76   20 9D9A      4969           jsr  wrtout
     9C79   20 94ED      4970           jsr  watjob
     9C7C   20 B515      4971           jsr  mapout
     9C7F   4C 9B7B      4972           jmp  orow
     9C82                4973   owbrel
     9C82   A6 50        4974   	ldx  lindx
     9C84   BD 0265      4975   	lda  ss,x	; get ss buffer #
     9C87   20 9DFA      4976   	jsr  clrbuf	; clean 'em out
     9C8A   20 9E23      4977   	jsr  setssp	; set ss pointer
     9C8D   AD 0270      4978   	lda  trkss
     9C90   20 9CCA      4979   	jsr  putss	; set track link
     9C93   AD 0271      4980   	lda  secss
     9C96   20 9CCA      4981   	jsr  putss	; set sector link
     9C99   A9 FE        4982   	lda  #all-1
     9C9B   20 9CCA      4983   	jsr  putss	; set sss id
     9C9E   AD 0270      4984   	lda  trkss
     9CA1   20 9CCA      4985   	jsr  putss	; set ss track
     9CA4   AD 0271      4986   	lda  secss
     9CA7   20 9CCA      4987   	jsr  putss	; set ss sector
     9CAA   20 B668      4988   	jsr  nxtts	; get next track and sector
     9CAD   A6 50        4989   	ldx  lindx
     9CAF   A5 4D        4990   	lda  track
     9CB1   9D 0110      4991   	sta  ssstrk,x	; save sss track
     9CB4   8D 0270      4992   	sta  trkss
     9CB7   A5 4E        4993   	lda  sector
     9CB9   9D 0109      4994   	sta  ssssec,x	; save sss sector
     9CBC   8D 0271      4995   	sta  secss
     9CBF   A9 FF        4996   	lda  #all
     9CC1   9D 0102      4997   	sta  sssgrp,x	; no resident ss
     9CC4   20 A581      4998   	jsr  wrtsss	; write the sss
     9CC7   4C 9D7C      4999   	jmp  gethdr
                         5000   ;
                         5001   ; put a byte into the ss
                         5002   ;
     9CCA                5003   putss
     9CCA   48           5004   	pha
     9CCB   A6 50        5005           ldx  lindx
     9CCD   BD 0265      5006           lda  ss,x
     9CD0   4C 8EBD      5007           jmp  putb1
                         5008   	.INCLUDE tstflg
                         5009           .messg "tstflg"
                         5010           .subttl "tstflg"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 70
"tstflg"   TSTFLG.SRC

Error Addr  Code          Seq   Source statement

     9CD3   90 06        5012           bcc  clrflg
     9CD5   A6 50        5013   setflg  ldx  lindx
     9CD7   15 F9        5014           ora  filtyp,x
     9CD9   D0 06        5015           bne  clrf10
                         5016   
     9CDB   A6 50        5017   clrflg  ldx  lindx
     9CDD   49 FF        5018           eor  #$ff
     9CDF   35 F9        5019           and  filtyp,x
     9CE1   95 F9        5020   clrf10  sta  filtyp,x
     9CE3   60           5021           rts
                         5022   
     9CE4   A6 50        5023   tstflg  ldx  lindx
     9CE6   35 F9        5024           and  filtyp,x
     9CE8   60           5025           rts
                         5026   
     9CE9   20 9F11      5027   tstwrt  jsr  getact
     9CEC   AA           5028           tax
     9CED   BD 0272      5029           lda  lstjob,x
     9CF0   29 FE        5030           and  #all-bit0
     9CF2   C9 90        5031           cmp  #wrtsd_dv
     9CF4   60           5032           rts
                         5033   
                         5034   ; test active files from lindx tbl
                         5035   ; c=1 file not active x=18,y=?,a=?
                         5036   ; c=0 file active x=entfnd,y=lindx,a=?
                         5037   
     9CF5   A2 00        5038   tstchn  ldx  #0         ; start search at top
     9CF7   86 42        5039   tstc20  stx  temp+2     ; save to look on
     9CF9   B5 A8        5040           lda  lintab,x   ; get lindx
     9CFB   C9 FF        5041           cmp  #$ff
     9CFD   D0 08        5042           bne  tstc40     ; if plus test it
                         5043   
     9CFF   A6 42        5044   tstc30  ldx  temp+2     ; not active
     9D01   E8           5045           inx
     9D02   E0 10        5046           cpx  #maxsa-2   ; searched all
     9D04   90 F1        5047           bcc  tstc20     ; no
                         5048   
     9D06   60           5049           rts     	; yes
                         5050   
     9D07   86 42        5051   tstc40  stx  temp+2     ; save x
     9D09   29 3F        5052           and  #$3f
     9D0B   A8           5053           tay     	; use lindx as index
     9D0C   B9 00F9      5054           lda  filtyp,y   ; right drive # ?
     9D0F   29 01        5055           and  #1
     9D11   85 41        5056           sta  temp+1
     9D13   AE 026D      5057           ldx  entfnd     ; index entry found
     9D16   B5 EF        5058           lda  fildrv,x
     9D18   29 01        5059           and  #1
     9D1A   C5 41        5060           cmp  temp+1     ; same drive # ?
     9D1C   D0 E1        5061           bne  tstc30     ; no
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 70-1
"tstflg"   TSTFLG.SRC

Error Addr  Code          Seq   Source statement

                         5062   
     9D1E   B9 027D      5063           lda  dsec,y     ; yes - same dir. entry ?
     9D21   D5 E5        5064           cmp  entsec,x
     9D23   D0 DA        5065           bne  tstc30     ; no
                         5066   
     9D25   B9 0284      5067           lda  dind,y
     9D28   D5 EA        5068           cmp  entind,x
     9D2A   D0 D3        5069           bne  tstc30     ; no
                         5070   
     9D2C   18           5071           clc     	; set flag
     9D2D   60           5072           rts
                         5073   	.INCLUDE tsutil
                         5074           .messg "tsutil"
                         5075           .subttl "tsutil"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 71
"tsutil"   TSUTIL.SRC

Error Addr  Code          Seq   Source statement

     9D2E   20 9F1C      5077   scrub   jsr  gaflgs     ; wr out buf if dirty
     9D31   50 06        5078           bvc  scr1       ; not dirty
                         5079   
     9D33   20 9D9A      5080           jsr  wrtout
     9D36   20 94ED      5081           jsr  watjob
     9D39   60           5082   scr1    rts
                         5083   
     9D3A   20 9D69      5084   setlnk  jsr  set00      ; put trk,sec in buffer
     9D3D   A5 4D        5085           lda  track
     9D3F   91 64        5086           sta  (dirbuf),y
     9D41   C8           5087           iny
     9D42   A5 4E        5088           lda  sector
     9D44   91 64        5089           sta  (dirbuf),y
     9D46   4C A08D      5090           jmp  sdirty
                         5091   
     9D49   20 9D69      5092   getlnk  jsr  set00      ; get link from buffer
     9D4C   B1 64        5093           lda  (dirbuf),y ; into trk and sec
     9D4E   85 4D        5094           sta  track
     9D50   C8           5095           iny
     9D51   B1 64        5096           lda  (dirbuf),y
     9D53   85 4E        5097           sta  sector
     9D55   60           5098           rts
                         5099   
     9D56   20 9D69      5100   nullnk  jsr  set00      ; set trk link=0 and
     9D59   A9 00        5101           lda  #0         ; link=last non-zero char.
     9D5B   91 64        5102           sta  (dirbuf),y
     9D5D   C8           5103           iny
     9D5E   A6 50        5104           ldx  lindx
     9D60   BD 0257      5105           lda  nr,x
     9D63   AA           5106           tax
     9D64   CA           5107           dex
     9D65   8A           5108           txa
     9D66   91 64        5109           sta  (dirbuf),y
     9D68   60           5110           rts
                         5111   
     9D69   20 9F11      5112   set00   jsr  getact     ; set pntr to buffer
     9D6C   0A           5113           asl  a
     9D6D   AA           5114           tax
     9D6E   B5 BC        5115           lda  buftab+1,x
     9D70   85 65        5116           sta  dirbuf+1
     9D72   A9 00        5117           lda  #0
     9D74   85 64        5118           sta  dirbuf
     9D76   A0 00        5119           ldy  #0
     9D78   60           5120           rts
                         5121   
     9D79   20 9027      5122   curblk  jsr  fndrch     ; rd trk,sec from header
     9D7C   20 9F11      5123   gethdr  jsr  getact
     9D7F   85 6C        5124           sta  jobnum
     9D81   0A           5125           asl  a
     9D82   A8           5126           tay
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 71-1
"tsutil"   TSUTIL.SRC

Error Addr  Code          Seq   Source statement

     9D83   B9 000B      5127           lda  hdrs,y     ; 4/12
     9D86   85 4D        5128           sta  track
     9D88   B9 000C      5129           lda  hdrs+1,y   ; 4/12
     9D8B   85 4E        5130           sta  sector
     9D8D   60           5131           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 72
"tsutil"   TSUTIL.SRC

Error Addr  Code          Seq   Source statement

     9D8E   A9 90        5133   wrtab   lda  #wrtsd_dv	; wrtab/rdab
     9D90   85 28        5134           sta  cmd        ; wrtout/rdin
     9D92   D0 24        5135           bne  sj10       ; wrtss/rdss
                         5136   
     9D94   A9 80        5137   rdab    lda  #read_dv
     9D96   85 28        5138           sta  cmd
     9D98   D0 1E        5139           bne  sj10
                         5140   
     9D9A   A9 90        5141   wrtout  lda  #wrtsd_dv
     9D9C   85 28        5142           sta  cmd
     9D9E   D0 24        5143           bne  sj20
                         5144   
     9DA0   A9 80        5145           lda  #read_dv
     9DA2   85 28        5146           sta  cmd
     9DA4   D0 1E        5147           bne  sj20
                         5148   
     9DA6   A9 90        5149   wrtss   lda  #wrtsd_dv
     9DA8   85 28        5150           sta  cmd
     9DAA   D0 02        5151           bne  rds5
                         5152   
     9DAC   A9 80        5153   rdss    lda  #read_dv
     9DAE   85 28        5154   rds5    sta  cmd
     9DB0   A6 50        5155           ldx  lindx
     9DB2   BD 0265      5156           lda  ss,x
     9DB5   AA           5157           tax
     9DB6   10 13        5158           bpl  sj30
                         5159   
     9DB8   20 9585      5160   sj10    jsr  sethdr
     9DBB   20 9F11      5161           jsr  getact
     9DBE   AA           5162           tax
     9DBF   A9 00        5163           lda  #0
     9DC1   9D 0272      5164           sta  lstjob,x
     9DC4   20 A09C      5165   sj20    jsr  cdirty
     9DC7   20 9F11      5166           jsr  getact
     9DCA   AA           5167           tax
     9DCB   4C 9471      5168   sj30    jmp  setljb
                         5169   
     9DCE   A9 00        5170   rdlnk   lda  #0         ; rdlnk
     9DD0   20 9422      5171           jsr  setpnt
     9DD3   20 9071      5172           jsr  getbyt
     9DD6   85 4D        5173           sta  track
     9DD8   20 9071      5174           jsr  getbyt
     9DDB   85 4E        5175           sta  sector
     9DDD   60           5176           rts
                         5177   	.INCLUDE ssutil
                         5178           .messg "ssutil"
                         5179   	.subttl "ssutil"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 73
"ssutil"   SSUTIL.SRC

Error Addr  Code          Seq   Source statement

     9DDE   48           5181   b0tob0  pha     	; buff to buff transfr
     9DDF   A9 00        5182           lda  #0
     9DE1   85 40        5183           sta  temp
     9DE3   85 42        5184           sta  temp+2
     9DE5   B9 01F1      5185           lda  bufind,y
     9DE8   85 41        5186           sta  temp+1
     9DEA   BD 01F1      5187           lda  bufind,x
     9DED   85 43        5188           sta  temp+3
     9DEF   68           5189           pla
     9DF0   A8           5190           tay
     9DF1   88           5191           dey
     9DF2   B1 40        5192   b02     lda  (temp),y
     9DF4   91 42        5193           sta  (temp+2),y
     9DF6   88           5194           dey
     9DF7   10 F9        5195           bpl  b02
                         5196   
     9DF9   60           5197           rts
                         5198   
     9DFA   A8           5199   clrbuf  tay     	; clr given buffer
     9DFB   B9 01F1      5200           lda  bufind,y   ; accm =buff
     9DFE   85 41        5201           sta  temp+1
     9E00   A9 00        5202           lda  #0
     9E02   85 40        5203           sta  temp
     9E04   A8           5204           tay
     9E05   91 40        5205   cb10    sta  (temp),y
     9E07   C8           5206           iny
     9E08   D0 FB        5207           bne  cb10
                         5208   
     9E0A   60           5209           rts
                         5210   
     9E0B   A9 00        5211   ssset   lda  #0         ; set ss pntr=0
     9E0D   20 9E15      5212           jsr  ssdir
     9E10   A0 02        5213           ldy  #2
     9E12   B1 64        5214           lda  (dirbuf),y ; accm=ss number
     9E14   60           5215           rts
                         5216   
     9E15   85 64        5217   ssdir   sta  dirbuf     ; set dirbuf w/current
     9E17   A6 50        5218           ldx  lindx      ; ss pointer. accm=low byte
     9E19   BD 0265      5219           lda  ss,x
     9E1C   AA           5220           tax
     9E1D   BD 01F1      5221           lda  bufind,x
     9E20   85 65        5222           sta  dirbuf+1
     9E22   60           5223           rts
                         5224   
     9E23   48           5225   setssp  pha     	; set dirbuf and buftbl with
     9E24   20 9E15      5226           jsr  ssdir      ; current ss pntr. acm=low byte
     9E27   48           5227           pha
     9E28   8A           5228           txa
     9E29   0A           5229           asl  a
     9E2A   AA           5230           tax
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 73-1
"ssutil"   SSUTIL.SRC

Error Addr  Code          Seq   Source statement

     9E2B   68           5231           pla
     9E2C   95 BC        5232           sta  buftab+1,x
     9E2E   68           5233           pla
     9E2F   95 BB        5234           sta  buftab,x
     9E31   60           5235           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 74
"ssutil"   SSUTIL.SRC

Error Addr  Code          Seq   Source statement

     9E32   20 9ED3      5237   sspos   jsr  sstest     ; set ss/buftbl to
     9E35   30 0F        5238           bmi  ssp10      ; to ssnum ssind
                         5239   
     9E37   50 14        5240           bvc  ssp20      ; er0:ok, in range
                         5241   
     9E39   A6 50        5242           ldx  lindx      ; er1: possibly in range
     9E3B   BD 0265      5243           lda  ss,x
     9E3E   20 9E56      5244           jsr  ibrd       ; read ss in
     9E41   20 9ED3      5245           jsr  sstest     ; test again
     9E44   10 07        5246           bpl  ssp20
                         5247   
     9E46   20 A15C      5248   ssp10   jsr  ssend      ; not in range,set end
U    9E49   2C 0000 "    5249           bit  er1
     9E4C   60           5250           rts     	; v=1
                         5251   
     9E4D   A5 6A        5252   ssp20   lda  ssind      ; ok, set ptr w/ index
     9E4F   20 9E23      5253           jsr  setssp
U    9E52   2C 0000 "    5254           bit  er0
     9E55   60           5255           rts     	; v=0
                         5256   
     9E56   85 6C        5257   ibrd    sta  jobnum     ; indir block rd/wr.
     9E58   A9 80        5258           lda  #read_dv	; accm= buf#, x=lindx
     9E5A   D0 04        5259           bne  ibop       ; dirbuf)y pnts to t&s for r/w
                         5260   
     9E5C   85 6C        5261           sta  jobnum
     9E5E   A9 90        5262           lda  #wrtsd_dv
     9E60   85 28        5263   ibop    sta  cmd
     9E62   B1 64        5264           lda  (dirbuf),y
     9E64   85 4D        5265           sta  track
     9E66   C8           5266           iny
     9E67   B1 64        5267           lda  (dirbuf),y
     9E69   85 4E        5268           sta  sector
     9E6B   A5 6C        5269           lda  jobnum
     9E6D   20 9588      5270           jsr  seth
     9E70   A6 6C        5271           ldx  jobnum
     9E72   4C 94E8      5272           jmp  doit2
                         5273   
     9E75   A6 50        5274   gsspnt  ldx  lindx
     9E77   BD 0265      5275           lda  ss,x
     9E7A   4C 9445      5276           jmp  gp1
                         5277   
     9E7D   A9 78        5278   scal1   lda  #nssp
     9E7F   20 9E8D      5279           jsr  addt12     ; add (#ss needed)*120
     9E82   CA           5280   sscalc  dex
     9E83   10 F8        5281           bpl  scal1
                         5282   
     9E85   A5 43        5283           lda  t3         ; add (# ss indices needed)
     9E87   4A           5284           lsr  a
     9E88   20 9E8D      5285           jsr  addt12
     9E8B   A5 44        5286           lda  t4         ; add (# ss blocks needed)
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 74-1
"ssutil"   SSUTIL.SRC

Error Addr  Code          Seq   Source statement

     9E8D   18           5287   addt12  clc     	; add .a to t1,t2
     9E8E   65 41        5288           adc  t1
     9E90   85 41        5289           sta  t1
     9E92   90 02        5290           bcc  addrts
                         5291   
     9E94   E6 42        5292           inc  t2
     9E96   60           5293   addrts  rts
                         5294   ;
                         5295   ; calc # of side sectors needed
                         5296   ;
     9E97                5297   ssscal
     9E97   20 8D38      5298   	jsr  zerres
     9E9A   20 9EC3      5299   	jsr  zeracc
     9E9D   A4 58        5300   	ldy  r3
     9E9F                5301   sssca1
     9E9F   88           5302   	dey
     9EA0   30 0A        5303   	bmi  sssca2
                         5304   	
     9EA2   A2 02        5305   	ldx  #>726
     9EA4   A9 D6        5306   	lda  #<726
     9EA6   20 9ECC      5307   	jsr  addlit
     9EA9   4C 9E9F      5308   	jmp  sssca1
     9EAC                5309   sssca2
     9EAC   A4 44        5310   	ldy  t4
     9EAE                5311   sssca3
     9EAE   88           5312   	dey
     9EAF   30 0A        5313   	bmi  sssca4
                         5314   	
     9EB1   A2 00        5315   	ldx  #0
     9EB3   A9 79        5316   	lda  #nssp+1
     9EB5   20 9ECC      5317   	jsr  addlit
     9EB8   4C 9EAE      5318   	jmp  sssca3
     9EBB                5319   sssca4
     9EBB   A5 43        5320   	lda  t3
     9EBD   4A           5321   	lsr  a
     9EBE   A2 00        5322   	ldx  #0
     9EC0   4C 9ECC      5323   	jmp  addlit
     9EC3                5324   zeracc
     9EC3   A2 00        5325   	ldx  #0
     9EC5   86 60        5326   	stx  accum+1
     9EC7   86 61        5327   	stx  accum+2
     9EC9   86 62        5328   	stx  accum+3
     9ECB   60           5329   	rts
     9ECC                5330   addlit
     9ECC   86 61        5331   	stx  accum+2
     9ECE   85 60        5332   	sta  accum+1
     9ED0   4C 8D4C      5333   	jmp  addres
                         5334   	.INCLUDE sstest
                         5335   	.messg "sstest"
                         5336   	.subttl "sstest"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 74-2
"sstest"   SSTEST.SRC

Error Addr  Code          Seq   Source statement

1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 75
"sstest"   SSTEST.SRC

Error Addr  Code          Seq   Source statement

                         5338   ;
                         5339   ;  sstst: test ssnum & ssind for
                         5340   ;         residence & range.
                         5341   ;    vars:  ssnum,ssind,dirbuf
                         5342   ;    flags: .n rng  .v res  er
                         5343   ;            0  ok   0 yes  er0
                         5344   ;            0 maybe 1 no   er1
                         5345   ;            1 no    0 yes  er2
                         5346   ;            1 no    1 no   er3
                         5347   ;
     9ED3   20 A56E      5348   sstest  jsr  hugerel
     9ED6   D0 0C        5349   	bne  st50
                         5350   
     9ED8   AD 0100      5351   	lda  grpnum
     9EDB   20 A5C0      5352   	jsr  rdss1
                         5353   	
     9EDE   F0 04        5354   	beq  st50
                         5355   
U    9EE0   2C 0000 "    5356   	bit  er3
     9EE3   60           5357   	rts
     9EE4                5358   st50
     9EE4   20 9E0B      5359   	jsr  ssset      ; set pointer & ss #
     9EE7   C5 69        5360           cmp  ssnum
     9EE9   D0 0E        5361           bne  st20       ; not this ss
                         5362   
     9EEB   A4 6A        5363           ldy  ssind
     9EED   B1 64        5364           lda  (dirbuf),y
     9EEF   F0 04        5365           beq  st10
                         5366   
U    9EF1   2C 0000 "    5367           bit  er0        ; ok, resident
     9EF4   60           5368           rts
                         5369   
U    9EF5   2C 0000 "    5370   st10    bit  er2        ; out of range, res
     9EF8   60           5371           rts
                         5372   
     9EF9   A5 69        5373   st20    lda  ssnum
     9EFB   C9 06        5374           cmp  #nssl
     9EFD   B0 0A        5375           bcs  st30
                         5376   
     9EFF   0A           5377           asl  a
     9F00   A8           5378           tay
     9F01   A9 04        5379           lda  #4
     9F03   85 64        5380           sta  dirbuf
     9F05   B1 64        5381           lda  (dirbuf),y
     9F07   D0 04        5382           bne  st40
                         5383   
U    9F09   2C 0000 "    5384   st30    bit  er3        ; way out of range
     9F0C   60           5385           rts
                         5386   
U    9F0D   2C 0000 "    5387   st40    bit  er1        ; not res, range???
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 75-1
"sstest"   SSTEST.SRC

Error Addr  Code          Seq   Source statement

     9F10   60           5388           rts
                         5389   	.INCLUDE getact
                         5390           .messg "getact"
                         5391           .subttl "getact"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 76
"getact"   GETACT.SRC

Error Addr  Code          Seq   Source statement

     9F11   A6 50        5393   getact  ldx  lindx      ; get the act buf#
     9F13   B5 D1        5394           lda  buf0,x     ; accm= act buf#
     9F15   10 02        5395           bpl  ga1        ; x=lindx, n=1 no act buf
                         5396   
     9F17   B5 D8        5397           lda  buf1,x
     9F19   29 BF        5398   ga1     and  #$bf       ;  strip dirty bit
     9F1B   60           5399           rts
                         5400   
                         5401   ;get act buf#-set lbused,flgs
                         5402   
     9F1C   A6 50        5403   gaflgs  ldx  lindx
     9F1E   86 74        5404           stx  lbused     ; save buf #
     9F20   B5 D1        5405           lda  buf0,x
     9F22   10 08        5406           bpl  ga3
                         5407   
     9F24   8A           5408           txa
     9F25   18           5409           clc
     9F26   69 07        5410           adc  #mxchns
     9F28   85 74        5411           sta  lbused
     9F2A   B5 D8        5412           lda  buf1,x
     9F2C   85 41        5413   ga3     sta  t1
     9F2E   29 1F        5414           and  #$1f
     9F30   24 41        5415           bit  t1
     9F32   60           5416           rts     	; n=1 no act buf/v=1 dirty buf
                         5417   
     9F33   A6 50        5418   getina  ldx  lindx      ; get ch's inact buf#
     9F35   B5 D1        5419           lda  buf0,x
     9F37   30 02        5420           bmi  gi10
                         5421   
     9F39   B5 D8        5422           lda  buf1,x     ; accm =buf#
     9F3B   C9 FF        5423   gi10    cmp  #$ff
     9F3D   60           5424           rts     	; ff=no inact buffer
                         5425   
     9F3E   A6 50        5426   putina  ldx  lindx      ; put inact buff
     9F40   09 80        5427           ora  #$80       ; accm=buf#
     9F42   B4 D1        5428           ldy  buf0,x
     9F44   10 03        5429           bpl  pi1
                         5430   
     9F46   95 D1        5431           sta  buf0,x
     9F48   60           5432           rts
                         5433   
     9F49   95 D8        5434   pi1     sta  buf1,x
     9F4B   60           5435           rts
                         5436   	.INCLUDE rel1
                         5437   	.messg "rel1"
                         5438   	.subttl "rel1"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 77
"rel1"   REL1.SRC

Error Addr  Code          Seq   Source statement

     9F4C   A9 20        5440   nxtrec  lda  #ovrflo
     9F4E   20 9CDB      5441   	jsr  clrflg
     9F51   A9 80        5442   	lda  #lrf
     9F53   20 9CE4      5443   	jsr  tstflg
     9F56   D0 46        5444   	bne  nxtr40
                         5445   
     9F58   A6 50        5446   	ldx  lindx
     9F5A   FE 0249      5447   	inc  recl,x     ;  goto next record #
     9F5D   D0 03        5448   	bne  nxtr15
                         5449   
     9F5F   FE 0250      5450   	inc  rech,x
     9F62   A6 50        5451   nxtr15  ldx  lindx
     9F64   BD 0257      5452   	lda  nr,x
     9F67   F0 30        5453   	beq  nxtr45     ; there is a nr
                         5454   
     9F69   20 9442      5455   	jsr  getpnt     ;  get pointer
     9F6C   A6 50        5456   	ldx  lindx      ; test if same buffer
     9F6E   DD 0257      5457   	cmp  nr,x
     9F71   90 03        5458   	bcc  nxtr20     ;  yes, bt<nr
                         5459   
     9F73   20 9FBF      5460   	jsr  nrbuf      ;  no,next buffer
                         5461   
     9F76   A6 50        5462   nxtr20  ldx  lindx
     9F78   BD 0257      5463   	lda  nr,x
     9F7B   20 9422      5464   	jsr  setpnt     ; advance to next rec
     9F7E   A1 BB        5465   	lda  (buftab,x) ; read 1st dat byte
     9F80   85 54        5466   	sta  data       ; save for read channel
     9F82   A9 20        5467   	lda  #ovrflo
     9F84   20 9CDB      5468   	jsr  clrflg     ; clr overflow flg
     9F87   20 A2BC      5469   	jsr  addnr      ; advance nr
     9F8A   48           5470   nxout   pha
     9F8B   90 29        5471   	bcc  nxtr30     ; no block boundary
                         5472   
     9F8D   A9 00        5473   	lda  #0
     9F8F   20 9450      5474   	jsr  drdbyt     ; check track link
     9F92   D0 22        5475   	bne  nxtr30     ; not last block
                         5476   
     9F94   68           5477   	pla
     9F95   C9 02        5478   	cmp  #2
     9F97   F0 12        5479   	beq  nxtr50
                         5480   
     9F99   A9 80        5481   nxtr45  lda  #lrf
     9F9B   20 9CD5      5482   	jsr  setflg
     9F9E   20 9069      5483   nxtr40  jsr  getpre
     9FA1   B5 BB        5484   	lda  buftab,x
     9FA3   99 0242      5485   	sta  lstchr,y
     9FA6   A9 0D        5486   	lda  #cr
     9FA8   85 54        5487   	sta  data
     9FAA   60           5488   	rts
                         5489   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 77-1
"rel1"   REL1.SRC

Error Addr  Code          Seq   Source statement

     9FAB   20 9FB7      5490   nxtr50  jsr  nxtr35
     9FAE   A6 50        5491   	ldx  lindx
     9FB0   A9 00        5492   	lda  #0
     9FB2   9D 0257      5493   	sta  nr,x
     9FB5   60           5494   	rts
                         5495   
     9FB6   68           5496   nxtr30  pla
     9FB7   A6 50        5497   nxtr35  ldx  lindx
     9FB9   9D 0257      5498   	sta  nr,x
     9FBC   4C A0FD      5499   	jmp  setlst
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 78
"rel1"   REL1.SRC

Error Addr  Code          Seq   Source statement

     9FBF   20 9DCE      5501   nrbuf   jsr  rdlnk
     9FC2   20 9F1C      5502   	jsr  gaflgs     ;  test if dirty
     9FC5   50 16        5503   	bvc  nrbu50     ; clean, dont write out
                         5504   
     9FC7   20 9D9A      5505   	jsr  wrtout     ; dirty, write out
     9FCA   20 8D7D      5506   	jsr  dblbuf     ; toggle active buffer
     9FCD   A9 02        5507   	lda  #2
     9FCF   20 9422      5508   	jsr  setpnt
     9FD2   20 9CE9      5509   	jsr  tstwrt     ; test if lstjob is wrt
     9FD5   D0 24        5510   	bne  nrbu20     ; not a write,buffer ok
                         5511   
     9FD7   20 9D94      5512   	jsr  rdab       ; read in needed buffer
     9FDA   4C 94ED      5513   	jmp  watjob     ; wait around till done
                         5514   
     9FDD   20 8D7D      5515   nrbu50  jsr  dblbuf     ; toggle act buf
     9FE0   20 9CE9      5516   	jsr  tstwrt     ; was lstjob a wrt?
     9FE3   D0 06        5517   	bne  nrbu70     ; not a write
                         5518   
     9FE5   20 9D94      5519   	jsr  rdab       ; read in needed buffer
     9FE8   20 94ED      5520   	jsr  watjob     ; wait till done
     9FEB   20 9DCE      5521   nrbu70  jsr  rdlnk      ; read trk,sec link
     9FEE   A5 4D        5522   	lda  track      ; test if last buffer
     9FF0   F0 09        5523   	beq  nrbu20     ; yes,no dbl buff todo
                         5524   
     9FF2   20 8D7D      5525   	jsr  dblbuf     ; start read job on the
     9FF5   20 9D94      5526   	jsr  rdab       ; inactive buffer
     9FF8   4C 8D7D      5527   	jmp  dblbuf     ; (rts)
     9FFB   60           5528   nrbu20  rts
                         5529   	.INCLUDE rel2
                         5530           .messg "rel2"
                         5531           .subttl "rel2"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 79
"rel2"   REL2.SRC

Error Addr  Code          Seq   Source statement

     9FFC   20 A08D      5533   relput  jsr  sdirty     ; write data to buffer
     9FFF   20 9F11      5534           jsr  getact
     A002   0A           5535           asl  a
     A003   AA           5536           tax
     A004   A5 54        5537           lda  data
     A006   81 BB        5538           sta  (buftab,x)
     A008   B4 BB        5539           ldy  buftab,x   ; inc the pointer
     A00A   C8           5540           iny
     A00B   D0 09        5541           bne  relp05
                         5542   
     A00D   A4 50        5543           ldy  lindx
     A00F   B9 0257      5544           lda  nr,y
     A012   F0 0A        5545           beq  relp07
                         5546   
     A014   A0 02        5547           ldy  #2
     A016   98           5548   relp05  tya
     A017   A4 50        5549           ldy  lindx
     A019   D9 0257      5550           cmp  nr,y       ; test if nr=pointer
     A01C   D0 05        5551           bne  relp10     ; no,set new pointer
                         5552   
     A01E   A9 20        5553   relp07  lda  #ovrflo    ; yes,set overflow
     A020   4C 9CD5      5554           jmp  setflg
     A023                5555   relp10          	; write back new pointer
     A023   F6 BB        5556           inc  buftab,x
     A025   D0 0B        5557           bne  relp20     ; test if =0
                         5558   
     A027   AD 0101      5559   	lda  relsw
     A02A   09 10        5560   	ora  #bit4
     A02C   8D 0101      5561   	sta  relsw	; set overflow flag
     A02F   4C 9FBF      5562           jmp  nrbuf      ; (rts) prepare nxt buffer
     A032   60           5563   relp20  rts
                         5564   
     A033   A9 A0        5565   wrtrel  lda  #lrf+ovrflo ; chk all flgs
     A035   20 9CE4      5566           jsr  tstflg
     A038   D0 27        5567           bne  wr50       ; some flag is set
                         5568   
     A03A   A5 54        5569   wr10    lda  data       ; ready to put data
     A03C   20 9FFC      5570           jsr  relput
     A03F   A5 51        5571           lda  eoiflg
     A041   F0 0D        5572           beq  wr40       ; eoi was sent
                         5573   
     A043   60           5574           rts
                         5575   
     A044   A9 20        5576   wr30    lda  #ovrflo
     A046   20 9CE4      5577           jsr  tstflg
     A049   F0 05        5578           beq  wr40       ; no rec overflow
                         5579   
     A04B   A9 51        5580           lda  #recovf
     A04D   8D 02AB      5581           sta  erword     ; set err for end of print
     A050   20 A07B      5582   wr40    jsr  clrec      ; clear rest of record
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 79-1
"rel2"   REL2.SRC

Error Addr  Code          Seq   Source statement

     A053   20 A0E1      5583           jsr  rd40
     A056   AD 02AB      5584           lda  erword
     A059   F0 03        5585           beq  wr45
                         5586   
     A05B   4C 807C      5587           jmp  cmderr
                         5588   
     A05E   4C A862      5589   wr45    jmp  okerr
                         5590   
     A061   29 80        5591   wr50    and  #lrf
     A063   D0 05        5592           bne  wr60       ; last rec, add
                         5593   
     A065   A5 51        5594           lda  eoiflg
     A067   F0 DB        5595           beq  wr30
                         5596   
     A069   60           5597           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 80
"rel2"   REL2.SRC

Error Addr  Code          Seq   Source statement

     A06A   A5 54        5599   wr60    lda  data
     A06C   48           5600           pha
     A06D   20 A2D6      5601           jsr  addrel     ; add to file
     A070   68           5602           pla
     A071   85 54        5603           sta  data
     A073   A9 80        5604           lda  #lrf
     A075   20 9CDB      5605           jsr  clrflg
     A078   4C A03A      5606           jmp  wr10
                         5607   
     A07B   A9 20        5608   clrec   lda  #ovrflo    ; put 0's into the
     A07D   20 9CE4      5609           jsr  tstflg     ; rest of the record
     A080   D0 0A        5610           bne  clr10
                         5611   
     A082   A9 00        5612           lda  #0
     A084   85 54        5613           sta  data
     A086   20 9FFC      5614           jsr  relput
     A089   4C A07B      5615           jmp  clrec      ; (rts)
                         5616   
     A08C   60           5617   clr10   rts
                         5618   
     A08D   A9 40        5619   sdirty  lda  #dyfile
     A08F   20 9CD5      5620           jsr  setflg
     A092   20 9F1C      5621           jsr  gaflgs
     A095   09 40        5622           ora  #$40
     A097   A6 74        5623           ldx  lbused
     A099   95 D1        5624           sta  buf0,x
     A09B   60           5625           rts
                         5626   
     A09C   20 9F1C      5627   cdirty  jsr  gaflgs
     A09F   29 BF        5628           and  #$bf
     A0A1   A6 74        5629           ldx  lbused
     A0A3   95 D1        5630           sta  buf0,x
     A0A5   60           5631           rts
                         5632   	.INCLUDE rel3
                         5633           .messg "rel3"
                         5634           .subttl "rel3"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 81
"rel3"   REL3.SRC

Error Addr  Code          Seq   Source statement

     A0A6   A9 80        5636   rdrel   lda  #lrf
     A0A8   20 9CE4      5637           jsr  tstflg
     A0AB   D0 3F        5638           bne  rd05       ; no record err
                         5639   
     A0AD   20 9069      5640           jsr  getpre
     A0B0   B5 BB        5641           lda  buftab,x
     A0B2   D9 0242      5642           cmp  lstchr,y
     A0B5   F0 2A        5643           beq  rd40
                         5644   
     A0B7   F6 BB        5645           inc  buftab,x
     A0B9   D0 0E        5646           bne  rd20
                         5647   
     A0BB   AD 0101      5648   	lda  relsw
     A0BE   09 10        5649   	ora  #bit4
     A0C0   8D 0101      5650   	sta  relsw	; set overflow flag
     A0C3   20 9FBF      5651           jsr  nrbuf
     A0C6   20 9069      5652   rd15    jsr  getpre
     A0C9   A1 BB        5653   rd20    lda  (buftab,x)
     A0CB   99 023B      5654   rd25    sta  chndat,y
     A0CE   A9 89        5655           lda  #rndrdy
     A0D0   99 0234      5656           sta  chnrdy,y
     A0D3   B5 BB        5657           lda  buftab,x
     A0D5   D9 0242      5658           cmp  lstchr,y
     A0D8   F0 01        5659           beq  rd30
                         5660   
     A0DA   60           5661           rts
                         5662   
     A0DB   A9 81        5663   rd30    lda  #rndeoi
     A0DD   99 0234      5664           sta  chnrdy,y
     A0E0   60           5665           rts
                         5666   
     A0E1   20 9F4C      5667   rd40    jsr  nxtrec
     A0E4   20 9069      5668           jsr  getpre
     A0E7   A5 54        5669           lda  data
     A0E9   4C A0CB      5670           jmp  rd25
                         5671   
     A0EC   A6 50        5672   rd05    ldx  lindx      ; no rec char set up
     A0EE   A9 0D        5673           lda  #cr
     A0F0   9D 023B      5674           sta  chndat,x
     A0F3   A9 81        5675           lda  #rndeoi
     A0F5   9D 0234      5676           sta  chnrdy,x
     A0F8   A9 50        5677           lda  #norec     ; no rec err
     A0FA   20 807C      5678           jsr  cmderr
                         5679   	.INCLUDE rel4
                         5680           .messg "rel4"
                         5681           .subttl "rel4"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 82
"rel4"   REL4.SRC

Error Addr  Code          Seq   Source statement

     A0FD   A6 50        5683   setlst  ldx  lindx
     A0FF   BD 0257      5684           lda  nr,x
     A102   85 56        5685           sta  r1
     A104   C6 56        5686           dec  r1
     A106   C9 02        5687           cmp  #2
     A108   D0 04        5688           bne  setl01
                         5689   
     A10A   A9 FF        5690           lda  #$ff
     A10C   85 56        5691           sta  r1
     A10E   BD 025E      5692   setl01  lda  rs,x
     A111   85 57        5693           sta  r2
     A113   20 9442      5694           jsr  getpnt
     A116   A6 50        5695           ldx  lindx
     A118   C5 56        5696           cmp  r1
     A11A   90 19        5697           bcc  setl10
                         5698   
     A11C   F0 17        5699           beq  setl10
                         5700   
     A11E   20 8D7D      5701           jsr  dblbuf
     A121   20 A143      5702           jsr  fndlst
     A124   90 08        5703           bcc  setl05
                         5704   
     A126   A6 50        5705           ldx  lindx
     A128   9D 0242      5706           sta  lstchr,x
     A12B   4C 8D7D      5707           jmp  dblbuf
                         5708   
     A12E   20 8D7D      5709   setl05  jsr  dblbuf
     A131   A9 FF        5710           lda  #$ff
     A133   85 56        5711           sta  r1
     A135   20 A143      5712   setl10  jsr  fndlst
     A138   B0 03        5713           bcs  setl40
                         5714   
     A13A   20 9442      5715           jsr  getpnt
     A13D   A6 50        5716   setl40  ldx  lindx
     A13F   9D 0242      5717           sta  lstchr,x
     A142   60           5718           rts
                         5719   
     A143   20 9D69      5720   fndlst  jsr  set00
     A146   A4 56        5721           ldy  r1         ; offset to start at
     A148   B1 64        5722   fndl10  lda  (dirbuf),y
     A14A   D0 0D        5723           bne  fndl20
                         5724   
     A14C   88           5725           dey
     A14D   C0 02        5726           cpy  #2
     A14F   90 04        5727           bcc  fndl30
                         5728   
     A151   C6 57        5729           dec  r2         ; limit counter
     A153   D0 F3        5730           bne  fndl10
                         5731   
     A155   C6 57        5732   fndl30  dec  r2
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 82-1
"rel4"   REL4.SRC

Error Addr  Code          Seq   Source statement

     A157   18           5733           clc     	;  not found here
     A158   60           5734           rts
                         5735   
     A159   98           5736   fndl20  tya     	; found the end char
     A15A   38           5737           sec
     A15B   60           5738           rts
                         5739   	.INCLUDE ssend
                         5740           .messg "ssend"
                         5741           .subttl "ssend"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 83
"ssend"   SSEND.SRC

Error Addr  Code          Seq   Source statement

     A15C   20 A56E      5743   ssend   jsr  hugerel
     A15F   D0 03        5744   	bne  ssend1
                         5745   	
     A161   20 A5A9      5746   	jsr  rdlg	; read last group
     A164                5747   ssend1
     A164   20 9E0B      5748   	jsr  ssset      ; set ss & buftbl to
     A167   85 69        5749           sta  ssnum      ; end of last record
     A169   A9 04        5750           lda  #4
     A16B   85 64        5751           sta  dirbuf
     A16D   A0 0A        5752           ldy  #ssioff-6
     A16F   D0 04        5753           bne  se20       ; bra
                         5754   
     A171   88           5755   se10    dey
     A172   88           5756           dey
     A173   30 27        5757           bmi  break
                         5758   
     A175   B1 64        5759   se20    lda  (dirbuf),y ; look for last ss #
     A177   F0 F8        5760           beq  se10       ; t=0: not yet
                         5761   
     A179   98           5762           tya
     A17A   4A           5763           lsr  a
     A17B   C5 69        5764           cmp  ssnum      ; check ss #
     A17D   F0 0A        5765           beq  se30       ; this is last ss
                         5766   
     A17F   85 69        5767           sta  ssnum
     A181   A6 50        5768           ldx  lindx
     A183   BD 0265      5769           lda  ss,x
     A186   20 9E56      5770           jsr  ibrd       ; read last ss
     A189   A0 00        5771   se30    ldy  #0         ; set ssind
     A18B   84 64        5772           sty  dirbuf
     A18D   B1 64        5773           lda  (dirbuf),y ; debug
     A18F   D0 0B        5774           bne  break
                         5775   
     A191   C8           5776           iny
     A192   B1 64        5777           lda  (dirbuf),y
     A194   A8           5778           tay     	; back up to track
     A195   88           5779           dey
     A196   84 6A        5780           sty  ssind
     A198   98           5781           tya
     A199   4C 9E23      5782           jmp  setssp
     A19C   A9 67        5783   break   lda  #$67
U    A19E   20 0000 "    5784           jsr  cmder2
                         5785   	.INCLUDE record
                         5786           .messg "record"
                         5787           .subttl "record"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 84
"record"   RECORD.SRC

Error Addr  Code          Seq   Source statement

                         5789   ;set rel pntrs to given rec# or to
                         5790   ;the last rec if out of range
                         5791   
     A1A1   20 8165      5792   record  jsr  cmdset     ; init tables, ptrs
     A1A4   AD 0201      5793           lda  cmdbuf+1
     A1A7   85 52        5794           sta  sa
     A1A9   20 9027      5795           jsr  fndrch
     A1AC   90 05        5796           bcc  r20        ; got channel's lindex
                         5797   
     A1AE   A9 70        5798           lda  #nochnl    ; no valid channel
     A1B0   20 807C      5799           jsr  cmderr
                         5800   
     A1B3   A9 A0        5801   r20     lda  #lrf+ovrflo
     A1B5   20 9CDB      5802           jsr  clrflg
     A1B8   20 905F      5803           jsr  typfil     ; get file type
     A1BB   F0 05        5804           beq  r30        ; it is relative file
                         5805   
     A1BD   A9 64        5806           lda  #mistyp    ; wrong type
     A1BF   20 807C      5807           jsr  cmderr
                         5808   
     A1C2   AD 0202      5809   r30     lda  cmdbuf+2
     A1C5   9D 0249      5810           sta  recl,x     ; get record #
     A1C8   AD 0203      5811           lda  cmdbuf+3
     A1CB   9D 0250      5812           sta  rech,x
     A1CE   A6 50        5813           ldx  lindx      ; clear chnrdy to rndrdy
     A1D0   A9 89        5814           lda  #rndrdy
     A1D2   9D 0234      5815           sta  chnrdy,x
     A1D5   AD 0204      5816           lda  cmdbuf+4   ; get offset
     A1D8   F0 11        5817           beq  r40
                         5818   
     A1DA   38           5819           sec
     A1DB   E9 01        5820           sbc  #1
     A1DD   F0 0C        5821           beq  r40
                         5822   
     A1DF   DD 025E      5823           cmp  rs,x
     A1E2   90 07        5824           bcc  r40
                         5825   
     A1E4   A9 51        5826           lda  #recovf
     A1E6   8D 02AB      5827           sta  erword
     A1E9   A9 00        5828           lda  #0
     A1EB   85 68        5829   r40     sta  recptr     ; set offset
     A1ED   20 8C89      5830           jsr  fndrel     ; calc ss stuff
     A1F0   20 9E32      5831           jsr  sspos      ; set ss ptrs
     A1F3   50 08        5832           bvc  r50
                         5833   
     A1F5   A9 80        5834           lda  #lrf       ; beyond the end
     A1F7   20 9CD5      5835           jsr  setflg     ; set last rec flag
     A1FA   4C A0EC      5836           jmp  rd05
                         5837   
     A1FD   20 A20D      5838   r50     jsr  positn     ; pos to record
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 84-1
"record"   RECORD.SRC

Error Addr  Code          Seq   Source statement

     A200   A9 80        5839           lda  #lrf
     A202   20 9CE4      5840           jsr  tstflg
     A205   F0 03        5841           beq  r60
                         5842   
     A207   4C A0EC      5843           jmp  rd05
                         5844   
     A20A   4C 804C      5845   r60     jmp  endcmd
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 85
"record"   RECORD.SRC

Error Addr  Code          Seq   Source statement

                         5847   ;position rel data block into act buf and
                         5848   ;next block into inact buffer
     A20D   20 A235      5849   positn  jsr  posbuf     ; pos buffers
     A210   A5 6B        5850           lda  relptr
     A212   20 9422      5851           jsr  setpnt     ; set ptr from fndrel
     A215   A6 50        5852           ldx  lindx
     A217   BD 025E      5853           lda  rs,x
     A21A   38           5854           sec     	; calc the offset
     A21B   E5 68        5855           sbc  recptr
     A21D   B0 03        5856           bcs  p2
                         5857   
     A21F   4C A19C      5858           jmp  break      ; should not be needed
                         5859   
     A222   18           5860   p2      clc
     A223   65 6B        5861           adc  relptr
     A225   90 03        5862           bcc  p30
                         5863   
     A227   69 01        5864           adc  #1
     A229   38           5865           sec
     A22A   20 9F8A      5866   p30     jsr  nxout      ; set nr
     A22D   4C A0C6      5867           jmp  rd15
                         5868   
     A230   A9 51        5869           lda  #recovf
     A232   20 807C      5870           jsr  cmderr
                         5871   
     A235   A5 64        5872   posbuf  lda  dirbuf     ; position proper data
     A237   85 58        5873           sta  r3         ; blocks into buffers
     A239   A5 65        5874           lda  dirbuf+1
     A23B   85 59        5875           sta  r4
     A23D   20 A273      5876           jsr  bhere      ; is buffer in?
     A240   F0 22        5877           beq  p20        ; br, yes!
                         5878   
     A242   20 9D2E      5879   	jsr  scrub	; write and clear
     A245   20 9D49      5880   	jsr  getlnk	; get t & s link
     A248   A5 4D        5881   	lda  track	; done?
     A24A   F0 19        5882   	beq  p80
                         5883   
     A24C   20 8D7D      5884   	jsr  dblbuf
     A24F   20 A273      5885   	jsr  bhere	; is it in?
     A252   D0 11        5886   	bne  p80
                         5887   
     A254   20 9D49      5888   	jsr  getlnk	; get t & s link
     A257   A5 4D        5889   	lda  track	; done ???
     A259   F0 09        5890   	beq  p20
                         5891   
     A25B   20 8D7D      5892   	jsr  dblbuf
     A25E   20 9D94      5893   	jsr  rdab	; read it
     A261   4C 8D7D      5894   	jmp  dblbuf
                         5895   
     A264   60           5896   p20     rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 85-1
"record"   RECORD.SRC

Error Addr  Code          Seq   Source statement

                         5897   
     A265   A0 00        5898   p80     ldy  #0         ; get proper block
     A267   B1 58        5899           lda  (r3),y
     A269   85 4D        5900           sta  track
     A26B   C8           5901           iny
     A26C   B1 58        5902           lda  (r3),y
     A26E   85 4E        5903           sta  sector
     A270   4C 8FEA      5904           jmp  strdbl     ; get next blk, too.
                         5905   
     A273   20 9D7C      5906   bhere   jsr  gethdr     ; get the header
     A276   A0 00        5907           ldy  #0
     A278   B1 58        5908           lda  (r3),y
     A27A   C5 4D        5909           cmp  track
     A27C   F0 01        5910           beq  bh10       ; test sector, too.
                         5911   
     A27E   60           5912           rts
                         5913   
     A27F   C8           5914   bh10    iny
     A280   B1 58        5915           lda  (r3),y
     A282   C5 4E        5916           cmp  sector     ; set .z
     A284   D0 11        5917   	bne  1$
                         5918   
     A286   AD 0101      5919   	lda  relsw
     A289   29 10        5920   	and  #bit4
     A28B   F0 0A        5921   	beq  1$
                         5922   	
     A28D   AD 0101      5923   	lda  relsw
     A290   29 EF        5924   	and  #all-bit4
     A292   8D 0101      5925   	sta  relsw	; clear flag
     A295   49 10        5926   	eor  #bit4
     A297   60           5927   1$	rts
                         5928   	.INCLUDE nulbuf
                         5929           .messg "nulbuf"
                         5930           .subttl "nulbuf"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 86
"nulbuf"   NULBUF.SRC

Error Addr  Code          Seq   Source statement

                         5932   ;set nul recs in act-buf for exten
                         5933   ;in: nr=last rec in previous buf
                         5934   ;out: nr=last rec for next nulbuf/lstchr
                         5935   
     A298   20 9D69      5936   nulbuf  jsr  set00      ; set indirect ptr
     A29B   A0 02        5937           ldy  #2
     A29D   A9 00        5938           lda  #0
     A29F   91 64        5939   nb10    sta  (dirbuf),y ; clear buffer
     A2A1   C8           5940           iny
     A2A2   D0 FB        5941           bne  nb10
                         5942   
     A2A4   20 A2BC      5943           jsr  addnr      ; advance nr
                         5944   
     A2A7   9D 0257      5945   nb20    sta  nr,x
     A2AA   A8           5946           tay
     A2AB   A9 FF        5947           lda  #$ff
     A2AD   91 64        5948           sta  (dirbuf),y ; init record w/ cr
     A2AF   20 A2BC      5949           jsr  addnr
     A2B2   90 F3        5950           bcc  nb20       ; not done
                         5951   
     A2B4   D0 05        5952           bne  nb30
                         5953   
     A2B6   A9 00        5954           lda  #0
     A2B8   9D 0257      5955           sta  nr,x
     A2BB   60           5956   nb30    rts
                         5957   
                         5958   ; add rs & nr, leave in accum
                         5959   ; c=1: cross buffer boundary
                         5960   
     A2BC   A6 50        5961   addnr   ldx  lindx
     A2BE   BD 0257      5962           lda  nr,x
     A2C1   38           5963           sec
     A2C2   F0 0E        5964           beq  an05
                         5965   
     A2C4   18           5966           clc
     A2C5   7D 025E      5967           adc  rs,x
     A2C8   90 0B        5968           bcc  an10
                         5969   
     A2CA   D0 06        5970           bne  an05
                         5971   
     A2CC   A9 02        5972           lda  #2
U    A2CE   2C 0000 "    5973           bit  er00
     A2D1   60           5974           rts
                         5975   
     A2D2   69 01        5976   an05    adc  #1         ; adjust for link
     A2D4   38           5977           sec
     A2D5   60           5978   an10    rts
                         5979   	.INCLUDE addrel
                         5980   	.messg "addrel"
                         5981   	.subttl "addrel"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 86-1
"addrel"   ADDREL.SRC

Error Addr  Code          Seq   Source statement

1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 87
"addrel"   ADDREL.SRC

Error Addr  Code          Seq   Source statement

     A2D6   20 A438      5983   addrel  jsr  adrels
     A2D9   20 8C89      5984   	jsr  fndrel
     A2DC                5985   addr1
     A2DC   20 B65B      5986   	jsr  numfre     ; calc available...
     A2DF   A4 50        5987   	ldy  lindx      ; record span?
     A2E1   BE 025E      5988   	ldx  rs,y
     A2E4   CA           5989   	dex
     A2E5   8A           5990   	txa
     A2E6   18           5991   	clc
     A2E7   65 6B        5992   	adc  relptr
     A2E9   90 0C        5993   	bcc  ar10       ; include ss ptrs and check
                         5994   
     A2EB   E6 6A        5995   	inc  ssind
     A2ED   E6 6A        5996   	inc  ssind
     A2EF   D0 06        5997   	bne  ar10
                         5998   
     A2F1   E6 69        5999   	inc  ssnum
     A2F3   A9 10        6000   	lda  #ssioff
     A2F5   85 6A        6001   	sta  ssind
     A2F7                6002   ar10
     A2F7   A5 56        6003   	lda  r1
     A2F9   18           6004   	clc
     A2FA   69 02        6005   	adc  #2
     A2FC   20 9E23      6006   	jsr  setssp
     A2FF   A5 69        6007   	lda  ssnum
     A301   C9 06        6008   	cmp  #nssl
     A303   90 11        6009   	bcc  ar25       ; valid range?
                         6010   
     A305   20 A56E      6011   	jsr  hugerel
     A308   D0 07        6012   	bne  ar20
                         6013   
     A30A   85 69        6014   	sta  ssnum      ; .a = 0
     A30C   EE 0100      6015   	inc  grpnum
     A30F   D0 05        6016   	bne  ar25       ; bra
     A311                6017   ar20
     A311   A9 52        6018   	lda  #bigfil
     A313   20 807C      6019   	jsr  cmderr     ; too many ss's
                         6020   
     A316   A5 6A        6021   ar25    lda  ssind      ; calc # blks needed
     A318   38           6022   	sec             ; & check against avail.
     A319   E5 56        6023   	sbc  r1
     A31B   B0 03        6024   	bcs  ar30
                         6025   
     A31D   E9 0F        6026   	sbc  #ssioff-1
     A31F   18           6027   	clc
     A320                6028   ar30
     A320   48           6029   	pha
     A321   20 A56E      6030   	jsr  hugerel
     A324   F0 1E        6031   	beq  addbig
                         6032   	
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 87-1
"addrel"   ADDREL.SRC

Error Addr  Code          Seq   Source statement

     A326   68           6033   	pla
     A327   85 43        6034   	sta  t3         ; # ss indices
     A329   A5 69        6035   	lda  ssnum
     A32B   E5 55        6036   	sbc  r0
     A32D   85 44        6037   	sta  t4         ; # ss needed
     A32F   A2 00        6038   	ldx  #0         ; clear accum.
     A331   86 41        6039   	stx  t1
     A333   86 42        6040   	stx  t2
     A335   AA           6041   	tax             ; .x=# ss
     A336   20 9E82      6042   	jsr  sscalc     ; calc # of blks needed
     A339   A5 42        6043   	lda  t2
     A33B   D0 2F        6044   	bne  ar35
                         6045   
     A33D   A6 41        6046   	ldx  t1
     A33F   CA           6047   	dex
     A340   D0 2A        6048   	bne  ar35
                         6049   	
     A342   F0 26        6050   	beq  ar34       ; bra
                         6051   ;
                         6052   ; add for big relfile
                         6053   ;
     A344                6054   addbig
     A344   68           6055   	pla
     A345   85 43        6056   	sta  t3
     A347   A5 69        6057   	lda  ssnum
     A349   E5 55        6058   	sbc  r0
     A34B   B0 04        6059   	bcs  addbi1
                         6060   
     A34D   E6 58        6061   	inc  r3
     A34F   69 06        6062   	adc  #6
     A351                6063   addbi1
     A351   85 44        6064   	sta  t4
     A353   AD 0100      6065   	lda  grpnum
     A356   38           6066   	sec
     A357   E5 58        6067   	sbc  r3
     A359   85 58        6068   	sta  r3
     A35B   20 9E97      6069   	jsr  ssscal
     A35E   A5 5C        6070   	lda  result+1
     A360   D0 0A        6071   	bne  ar35
                         6072   
     A362   A6 5B        6073   	ldx  result
     A364   D0 01        6074   	bne  addbi2
                         6075   
     A366   60           6076   	rts
     A367                6077   addbi2
     A367   CA           6078   	dex
     A368   D0 02        6079   	bne  ar35
     A36A                6080   ar34
     A36A   E6 57        6081   	inc  r2
     A36C   CD 028E      6082   ar35    cmp  nbtemp+1
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 87-2
"addrel"   ADDREL.SRC

Error Addr  Code          Seq   Source statement

     A36F   90 09        6083   	bcc  ar40       ; ok!!
                         6084   
     A371   D0 9E        6085   	bne  ar20
                         6086   
     A373   AD 028D      6087   	lda  nbtemp
     A376   C5 41        6088   	cmp  t1
     A378   90 97        6089   	bcc  ar20       ; not enuf blocks
                         6090   
     A37A   A9 01        6091   ar40    lda  #1
     A37C   20 9450      6092   	jsr  drdbyt     ; look at sec link
     A37F   18           6093   	clc
     A380   69 01        6094   	adc  #1         ; +1 is nr
     A382   A6 50        6095   	ldx  lindx
     A384   9D 0257      6096   	sta  nr,x
     A387   20 B668      6097   	jsr  nxtts      ; get next block
     A38A   20 9D3A      6098   	jsr  setlnk     ; ...& set link.
     A38D   A5 57        6099   	lda  r2
     A38F   D0 15        6100   	bne  ar50       ; add one block
                         6101   
     A391   20 9D9A      6102   	jsr  wrtout     ; write current last rec
     A394                6103   ar45
     A394   20 8D7D      6104   	jsr  dblbuf     ; switch bufs
     A397   20 9585      6105   	jsr  sethdr     ; set hdr from t & s
     A39A   20 B668      6106   	jsr  nxtts      ; get another
     A39D   20 9D3A      6107   	jsr  setlnk     ; set up link
     A3A0   20 A298      6108   	jsr  nulbuf     ; clean it out
     A3A3   4C A3B2      6109   	jmp  ar55
                         6110   
     A3A6   20 8D7D      6111   ar50    jsr  dblbuf     ; switch bufs
     A3A9   20 9585      6112   	jsr  sethdr     ; set hdr from t&s
     A3AC   20 A298      6113   	jsr  nulbuf     ; clean buffer
     A3AF   20 9D56      6114   	jsr  nullnk     ; last block =0,lstchr
     A3B2   20 9D9A      6115   ar55    jsr  wrtout     ; write buffer
     A3B5   20 9D49      6116   	jsr  getlnk     ; get t&s from link
     A3B8   A5 4D        6117   	lda  track
     A3BA   48           6118   	pha             ; save 'em
     A3BB   A5 4E        6119   	lda  sector
     A3BD   48           6120   	pha
     A3BE   20 9D7C      6121   	jsr  gethdr     ; now get hdr t&s
     A3C1   A5 4E        6122   	lda  sector
     A3C3   48           6123   	pha             ; save 'em
     A3C4   A5 4D        6124   	lda  track
     A3C6   48           6125   	pha
     A3C7   20 9E75      6126   	jsr  gsspnt     ; check ss ptr
     A3CA   AA           6127   	tax
     A3CB   D0 0A        6128   	bne  ar60
                         6129   
     A3CD   20 A459      6130   	jsr  newss      ; need another ss
     A3D0   A9 10        6131   	lda  #ssioff
     A3D2   20 9E23      6132   	jsr  setssp     ; .a=bt val
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 87-3
"addrel"   ADDREL.SRC

Error Addr  Code          Seq   Source statement

     A3D5   E6 55        6133   	inc  r0         ; advance ss count
     A3D7   68           6134   ar60    pla
     A3D8   20 9CCA      6135   	jsr  putss      ; record t&s...
     A3DB   68           6136   	pla
     A3DC   20 9CCA      6137   	jsr  putss      ; ...in ss.
     A3DF   68           6138   	pla             ; get t&s from link
     A3E0   85 4E        6139   	sta  sector
     A3E2   68           6140   	pla
     A3E3   85 4D        6141   	sta  track
     A3E5   F0 1B        6142   	beq  ar65       ; t=0: that's all!!
                         6143   
     A3E7   20 A56E      6144   	jsr  hugerel
     A3EA   D0 07        6145   	bne  ar61
                         6146   
     A3EC   A5 5A        6147   	lda  r5
     A3EE   CD 0100      6148   	cmp  grpnum
     A3F1   90 A1        6149   	bcc  ar45
     A3F3                6150   ar61
     A3F3   A5 55        6151   	lda  r0
     A3F5   C5 69        6152   	cmp  ssnum
     A3F7   D0 9B        6153   	bne  ar45       ; not even done yet
                         6154   
     A3F9   20 9E75      6155   	jsr  gsspnt
     A3FC   C5 6A        6156   	cmp  ssind
     A3FE   90 94        6157   	bcc  ar45       ; almost done
                         6158   
     A400   F0 A4        6159   	beq  ar50       ; one more blk left
                         6160   
     A402   20 9E75      6161   ar65    jsr  gsspnt
     A405   48           6162   	pha
     A406   A9 00        6163   	lda  #0
     A408   20 9E15      6164   	jsr  ssdir
     A40B   A9 00        6165   	lda  #0
     A40D   A8           6166   	tay
     A40E   91 64        6167   	sta  (dirbuf),y
     A410   C8           6168   	iny
     A411   68           6169   	pla
     A412   38           6170   	sec
     A413   E9 01        6171   	sbc  #1
     A415   91 64        6172   	sta  (dirbuf),y
     A417   20 9DA6      6173   	jsr  wrtss      ; write ss
     A41A   20 94ED      6174   	jsr  watjob
     A41D   20 B515      6175   	jsr  mapout
     A420   20 8C89      6176   	jsr  fndrel
     A423   20 8D7D      6177   	jsr  dblbuf     ; get back to leading buf
     A426   20 9E32      6178   	jsr  sspos
     A429   70 03        6179   	bvs  ar70
                         6180   
     A42B   4C A20D      6181   	jmp  positn
                         6182   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 87-4
"addrel"   ADDREL.SRC

Error Addr  Code          Seq   Source statement

     A42E   A9 80        6183   ar70    lda  #lrf
     A430   20 9CD5      6184   	jsr  setflg
     A433   A9 50        6185   	lda  #norec
     A435   20 807C      6186   	jsr  cmderr
                         6187   
     A438                6188   adrels
     A438   20 A15C      6189   	jsr  ssend      ; setup eof
     A43B   20 A235      6190   	jsr  posbuf
     A43E   20 A56E      6191   	jsr  hugerel
     A441   D0 07        6192   	bne  adrel1
                         6193   	
     A443   AD 0100      6194   	lda  grpnum
     A446   85 5A        6195   	sta  r5
     A448   85 58        6196   	sta  r3
     A44A                6197   adrel1
     A44A   A5 6A        6198   	lda  ssind
     A44C   85 56        6199   	sta  r1         ; save ss index
     A44E   A5 69        6200   	lda  ssnum
     A450   85 55        6201   	sta  r0         ; save ss number
     A452   A9 00        6202   	lda  #0
     A454   85 57        6203   	sta  r2
     A456   85 68        6204   	sta  recptr     ; first byte in record
     A458   60           6205   	rts
                         6206   	
                         6207   	.INCLUDE newss
                         6208           .messg "newss"
                         6209           .subttl "newss"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 88
"newss"   NEWSS.SRC

Error Addr  Code          Seq   Source statement

                         6211   ;generate new ss & fix old ss's to
                         6212   ;reflect it..
                         6213   
     A459   20 B668      6214   newss   jsr  nxtts      ; get t&s based on hdr
     A45C   20 8D7D      6215           jsr  dblbuf     ; use inactive buffer
     A45F   20 9D2E      6216           jsr  scrub
     A462   20 9F11      6217           jsr  getact
     A465   48           6218           pha
     A466   20 9DFA      6219           jsr  clrbuf
     A469   A6 50        6220           ldx  lindx
     A46B   BD 0265      6221           lda  ss,x       ; set regs for transfer
     A46E   A8           6222           tay
     A46F   68           6223           pla
     A470   AA           6224           tax
     A471   20 A56E      6225   	jsr  hugerel
     A474   D0 03        6226   	bne  newss1
                         6227   
     A476   4C A547      6228   	jmp  newss3
     A479                6229   newss1
     A479   A9 10        6230           lda  #ssioff    ; # of chars
     A47B   20 9DDE      6231           jsr  b0tob0     ; transfer at buf(0)
     A47E   A9 00        6232           lda  #0
     A480   20 9E15      6233           jsr  ssdir
     A483   A0 02        6234           ldy  #2
     A485   B1 64        6235           lda  (dirbuf),y ; get ss #
     A487   48           6236           pha
     A488   A9 00        6237           lda  #0
     A48A   20 9422      6238           jsr  setpnt
     A48D   68           6239           pla
     A48E   18           6240           clc
     A48F   69 01        6241           adc  #1
     A491   91 64        6242           sta  (dirbuf),y ; put ss # in new ss
     A493   0A           6243           asl  a
     A494   69 04        6244           adc  #4
     A496   85 58        6245           sta  r3         ; save position
     A498   A8           6246           tay
     A499   38           6247           sec
     A49A   E9 02        6248           sbc  #2
     A49C   85 59        6249           sta  r4
     A49E                6250   newss2
     A49E   A5 4D        6251           lda  track
     A4A0   85 56        6252           sta  r1         ; save for ss update
     A4A2   91 64        6253           sta  (dirbuf),y ; put track in ss
     A4A4   C8           6254           iny
     A4A5   A5 4E        6255           lda  sector
     A4A7   85 57        6256           sta  r2         ; save for ss update
     A4A9   91 64        6257           sta  (dirbuf),y ; put sector in ss
     A4AB   A0 00        6258           ldy  #0
     A4AD   98           6259           tya
     A4AE   91 64        6260           sta  (dirbuf),y ; null link
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 88-1
"newss"   NEWSS.SRC

Error Addr  Code          Seq   Source statement

     A4B0   C8           6261           iny
     A4B1   A9 11        6262           lda  #ssioff+1  ; ptr to last byte
     A4B3   91 64        6263           sta  (dirbuf),y
     A4B5   A9 10        6264           lda  #ssioff
     A4B7   20 9422      6265           jsr  setpnt
     A4BA   20 9D8E      6266           jsr  wrtab
     A4BD   20 94ED      6267           jsr  watjob
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 89
"newss"   NEWSS.SRC

Error Addr  Code          Seq   Source statement

     A4C0   A6 50        6269   ns20    ldx  lindx
     A4C2   BD 0265      6270           lda  ss,x       ; get ss buffer #
     A4C5   48           6271           pha
     A4C6   20 9F1C      6272           jsr  gaflgs
     A4C9   A6 50        6273           ldx  lindx
     A4CB   9D 0265      6274           sta  ss,x       ; swap act-buf & ss
     A4CE   68           6275           pla
     A4CF   A6 74        6276           ldx  lbused
     A4D1   95 D1        6277           sta  buf0,x
     A4D3   A9 00        6278           lda  #0
     A4D5   20 9422      6279           jsr  setpnt     ; set link to new ss
     A4D8   A0 00        6280           ldy  #0
     A4DA   A5 4D        6281           lda  track
     A4DC   91 64        6282           sta  (dirbuf),y
     A4DE   C8           6283           iny
     A4DF   A5 4E        6284           lda  sector
     A4E1   91 64        6285           sta  (dirbuf),y
     A4E3   20 A56E      6286   	jsr  hugerel
     A4E6   D0 41        6287   	bne  ns50
                         6288   
     A4E8   A5 55        6289   	lda  r0
     A4EA   C9 FF        6290   	cmp  #all
     A4EC   D0 3B        6291   	bne  ns50
                         6292   
     A4EE   A5 4E        6293   	lda  sector
     A4F0   48           6294   	pha
     A4F1   A5 4D        6295   	lda  track
     A4F3   48           6296   	pha
     A4F4   20 9D9A      6297   	jsr  wrtout	; write old ss
     A4F7   20 94ED      6298   	jsr  watjob
     A4FA   20 8D7D      6299   	jsr  dblbuf
     A4FD   20 A57E      6300   	jsr  rdsssa	; read sss
     A500   E6 5A        6301   	inc  r5
     A502   A5 5A        6302   	lda  r5		; next group number
     A504   0A           6303   	asl  a
     A505   18           6304   	clc
     A506   69 03        6305   	adc  #3		; index into sss
     A508   20 9E23      6306   	jsr  setssp	; point to it
     A50B   68           6307   	pla
     A50C   20 9CCA      6308   	jsr  putss	; set the track
     A50F   68           6309   	pla
     A510   20 9CCA      6310   	jsr  putss	; set the sector
     A513   20 A581      6311   	jsr  wrtsss	; write out the sss
     A516   A5 5A        6312   	lda  r5
     A518   48           6313   	pha
     A519   4C A5CC      6314   	jmp  rdss1d	; now read the ss back in
                         6315   	
     A51C   20 9F11      6316   ns40    jsr  getact
     A51F   A6 50        6317           ldx  lindx
     A521   20 9E56      6318           jsr  ibrd       ; read next ss
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 89-1
"newss"   NEWSS.SRC

Error Addr  Code          Seq   Source statement

     A524   A9 00        6319           lda  #0
     A526   20 9422      6320           jsr  setpnt     ; ptr=0
     A529   C6 59        6321   ns50    dec  r4
     A52B   C6 59        6322           dec  r4
     A52D   A4 58        6323           ldy  r3         ; get new ss link ptr
     A52F   A5 56        6324           lda  r1
     A531   91 64        6325           sta  (dirbuf),y ; put track in
     A533   C8           6326           iny
     A534   A5 57        6327           lda  r2
     A536   91 64        6328           sta  (dirbuf),y ; put sector in
     A538   20 9D9A      6329           jsr  wrtout     ; write it back
     A53B   20 94ED      6330           jsr  watjob     ; ...& wait
     A53E   A4 59        6331           ldy  r4
     A540   C0 03        6332           cpy  #3
     A542   B0 D8        6333           bcs  ns40       ; more ss to update!
                         6334   
     A544   4C 8D7D      6335           jmp  dblbuf     ; reset active buffer
     A547                6336   newss3
     A547   A5 55        6337   	lda  r0
     A549   C9 05        6338   	cmp  #nssl-1
     A54B   B0 03        6339   	bcs  newss4
                         6340   	
     A54D   4C A479      6341   	jmp  newss1
     A550                6342   newss4
     A550   A9 FF        6343   	lda  #all
     A552   85 55        6344   	sta  r0
     A554   A9 00        6345   	lda  #0
     A556   20 9422      6346   	jsr  setpnt
     A559   A0 02        6347   	ldy  #2
     A55B   91 64        6348   	sta  (dirbuf),y	; ss 0
     A55D   A6 50        6349   	ldx  lindx
     A55F   BD 025E      6350   	lda  rs,x
     A562   C8           6351   	iny
     A563   91 64        6352   	sta  (dirbuf),y	; record size
     A565   C8           6353   	iny
     A566   F0 03        6354   	beq  newss5
                         6355   	
     A568   4C A49E      6356   	jmp  newss2
     A56B                6357   newss5
     A56B   4C A479      6358   	jmp  newss1
                         6359   	
                         6360   	.INCLUDE system
                         6361   	.messg "system"
                         6362   	.subttl "system"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 90
"system"   SYSTEM.SRC

Error Addr  Code          Seq   Source statement

     A56E                6364   hugerel
     A56E   AD 0101      6365   	lda  relsw
     A571   29 20        6366   	and  #bit5
     A573   60           6367   	rts
                         6368   
                         6369   ;
                         6370   ; read and write super sidesectors
                         6371   ;
     A574                6372   rdsss
     A574   A6 50        6373   	ldx  lindx
     A576   A9 FE        6374   	lda  #all-1
     A578   DD 0102      6375   	cmp  sssgrp,x
     A57B   D0 01        6376   	bne  rdsssa     ; ss not resident read it
                         6377   
     A57D   60           6378   	rts
     A57E                6379   rdsssa
     A57E   A9 80        6380   	lda  #read_dv
     A580   2C           6381   	.byte skip2
     A581   A9 90        6382   wrtsss  lda  #wrtsd_dv
     A583   48           6383   	pha
     A584   A6 50        6384   	ldx  lindx
     A586   BD 0110      6385   	lda  ssstrk,x
     A589   85 4D        6386   	sta  track      ; set track
     A58B   BD 0109      6387   	lda  ssssec,x
     A58E   85 4E        6388   	sta  sector     ; set sector
     A590   A9 FF        6389   	lda  #all
     A592   9D 0102      6390   	sta  sssgrp,x
     A595   BD 0265      6391   	lda  ss,x       ; get ss buffer #
     A598   85 6C        6392   	sta  jobnum
     A59A   20 9588      6393   	jsr  seth       ; set the job header
     A59D   68           6394   	pla
     A59E   20 94E4      6395   	jsr  dojob      ; do the job
     A5A1   A6 50        6396   	ldx  lindx
     A5A3   A9 FE        6397   	lda  #all-1
     A5A5   9D 0102      6398   	sta  sssgrp,x   ; mark sss resident
     A5A8   60           6399   	rts
                         6400   ;
                         6401   ; read last group
                         6402   ;
     A5A9                6403   rdlg
     A5A9   A9 5A        6404   	lda  #$5a
     A5AB   8D 0100      6405   	sta  grpnum
     A5AE   20 A5C0      6406   	jsr  rdss1
     A5B1   D0 01        6407   	bne  rdlg1
                         6408   
     A5B3   60           6409   	rts
     A5B4                6410   rdlg1
     A5B4   CE 0100      6411   	dec  grpnum
     A5B7   AD 0100      6412   	lda  grpnum
     A5BA   20 A5D2      6413   	jsr  rdss1c
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 90-1
"system"   SYSTEM.SRC

Error Addr  Code          Seq   Source statement

     A5BD   D0 F5        6414   	bne  rdlg1
                         6415   	
     A5BF   60           6416   	rts
                         6417   ;
                         6418   ; read side sector 1 of group n
                         6419   ;
     A5C0                6420   rdss1
     A5C0   A6 50        6421   	ldx  lindx
     A5C2   DD 0102      6422   	cmp  sssgrp,x
     A5C5   D0 01        6423   	bne  rdss1a
                         6424   	
     A5C7   60           6425   	rts
     A5C8                6426   rdss1a
     A5C8   48           6427   	pha             ; save group
     A5C9   20 A574      6428   	jsr  rdsss      ; read the sss
     A5CC                6429   rdss1d
     A5CC   A9 03        6430   	lda  #3
     A5CE   20 9E15      6431   	jsr  ssdir      ; point to the first group
     A5D1   68           6432   	pla
     A5D2                6433   rdss1c
     A5D2   AA           6434   	tax             ; save group number
     A5D3   0A           6435   	asl  a
     A5D4   A8           6436   	tay
     A5D5   B1 64        6437   	lda  (dirbuf),y ; get track
     A5D7   D0 03        6438   	bne  rdss1b
                         6439   
     A5D9   09 FF        6440   	ora  #all
     A5DB   60           6441   	rts             ; return $ff
     A5DC                6442   rdss1b
     A5DC   85 4D        6443   	sta  track
     A5DE   C8           6444   	iny
     A5DF   B1 64        6445   	lda  (dirbuf),y ; get sector
     A5E1   85 4E        6446   	sta  sector
     A5E3   8A           6447   	txa             ; get group #
     A5E4   48           6448   	pha
     A5E5   A9 FF        6449   	lda  #all
     A5E7   A6 50        6450   	ldx  lindx
     A5E9   9D 0102      6451   	sta  sssgrp,x   ; mark group nonresident
     A5EC   BD 0265      6452   	lda  ss,x       ; get ss buffer #
     A5EF   85 6C        6453   	sta  jobnum
     A5F1   20 9588      6454   	jsr  seth       ; set the job header
     A5F4   A9 80        6455   	lda  #read_dv
     A5F6   20 94E4      6456   	jsr  dojob      ; read the ss in
     A5F9   A6 50        6457   	ldx  lindx
     A5FB   68           6458   	pla
     A5FC   9D 0102      6459   	sta  sssgrp,x   ; mark the group as resident
     A5FF   A9 00        6460   	lda  #0
     A601   60           6461   	rts             ; return 0
                         6462   	.INCLUDE erproc
                         6463           .messg "erproc"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 90-2
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

                         6464           .subttl "erproc"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 91
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

                         6466   ; error processing
                         6467   ;-controller errors-----------------
                         6468   ;  0  (1)  no error
                         6469   ;  1  (1)  files scratched
                         6470   ;  2  (1)  partition selected
                         6471   ; 20  (2)  can't find block header
                         6472   ; 21  (3)  no synch character
                         6473   ; 22  (4)  data block not present
                         6474   ; 23  (5)  checksum error in data
                         6475   ; 24  (16) byte decoding error
                         6476   ; 25  (7)  write-verify error
                         6477   ; 26  (8)  write w/ write protect on
                         6478   ; 27  (9)  checksum error in header
                         6479   ; 28  (10) data extends into next block
                         6480   ; 29  (11) disk i.d. mismatch
                         6481   ;-command errors--------------------
            =0030        6482   badsyn   =$30   ;  general syntax
            =0031        6483   badcmd   =$31   ;  invalid command
            =0032        6484   longln   =$32   ;  long line
            =0033        6485   badfn    =$33   ;  invalid filname
            =0034        6486   nofile   =$34   ;  no file given
            =0039        6487   nocfil   =$39   ;  comnd file not found
            =0050        6488   norec    =$50   ;  record not present
            =0051        6489   recovf   =$51   ;  overflow in record
            =0052        6490   bigfil   =$52   ;  file too large
            =0060        6491   filopn   =$60   ;  file open for write
            =0061        6492   filnop   =$61   ;  file not open
            =0062        6493   flntfd   =$62   ;  file not found
            =0063        6494   flexst   =$63   ;  file exists
            =0064        6495   mistyp   =$64   ;  file type mismatch
            =0065        6496   noblk    =$65   ;  no block
            =0066        6497   badts    =$66   ;  illegal track or sector
            =0067        6498   systs    =$67   ;  illegal system t or s
            =0070        6499   nochnl   =$70   ;  no channels available
            =0071        6500   direrr   =$71   ;  directory error
            =0072        6501   dskful   =$72   ;  disk full full
            =0073        6502   cbmv2    =$73   ;  copyright cbm dos V0
            =0074        6503   nodriv   =$74   ;  drive not ready
            =0075        6504   fmter	 =$75   ;  format error
            =0076        6505   cntrer	 =$76	;  controller error
            =0077        6506   illpar	 =$77	;  illegal partition
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 92
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

                         6508   ;-error message table----------------
                         6509   ;   leading errror numbers,
                         6510   ;   text with 1st & last chars
                         6511   ;   or'ed with $80,
                         6512   ;   tokens for key words are
                         6513   ;   less than $10 (and'ed w/ $80)
     A602   00 A0 4F     6514   errtab  .BYT  0,$a0,'O',$cb    			; ok
     A605   CB 
     A606   02 A0 53     6515   	.BYT  2,$a0,'SELECTED PARTITIO',$ce  	; selected partition
     A609   45 4C 45 
     A60C   43 54 45 
     A60F   44 20 50 
     A612   41 52 54 
     A615   49 54 49 
     A618   4F CE 
     A61A   20 21 22     6516   	.BYT  $20,$21,$22,$23,$24,$27        	; read error
     A61D   23 24 27 
     A620   D2 45 41     6517   	.BYT  $d2,'EAD',$89
     A623   44 89 
     A625   52 83 20     6518   	.BYT  $52,$83,' TOO LARG',$c5      	; fil to large
     A628   54 4F 4F 
     A62B   20 4C 41 
     A62E   52 47 C5 
     A631   50 8B 06     6519   	.BYT  $50,$8b,6,' PRESEN',$d4       	; rec not present
     A634   20 50 52 
     A637   45 53 45 
     A63A   4E D4 
     A63C   51 CF 56     6520   	.BYT  $51,$cf,'VERFLOW '    		; overflow in record
     A63F   45 52 46 
     A642   4C 4F 57 
     A645   20 
     A646   49 4E 8B     6521   	.BYT  'IN',$8b
     A649   25 28 8A     6522   	.BYT  $25,$28,$8a,$89        		; write error
     A64C   89 
     A64D   26 8A 20     6523   	.BYT  $26,$8a,' PROTECT O',$ce     	; wrt protect on
     A650   50 52 4F 
     A653   54 45 43 
     A656   54 20 4F 
     A659   CE 
     A65A   29 88 20     6524   	.BYT  $29,$88,' ID',$85     		; dsk id mismatch
     A65D   49 44 85 
     A660   30 31 32     6525   	.BYT  $30,$31,$32,$33,$34    		; syntax error
     A663   33 34 
     A665   D3 59 4E     6526   	.BYT  $d3,'YNTAX',$89
     A668   54 41 58 
     A66B   89 
     A66C   60 8A 03     6527   	.BYT  $60,$8a,3,$84          		; wrt fil open
     A66F   84 
     A670   63 83 20     6528   	.BYT  $63,$83,' EXIST',$d3          	; file exist
     A673   45 58 49 
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 92-1
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A676   53 54 D3 
     A679   64 83 20     6529   	.BYT  $64,$83,' TYPE',$85   		; fil type mismatch
     A67C   54 59 50 
     A67F   45 85 
     A681   65 CE 4F     6530   	.BYT  $65,$ce,'O BLOC',$cb          	; no block
     A684   20 42 4C 
     A687   4F 43 CB 
     A68A   66 67 C9     6531   	.BYT  $66,$67,$c9,'LLEGAL TRACK'    	; illegal t & sector
     A68D   4C 4C 45 
     A690   47 41 4C 
     A693   20 54 52 
     A696   41 43 4B 
     A699   20 4F 52     6532   	.BYT  ' OR SECTO',$d2
     A69C   20 53 45 
     A69F   43 54 4F 
     A6A2   D2 
     A6A3   61 83 06     6533   	.BYT  $61,$83,6,$84          		; fil not open
     A6A6   84 
     A6A7   39 62 83     6534   	.BYT  $39,$62,$83,6,$87      		; file not found
     A6AA   06 87 
     A6AC   01 83 53     6535   	.BYT  1,$83,'S SCRATCHE',$c4         	; files scratched
     A6AF   20 53 43 
     A6B2   52 41 54 
     A6B5   43 48 45 
     A6B8   C4 
     A6B9   70 CE 4F     6536   	.BYT  $70,$ce,'O CHANNE',$cc        	; no channel
     A6BC   20 43 48 
     A6BF   41 4E 4E 
     A6C2   45 CC 
     A6C4   71 C4 49     6537   	.BYT  $71,$c4,'IR',$89       		; dir error
     A6C7   52 89 
     A6C9   72 88 20     6538   	.BYT  $72,$88,' FUL',$cc    		; disk full
     A6CC   46 55 4C 
     A6CF   CC 
     A6D0   73 C3 4F     6539   	.BYT  $73,$c3,'OPYRIGHT CBM DOS V10 158',$B1 ; dos messg
     A6D3   50 59 52 
     A6D6   49 47 48 
     A6D9   54 20 43 
     A6DC   42 4D 20 
     A6DF   44 4F 53 
     A6E2   20 56 31 
     A6E5   30 20 31 
     A6E8   35 38 B1 
     A6EB   74 C4 52     6540   	.BYT  $74,$c4,'RIVE',6,' READ',$d9   	; drv not rdy
     A6EE   49 56 45 
     A6F1   06 20 52 
     A6F4   45 41 44 
     A6F7   D9 
     A6F8   75 C6 4F     6541   	.BYT  $75,$c6,'ORMAT ERRO',$d2 		; format error
     A6FB   52 4D 41 
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 92-2
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A6FE   54 20 45 
     A701   52 52 4F 
     A704   D2 
     A705   76 C3 4F     6542   	.BYT  $76,$c3,'ONTROLLER ERRO',$d2	; controller error
     A708   4E 54 52 
     A70B   4F 4C 4C 
     A70E   45 52 20 
     A711   45 52 52 
     A714   4F D2 
     A716   77 D3 45     6543   	.BYT  $77,$d3,'ELECTED PARTITION ILLEGA',$cc
     A719   4C 45 43 
     A71C   54 45 44 
     A71F   20 50 41 
     A722   52 54 49 
     A725   54 49 4F 
     A728   4E 20 49 
     A72B   4C 4C 45 
     A72E   47 41 CC 
     A731   79 D3 4F     6544           .BYT  $79,$D3,'OFTWARE DAVID SIRACUSA. HARDWARE GREG BERLI',$ce
     A734   46 54 57 
     A737   41 52 45 
     A73A   20 44 41 
     A73D   56 49 44 
     A740   20 53 49 
     A743   52 41 43 
     A746   55 53 41 
     A749   2E 20 48 
     A74C   41 52 44 
     A74F   57 41 52 
     A752   45 20 47 
     A755   52 45 47 
     A758   20 42 45 
     A75B   52 4C 49 
     A75E   CE 
     A75F   7A C4 45     6545   	.BYTE $7a,$c4,'EDICATED TO MY WIFE LIS',$c1
     A762   44 49 43 
     A765   41 54 45 
     A768   44 20 54 
     A76B   4F 20 4D 
     A76E   59 20 57 
     A771   49 46 45 
     A774   20 4C 49 
     A777   53 C1 
                         6546   ;-error words---------------
     A779   09 C5 52     6547   	.BYT  9,$c5,'RRO',$d2        		; error
     A77C   52 4F D2 
     A77F   0A D7 52     6548   	.BYT  $a,$d7,'RIT',$c5       		; write
     A782   49 54 C5 
     A785   03 C6 49     6549   	.BYT  3,$c6,'IL',$c5         		; file
     A788   4C C5 
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 92-3
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A78A   04 CF 50     6550   	.BYT  4,$cf,'PE',$ce         		; open
     A78D   45 CE 
     A78F   05 CD 49     6551   	.BYT  5,$cd,'ISMATC',$c8     		; mismatch
     A792   53 4D 41 
     A795   54 43 C8 
     A798   06 CE 4F     6552   	.BYT  6,$ce,'O',$d4          		; not
     A79B   D4 
     A79C   07 C6 4F     6553   	.BYT  7,$c6,'OUN',$c4        		; found
     A79F   55 4E C4 
     A7A2   08 C4 49     6554   	.BYT  8,$c4,'IS',$cb         		; disk
     A7A5   53 CB 
     A7A7   0B D2 45     6555   	.BYT  $b,$d2,'ECOR',$c4      		; record
     A7AA   43 4F 52 
     A7AD   C4 
            =A7AE        6556   etend    =*
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 93
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A7AE                6558   jerror
     A7AE   48           6559   	pha     	; controller entry..
     A7AF   86 6C        6560   	stx  jobnum     ; accm=err#, x=job#
     A7B1   8A           6561           txa
     A7B2   0A           6562           asl  a
     A7B3   AA           6563           tax
     A7B4   B5 0B        6564           lda  hdrs,x     ; 4/12 recall trk,sec
     A7B6   85 4D        6565           sta  track
     A7B8   B5 0C        6566           lda  hdrs+1,x   ; 4/12
     A7BA   85 4E        6567           sta  sector
     A7BC   68           6568           pla
     A7BD   29 0F        6569           and  #$f        ; convert controller
     A7BF   F0 10        6570           beq  err1       ; errs to dos errs
                         6571   
     A7C1   C9 03        6572           cmp  #$3        ; no adam
     A7C3   F0 08        6573   	beq  1$
                         6574   
     A7C5   C9 0E        6575           cmp  #$e        ; check syntax error
     A7C7   F0 04        6576   	beq  1$
                         6577   
     A7C9   C9 0F        6578           cmp  #$f        ; check nodrive error
     A7CB   D0 06        6579           bne  err2
                         6580   
     A7CD   A9 74        6581   1$      lda  #nodriv
     A7CF   D0 08        6582           bne  err3       ; bra
                         6583   
     A7D1   A9 06        6584   err1    lda  #6         ; code=16-->14
     A7D3   09 20        6585   err2    ora  #$20
     A7D5   AA           6586           tax
     A7D6   CA           6587           dex
     A7D7   CA           6588           dex
     A7D8   8A           6589           txa
     A7D9   48           6590   err3    pha
     A7DA   AD 022A      6591           lda  cmdnum
U    A7DD   C9 00   "    6592           cmp  #val
     A7DF   D0 0F        6593           bne  err4
     A7E1   A9 FF        6594           lda  #$ff
     A7E3   8D 022A      6595           sta  cmdnum
     A7E6   68           6596           pla
     A7E7   20 A86D      6597           jsr  errmsg
     A7EA   20 8F03      6598           jsr  initdr     ; init for validate
     A7ED   4C A7F4      6599           jmp  cmder3
     A7F0   68           6600   err4    pla
     A7F1   20 A86D      6601   jcmder2 jsr  errmsg
     A7F4   20 8071      6602   cmder3  jsr  clrcb      ; clear cmdbuf
     A7F7   A9 00        6603           lda  #0
     A7F9   85 35        6604           sta  wbam       ; clear after error
     A7FB   20 81F1      6605           jsr  erron      ; set error led
     A7FE   20 9434      6606           jsr  freich     ; free internal channel
     A801   A9 00        6607           lda  #0         ; clear pointers
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 93-1
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A803   85 CD        6608           sta  buftab+cbptr
     A805   A6 4F        6609           ldx  tos
     A807   9A           6610           txs     	;  purge stack
     A808   A5 53        6611           lda  orgsa
     A80A   29 0F        6612           and  #$f
     A80C   85 52        6613           sta  sa
     A80E   C9 0F        6614           cmp  #$f
     A810   F0 29        6615           beq  err10
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 94
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A812   78           6617           sei
     A813   24 76        6618           bit  fsflag	; listn?
     A815   70 17        6619           bvs  lsnerr     ; listn error
                         6620   
     A817   30 0F        6621           bmi  tlkerr     ; talk error
                         6622   
     A819   A6 52        6623           ldx  sa
     A81B   B5 A8        6624           lda  lintab,x
     A81D   C9 FF        6625           cmp  #$ff
     A81F   F0 1A        6626           beq  err10
                         6627   
     A821   29 0F        6628           and  #$f
     A823   85 50        6629           sta  lindx
     A825   4C A831      6630           jmp  tlerr
                         6631   
     A828   20 9027      6632   tlkerr  jsr  fndrch     ; talker err recovery
     A82B   4C A831      6633           jmp  tlerr      ; finish
                         6634   
     A82E   20 9042      6635   lsnerr  jsr  fndwch     ; listn error recovery
     A831   20 905F      6636   tlerr   jsr  typfil
     A834   C9 04        6637           cmp  #reltyp
     A836   B0 03        6638           bcs  err10
                         6639   
     A838   20 919E      6640           jsr  frechn
U    A83B   4C 0000 "    6641   err10   jmp  jidle
                         6642   
     A83E   08           6643   hexdec  php
     A83F   78           6644   	sei
     A840   AA           6645   	tax     	; convert hex to bcd
     A841   A9 00        6646           lda  #0
     A843   F8           6647           sed
     A844   E0 00        6648   hex0    cpx  #0
     A846   F0 07        6649           beq  hex5
                         6650   
     A848   18           6651           clc
     A849   69 01        6652           adc  #1
     A84B   CA           6653           dex
     A84C   4C A844      6654           jmp  hex0
                         6655   
     A84F   D8           6656   hex5    cld
     A850   28           6657   	plp
     A851   AA           6658   bcddec  tax     	; cnvrt bcd to asci decm
     A852   4A           6659           lsr  a          ; rtn bcd in x and
     A853   4A           6660           lsr  a          ; put ascii in (temp)y
     A854   4A           6661           lsr  a
     A855   4A           6662           lsr  a
     A856   20 A85A      6663           jsr  bcd2
     A859   8A           6664           txa
     A85A   29 0F        6665   bcd2    and  #$f
     A85C   09 30        6666           ora  #$30
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 94-1
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A85E   91 CF        6667           sta  (cb+2),y
     A860   C8           6668           iny
     A861   60           6669           rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 95
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A862   20 81E5      6671   okerr   jsr  erroff     ; trnsfr err msg to
     A865   A9 00        6672           lda  #0         ; error buffer
     A867   A0 00        6673   errts0  ldy  #0
     A869   84 4D        6674           sty  track
     A86B   84 4E        6675           sty  sector
     A86D   A0 00        6676   errmsg  ldy  #0
     A86F   A2 D0        6677           ldx  #<errbuf
     A871   86 CF        6678           stx  cb+2
     A873   A2 02        6679           ldx  #>errbuf
     A875   86 D0        6680           stx  cb+3
     A877   20 A851      6681           jsr  bcddec     ; convert error #
     A87A   A9 2C        6682           lda  #',
     A87C   91 CF        6683           sta  (cb+2),y
     A87E   C8           6684           iny
     A87F   AD 02D0      6685           lda  errbuf
     A882   8D 0241      6686           sta  chndat+errchn
     A885   8A           6687           txa     	; error # in .x
     A886   20 A8AD      6688           jsr  ermove     ; move message
     A889   A9 2C        6689           lda  #',
     A88B   91 CF        6690           sta  (cb+2),y
     A88D   C8           6691           iny
     A88E   A5 4D        6692           lda  track
     A890   20 A83E      6693           jsr  hexdec     ; convert track #
     A893   A9 2C        6694           lda  #',
     A895   91 CF        6695           sta  (cb+2),y
     A897   C8           6696           iny
     A898   A5 4E        6697           lda  sector     ; convert sector #
     A89A   20 A83E      6698           jsr  hexdec
     A89D   88           6699           dey
     A89E   98           6700           tya
     A89F   18           6701           clc
     A8A0   69 D0        6702           adc  #<errbuf
     A8A2   8D 0248      6703           sta  lstchr+errchn
     A8A5   E6 CF        6704           inc  cb+2        ; set last char
     A8A7   A9 88        6705           lda  #rdytlk
     A8A9   8D 023A      6706           sta  chnrdy+errchn
     A8AC   60           6707           rts
                         6708   
     A8AD   AA           6709   ermove  tax     	; save err#
     A8AE   A5 55        6710           lda  r0         ; save r0,r0+1
     A8B0   48           6711           pha
     A8B1   A5 56        6712           lda  r0+1
     A8B3   48           6713           pha
     A8B4   A9 02        6714           lda  #<errtab   ; point to table
     A8B6   85 55        6715           sta  r0
     A8B8   A9 A6        6716           lda  #>errtab
     A8BA   85 56        6717           sta  r0+1
     A8BC   8A           6718           txa     	; get error #
     A8BD   A2 00        6719           ldx  #0         ; .x=0 for indirect
     A8BF   C1 55        6720   e10     cmp  (r0,x)     ; ?error # = table entry?
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 95-1
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A8C1   F0 21        6721           beq  e50        ; yes, send message
                         6722   
     A8C3   48           6723           pha     	; save error #
     A8C4   20 A91C      6724           jsr  eadv2      ; check & advance ptr
     A8C7   90 05        6725           bcc  e30        ; more #'s to check
                         6726   
     A8C9   20 A91C      6727   e20     jsr  eadv2      ; advance past this message
     A8CC   90 FB        6728           bcc  e20
                         6729   
     A8CE   A5 56        6730   e30     lda  r0+1       ; check ptr
     A8D0   C9 A7        6731           cmp  #>etend
     A8D2   90 08        6732           bcc  e40        ; <, continue
                         6733   
     A8D4   D0 0A        6734           bne  e45        ; >, quit
                         6735   
     A8D6   A9 AE        6736           lda  #<etend
     A8D8   C5 55        6737           cmp  r0
     A8DA   90 04        6738           bcc  e45        ; past end of table
                         6739   
     A8DC   68           6740   e40     pla     	; restor error #
     A8DD   4C A8BF      6741           jmp  e10        ; check next entry
                         6742   
     A8E0   68           6743   e45     pla     	; pop error #
     A8E1   4C A8F4      6744           jmp  e90        ; go quit
                         6745   
     A8E4   20 A90E      6746   e50     jsr  eadv1      ; # has been located
     A8E7   90 FB        6747           bcc  e50        ; advance past other #'s
                         6748   
     A8E9   20 A8FB      6749   e55     jsr  e60
     A8EC   20 A90E      6750           jsr  eadv1
     A8EF   90 F8        6751           bcc  e55
                         6752   
     A8F1   20 A8FB      6753           jsr  e60        ; check for token or last word
     A8F4   68           6754   e90     pla     	; all finished
     A8F5   85 56        6755           sta  r0+1       ; restore r0
     A8F7   68           6756           pla
     A8F8   85 55        6757           sta  r0
     A8FA   60           6758           rts
                         6759   
     A8FB   C9 20        6760   e60     cmp  #$20       ; (max token #)+1
     A8FD   B0 0B        6761           bcs  e70        ; not a token
                         6762   
     A8FF   AA           6763           tax
     A900   A9 20        6764           lda  #$20       ; implied leading space
     A902   91 CF        6765           sta  (cb+2),y
     A904   C8           6766           iny
     A905   8A           6767           txa     	; restore token #
     A906   20 A8AD      6768           jsr  ermove     ; add token word to message
     A909   60           6769           rts
                         6770   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 95-2
"erproc"   ERPROC.SRC

Error Addr  Code          Seq   Source statement

     A90A   91 CF        6771   e70     sta  (cb+2),y   ; put char in msg
     A90C   C8           6772           iny
     A90D   60           6773           rts
                         6774   
     A90E   E6 55        6775   eadv1   inc  r0         ; err advance/check
     A910   D0 02        6776           bne  ea10
                         6777   
     A912   E6 56        6778           inc  r0+1
     A914   A1 55        6779   ea10    lda  (r0,x)     ; get current entry
     A916   0A           6780           asl  a          ; .c=1 is end or beginning
     A917   A1 55        6781           lda  (r0,x)
     A919   29 7F        6782           and  #$7f       ; mask off bit7
     A91B   60           6783           rts
                         6784   
     A91C   20 A914      6785   eadv2   jsr  ea10       ; check table entry
     A91F   E6 55        6786           inc  r0
     A921   D0 02        6787           bne  ea20
                         6788   
     A923   E6 56        6789           inc  r0+1
     A925   60           6790   ea20    rts
                         6791   	.INCLUDE utlodr
                         6792           .messg "utlodr"
                         6793           .subttl "utlodr"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 96
"utlodr"   UTLODR.SRC

Error Addr  Code          Seq   Source statement

     A926   26 43 4F     6795   cbmfil	.byte '&COPYRIGHT CBM 86',$0D
     A929   50 59 52 
     A92C   49 47 48 
     A92F   54 20 43 
     A932   42 4D 20 
     A935   38 36 0D 
            =0012        6796   lenf=*-cbmfil
                         6797   
     A938                6798   cbmboot
     A938   20 AA0F      6799   	jsr  bootvector ; set/save vectors
     A93B   08           6800   	php
     A93C   58           6801   	cli
     A93D   A0 11        6802   	ldy  #lenf-1
     A93F   84 29        6803   	sty  cmdsiz
     A941   B9 A926      6804   1$	lda  cbmfil,y
     A944   99 0200      6805   	sta  cmdbuf,y	; transfer filename to cmd buffer
     A947   88           6806   	dey
     A948   10 F7        6807   	bpl  1$
                         6808   
     A94A   30 0A        6809   	bmi  utlodr	; bra
                         6810   
     A94C                6811   cbmbootrtn
     A94C   A6 4F        6812   	ldx  tos
     A94E   9A           6813   	txs
     A94F   20 BA95      6814   	jsr  resvectors	; restore vectors
     A952   78           6815   	sei
     A953   4C AFDE      6816   	jmp  diagrtn
                         6817   
     A956   20 84AE      6818   utlodr  jsr  autoi
     A959   A5 91        6819   	lda  psectorsiz
     A95B   C9 02        6820   	cmp  #sysiz
     A95D   D0 1D        6821   	bne  1$
                         6822   
     A95F   A9 01        6823           lda  #01
     A961   8D 0291      6824           sta  filtbl     ; set filename
     A964   20 81FD      6825           jsr  onedrv     ; set drv
     A967   AD 022F      6826           lda  f2cnt
     A96A   48           6827           pha     	; save file count for utility
     A96B   A9 01        6828           lda  #1
     A96D   8D 022F      6829           sta  f2cnt
     A970   A9 FF        6830           lda  #$ff       ; init firstbyte flag
     A972   85 55        6831           sta  r0         ; r0 is flag
     A974   20 82B9      6832           jsr  lookup     ; locate filename on disk
     A977   AD 0297      6833           lda  filtrk     ; check if found. err if not
     A97A   D0 05        6834           bne  utld00
                         6835   
     A97C   A9 39        6836   1$      lda  #nocfil
     A97E   20 807C      6837           jsr  cmderr
                         6838   
     A981   68           6839   utld00  pla
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 96-1
"utlodr"   UTLODR.SRC

Error Addr  Code          Seq   Source statement

     A982   8D 022F      6840           sta  f2cnt      ; restore file count
     A985   AD 0297      6841           lda  filtrk     ; init trk,sec for open
     A988   85 4D        6842           sta  track
     A98A   AD 029C      6843           lda  filsec
     A98D   85 4E        6844           sta  sector
     A98F   A9 03        6845           lda  #usrtyp    ; open sys type file(5)
     A991   20 93D1      6846           jsr  opntyp     ; open
     A994   A9 00        6847   utld10  lda  #$00       ; init checksum
     A996   85 56        6848           sta  r1         ; chksum resides in r1
     A998   20 A9F5      6849           jsr  gtabyt     ; fetch load adr lo
     A99B   85 57        6850           sta  r2
     A99D   20 AA07      6851           jsr  addsum     ; add into checksum
     A9A0   20 A9F5      6852           jsr  gtabyt     ; fetch load adr hi
     A9A3   85 58        6853           sta  r3
     A9A5   20 AA07      6854           jsr  addsum
     A9A8   A5 55        6855           lda  r0         ; first byte address?
     A9AA   F0 0A        6856           beq  utld20     ; br if not
                         6857   
     A9AC   A5 57        6858           lda  r2         ; sav this adr
     A9AE   48           6859           pha     	; lo first
     A9AF   A5 58        6860           lda  r3
     A9B1   48           6861           pha     	; hi next
     A9B2   A9 00        6862           lda  #$00       ; clear flag
     A9B4   85 55        6863           sta  r0         ; first byte flag
     A9B6   20 A9F5      6864   utld20  jsr  gtabyt     ; fetch data byte count
     A9B9   85 59        6865           sta  r4         ; save in r4
     A9BB   20 AA07      6866           jsr  addsum     ; add into checksum
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 97
"utlodr"   UTLODR.SRC

Error Addr  Code          Seq   Source statement

     A9BE   20 A9F5      6868   utld30  jsr  gtabyt     ; fetch data byt
     A9C1   A0 00        6869           ldy  #$00       ; init index
     A9C3   91 57        6870           sta  (r2),y     ; store byte
     A9C5   20 AA07      6871           jsr  addsum     ; add into checksum
     A9C8   A5 57        6872           lda  r2         ; pointer:=pointer+1
     A9CA   18           6873           clc
     A9CB   69 01        6874           adc  #$01
     A9CD   85 57        6875           sta  r2
     A9CF   90 02        6876           bcc  utld35
                         6877   
     A9D1   E6 58        6878           inc  r3         ; add in carry
     A9D3   C6 59        6879   utld35  dec  r4         ; update byte counter
     A9D5   D0 E7        6880           bne  utld30     ; if nonzero, continue
                         6881   
     A9D7   20 8876      6882           jsr  gibyte     ; get byte without chk for eoi
     A9DA   A5 54        6883           lda  data
     A9DC   C5 56        6884           cmp  r1         ; last byte was chksum
     A9DE   F0 08        6885           beq  utld50     ; ...everything ok
                         6886   
     A9E0   20 9D7C      6887           jsr  gethdr
     A9E3   A9 50        6888           lda  #norec     ; show record overflow
U    A9E5   20 0000 "    6889           jsr  cmder2     ; and leave to err exit
                         6890   
     A9E8   A5 51        6891   utld50  lda  eoiflg     ; check for eof
     A9EA   D0 A8        6892           bne  utld10     ; if nonzero, not done
                         6893   
     A9EC   68           6894           pla     	; xfer cntrl to
     A9ED   85 58        6895           sta  r3         ; 1st byte addr.
     A9EF   68           6896           pla
     A9F0   85 57        6897           sta  r2
     A9F2   6C 0057      6898           jmp  (r2)
                         6899   
     A9F5   20 8876      6900   gtabyt  jsr  gibyte     ; fetch a byte
     A9F8   A5 51        6901           lda  eoiflg     ; check if eof exists
     A9FA   D0 08        6902           bne  gtabye     ; ok if nonzero
     A9FC   20 9D7C      6903           jsr  gethdr
     A9FF   A9 51        6904           lda  #recovf    ; record size error
U    AA01   20 0000 "    6905           jsr  cmder2     ; error routine
     AA04   A5 54        6906   gtabye  lda  data
     AA06   60           6907           rts
                         6908   
     AA07   18           6909   addsum  clc
     AA08   65 56        6910           adc  r1         ; .a=.a+r1
     AA0A   69 00        6911           adc  #$00       ; .a=.a+carry
     AA0C   85 56        6912           sta  r1         ; save new checksum
     AA0E   60           6913           rts
                         6914   
     AA0F                6915   bootvector
     AA0F   20 BA7C      6916   	jsr  savectors	; save vectors
     AA12   A9 4C        6917   	lda  #<cbmbootrtn
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 97-1
"utlodr"   UTLODR.SRC

Error Addr  Code          Seq   Source statement

     AA14   8D 01BA      6918   	sta  vcmder2
     AA17   A9 A9        6919   	lda  #>cbmbootrtn
     AA19   8D 01BB      6920   	sta  vcmder2+1
     AA1C   A9 4C        6921   	lda  #<cbmbootrtn
     AA1E   8D 01AE      6922   	sta  verror	; save error vectors
     AA21   A9 A9        6923   	lda  #>cbmbootrtn
     AA23   8D 01AF      6924   	sta  verror+1
     AA26   60           6925   	rts
                         6926   	.INCLUDE utl
                         6927   	.messg "utl"
                         6928   	.subttl "utl"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 98
"utl"   UTL.SRC

Error Addr  Code          Seq   Source statement

                         6930   ;***************************
                         6931   ;**                       **
                         6932   ;**     1573  UTILITY     **
                         6933   ;**                       **
                         6934   ;** * * * * * * * * * * * **
                         6935   ;** U0 n B  = slow/fast	  **
                         6936   ;**           serial	  **
                         6937   ;** U0 n S  = int. dos    **
                         6938   ;** U0 n R  = retries     **
                         6939   ;** U0 n T  = signature   **
                         6940   ;** U0 n V  = verify	  **
                         6941   ;** U0 n #  = device 	  **
                         6942   ;** U0 n I  = IEEE SET    **
                         6943   ;** U0 n M  = memory r/w  **
                         6944   ;**                       **
                         6945   ;**     n = ">" ascii     **
                         6946   ;**                       **
                         6947   ;***************************
                         6948   
     AA27   AD 0204      6949   cmdsec  lda  cmdbuf+4
     AA2A   85 2E        6950           sta  secinc
     AA2C   60           6951   	rts
                         6952   
     AA2D   AD 0204      6953   cmdret  lda  cmdbuf+4
     AA30   85 30        6954           sta  revcnt
     AA32   60           6955   	rts
                         6956   
     AA33   AD 0204      6957   ieees	lda  cmdbuf+4
     AA36   85 9D        6958   	sta  sieeeset
     AA38   60           6959   	rts
                         6960   
     AA39   4C AB1D      6961   sign	jmp  signature	; finish up there
                         6962   
     AA3C   78           6963   chgutl  sei
     AA3D   A6 29        6964   	ldx  cmdsiz     ; chk cmd size
     AA3F   E0 04        6965           cpx  #4
     AA41   90 40        6966   	bcc  utlbad     ; br, error no parameters
                         6967   
     AA43   AD 0203      6968   	lda  cmdbuf+3
     AA46   C9 49        6969           cmp  #'I	; IEEE SET?
     AA48   F0 E9        6970           beq  ieees
                         6971   
     AA4A   AD 0203      6972   	lda  cmdbuf+3
     AA4D   C9 42        6973           cmp  #'B	; bus slow fast change?
     AA4F   F0 37        6974           beq  buss
                         6975   
     AA51   C9 53        6976           cmp  #'S        ; sector interleave ?
     AA53   F0 D2        6977           beq  cmdsec
                         6978   
     AA55   C9 52        6979           cmp  #'R        ; retry
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 98-1
"utl"   UTL.SRC

Error Addr  Code          Seq   Source statement

     AA57   F0 D4        6980           beq  cmdret
                         6981   
     AA59   C9 54        6982           cmp  #'T	; test ROM
     AA5B   F0 DC        6983           beq  sign
                         6984   
     AA5D   C9 4D        6985           cmp  #'M	; m-r/w
     AA5F   F0 47        6986           beq  memb
                         6987   
     AA61   C9 56        6988   	cmp  #'V	; chk for verify
     AA63   F0 35        6989   	beq  verif
                         6990   
     AA65   A8           6991   	tay
     AA66   C0 04        6992   	cpy  #4
     AA68   90 19        6993   	bcc  utlbad
                         6994   
     AA6A   C0 1F        6995   	cpy  #31
     AA6C   B0 15        6996   	bcs  utlbad
                         6997   
     AA6E   A9 40        6998   	lda  #$40	; change device #
     AA70   85 78        6999   	sta  tlkadr	; clear old
                         7000   
     AA72   A9 20        7001   	lda  #$20
     AA74   85 77        7002   	sta  lsnadr	; *
                         7003   
     AA76   98           7004   	tya
     AA77   18           7005   	clc
     AA78   65 78        7006   	adc  tlkadr
     AA7A   85 78        7007   	sta  tlkadr	; new
     AA7C   98           7008   	tya
     AA7D   18           7009   	clc
     AA7E   65 77        7010   	adc  lsnadr
     AA80   85 77        7011   	sta  lsnadr	; new
     AA82   60           7012   	rts
                         7013   
     AA83   A9 31        7014   utlbad  lda  #badcmd
     AA85   4C 807C      7015   	jmp  cmderr
                         7016   
     AA88   A5 76        7017   buss 	lda  fsflag
     AA8A   29 F7        7018   	and  #all-bit3
     AA8C   85 76        7019   	sta  fsflag	; clear it
     AA8E   20 AB09      7020   	jsr  bitit	; get bit
     AA91   4A           7021   	lsr  a
     AA92   4A           7022   	lsr  a
     AA93   4A           7023   	lsr  a
     AA94   4A           7024   	lsr  a		; shift to appropiate place
     AA95   05 76        7025   	ora  fsflag
     AA97   85 76        7026   	sta  fsflag
     AA99   60           7027   	rts
                         7028   
     AA9A   A5 8D        7029   verif	lda  iobyte
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 98-2
"utl"   UTL.SRC

Error Addr  Code          Seq   Source statement

     AA9C   29 7F        7030   	and  #all-bit7
     AA9E   85 8D        7031   	sta  iobyte	; clear it
     AAA0   20 AB09      7032   	jsr  bitit	; get bit
     AAA3   05 8D        7033   	ora  iobyte
     AAA5   85 8D        7034   	sta  iobyte
     AAA7   60           7035   	rts
                         7036   
     AAA8                7037   memb
                         7038   ; +3      +4      +5            +6
                         7039   ; cmd     r/w   high-address   pages
     AAA8   78           7040   	sei
     AAA9   A5 76        7041   	lda  fsflag
     AAAB   29 FB        7042   	and  #all-clkin	; set clk
     AAAD   85 76        7043   	sta  fsflag
                         7044   
     AAAF   A0 00        7045   	ldy  #0
     AAB1   84 46        7046   	sty  ip
     AAB3   AD 0205      7047   	lda  cmdbuf+5
     AAB6   85 47        7048   	sta  ip+1
                         7049   
     AAB8   AD 0204      7050   	lda  cmdbuf+4	; what is it?
     AABB   C9 57        7051   	cmp  #'W	; write?
     AABD   F0 18        7052   	beq  2$
                         7053   
     AABF   C9 52        7054   	cmp  #'R	; read?
     AAC1   D0 3D        7055   	bne  5$
                         7056   
     AAC3   20 ACD4      7057   	jsr  spout	; output
     AAC6   B1 46        7058   1$	lda  (ip),y
     AAC8   20 BF86      7059   	jsr  hskrd	; handshake it
     AACB   C8           7060   	iny
     AACC   D0 F8        7061   	bne  1$
                         7062   
     AACE   E6 47        7063   	inc  ip+1
                         7064   
     AAD0   CE 0206      7065   	dec  cmdbuf+6	; dec pages
     AAD3   D0 F1        7066   	bne  1$
                         7067   
     AAD5   F0 26        7068   	beq  4$		; bra
                         7069   	
     AAD7   AD 4001      7070   2$	lda  pb
     AADA   49 08        7071   	eor  #clkout	; toggle state of clk
     AADC   2C 400D      7072   	bit  icr	; clear pending
     AADF   8D 4001      7073   	sta  pb
     AAE2   A9 08        7074   	lda  #8
     AAE4   2C 4001      7075   3$	bit  pb
     AAE7   30 1A        7076   	bmi  6$		; attn?
                         7077   	
     AAE9   2C 400D      7078   	bit  icr 	; fast byte?
     AAEC   F0 F6        7079   	beq  3$
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 98-3
"utl"   UTL.SRC

Error Addr  Code          Seq   Source statement

                         7080   
     AAEE   AD 400C      7081   	lda  sdr	; get data
     AAF1   91 46        7082   	sta  (ip),y
     AAF3   C8           7083   	iny
     AAF4   D0 E1        7084   	bne  2$
                         7085   
     AAF6   E6 47        7086   	inc  ip+1
                         7087   
     AAF8   CE 0206      7088   	dec  cmdbuf+6
     AAFB   D0 DA        7089   	bne  2$
                         7090   	
     AAFD   4C 804C      7091   4$	jmp  endcmd
                         7092   
     AB00   4C AA83      7093   5$	jmp  utlbad	; bad
                         7094   
     AB03   20 AD15      7095   6$	jsr  tstatn
     AB06   4C AAE4      7096   	jmp  3$
                         7097   
     AB09   AD 0204      7098   bitit	lda  cmdbuf+4	; which ?
     AB0C   C9 31        7099   	cmp  #'1
     AB0E   F0 07        7100   	beq  1$
                         7101   
     AB10   C9 30        7102   	cmp  #'0
     AB12   F0 03        7103   	beq  1$
                         7104   
     AB14   4C AA83      7105   	jmp  utlbad	; bad
                         7106   
     AB17   29 01        7107   1$	and  #bit0	; leave bit 0
     AB19   18           7108   	clc
     AB1A   6A           7109   	ror  a		; rotate bit 0 to bit 7
     AB1B   6A           7110   	ror  a
     AB1C   60           7111   	rts
                         7112   	.INCLUDE signature
                         7113   	.messg "signature"
                         7114   	.subttl "signature"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 99
"signature"   SIGNATURE.SRC

Error Addr  Code          Seq   Source statement

                         7116   ;   SIGNATURE ANALYSIS
                         7117   ;   POLYNOMIAL:   X^16 + X^12 + X^5 + 1
                         7118   ;   INITIALIZED STATE: FFFFh
                         7119   
     AB1D                7120   signature
     AB1D   08           7121   	php
     AB1E   78           7122   	sei
     AB1F   A5 02        7123   	lda  zpvar
     AB21   48           7124   	pha
     AB22   A5 03        7125   	lda  zpvar+1
     AB24   48           7126   	pha
     AB25   A5 04        7127   	lda  zpvar+2
     AB27   48           7128   	pha
     AB28   A5 05        7129   	lda  zpvar+3
     AB2A   48           7130   	pha
     AB2B   A5 06        7131   	lda  zpvar+4
     AB2D   48           7132   	pha
     AB2E   A5 07        7133   	lda  zpvar+5
     AB30   48           7134   	pha
     AB31   A5 08        7135   	lda  zpvar+6
     AB33   48           7136   	pha
     AB34   A5 09        7137   	lda  zpvar+7
     AB36   48           7138   	pha
     AB37   A5 0A        7139   	lda  zpvar+8
     AB39   48           7140   	pha
                         7141   
     AB3A   A9 FF        7142   	lda  #$ff
     AB3C   85 07        7143   	sta  zpvar+5    ; sig_lo
     AB3E   85 08        7144   	sta  zpvar+6    ; sig_hi
     AB40   A9 00        7145   	lda  #<signature_lo
     AB42   85 09        7146   	sta  zpvar+7
     AB44   A9 80        7147   	lda  #>signature_lo
     AB46   85 0A        7148   	sta  zpvar+8
                         7149   
     AB48   A0 02        7150   	ldy  #2
     AB4A   B1 09        7151   1$      lda  (zpvar+7),y
     AB4C   85 03        7152   	sta  zpvar+1    ; msb
     AB4E   AA           7153   	tax
     AB4F   C8           7154   	iny
     AB50   B1 09        7155   	lda  (zpvar+7),y
     AB52   85 02        7156   	sta  zpvar      ; lsb
                         7157   
     AB54   8A           7158   	txa
     AB55   A2 10        7159   	ldx  #16
     AB57   85 04        7160   2$      sta  zpvar+2
     AB59   18           7161   	clc
     AB5A   26 02        7162   	rol  zpvar
     AB5C   26 03        7163   	rol  zpvar+1
     AB5E   A9 00        7164   	lda  #0
     AB60   85 05        7165   	sta  zpvar+3
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 99-1
"signature"   SIGNATURE.SRC

Error Addr  Code          Seq   Source statement

     AB62   85 06        7166   	sta  zpvar+4
                         7167   
     AB64   24 04        7168   	bit  zpvar+2
     AB66   10 08        7169   	bpl  3$
                         7170   
     AB68   A9 21        7171   	lda  #$21
     AB6A   85 05        7172   	sta  zpvar+3
     AB6C   A9 10        7173   	lda  #$10
     AB6E   85 06        7174   	sta  zpvar+4
     AB70   24 08        7175   3$      bit  zpvar+6
     AB72   10 0C        7176   	bpl  4$
                         7177   
     AB74   A5 05        7178   	lda  zpvar+3
     AB76   49 21        7179   	eor  #$21
     AB78   85 05        7180   	sta  zpvar+3
     AB7A   A5 06        7181   	lda  zpvar+4
     AB7C   49 10        7182   	eor  #$10
     AB7E   85 06        7183   	sta  zpvar+4
     AB80   18           7184   4$      clc
     AB81   26 07        7185   	rol  zpvar+5
     AB83   26 08        7186   	rol  zpvar+6
     AB85   A5 07        7187   	lda  zpvar+5
     AB87   45 05        7188   	eor  zpvar+3
     AB89   85 07        7189   	sta  zpvar+5
     AB8B   A5 08        7190   	lda  zpvar+6
     AB8D   45 06        7191   	eor  zpvar+4
     AB8F   85 08        7192   	sta  zpvar+6
     AB91   A5 03        7193   	lda  zpvar+1
     AB93   CA           7194   	dex
     AB94   D0 C1        7195   	bne  2$
                         7196   
     AB96   C8           7197   	iny
     AB97   D0 B1        7198   	bne  1$
                         7199   
     AB99   E6 0A        7200   	inc  zpvar+8
     AB9B   D0 AD        7201   	bne  1$
                         7202   
     AB9D   A4 07        7203   	ldy  zpvar+5
     AB9F   A6 08        7204   	ldx  zpvar+6
                         7205   
     ABA1   68           7206   	pla
     ABA2   85 0A        7207   	sta  zpvar+8
     ABA4   68           7208   	pla
     ABA5   85 09        7209   	sta  zpvar+7
     ABA7   68           7210   	pla
     ABA8   85 08        7211   	sta  zpvar+6
     ABAA   68           7212   	pla
     ABAB   85 07        7213   	sta  zpvar+5
     ABAD   68           7214   	pla
     ABAE   85 06        7215   	sta  zpvar+4
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 99-2
"signature"   SIGNATURE.SRC

Error Addr  Code          Seq   Source statement

     ABB0   68           7216   	pla
     ABB1   85 05        7217   	sta  zpvar+3
     ABB3   68           7218   	pla
     ABB4   85 04        7219   	sta  zpvar+2
     ABB6   68           7220   	pla
     ABB7   85 03        7221   	sta  zpvar+1
     ABB9   68           7222   	pla
     ABBA   85 02        7223   	sta  zpvar
                         7224   
     ABBC   CC 8000      7225   	cpy  signature_lo
     ABBF   D0 07        7226   	bne  5$
                         7227   
     ABC1   EC 8001      7228   	cpx  signature_hi
     ABC4   D0 02        7229   	bne  5$
                         7230   
     ABC6   28           7231   	plp
     ABC7   60           7232   	rts
                         7233   
                         7234   
     ABC8   A2 03        7235   5$      ldx  #3         ; error
     ABCA   86 40        7236   	stx  temp
     ABCC   4C AEF5      7237   	jmp  perr       ; later gator...
                         7238   	.INCLUDE sieee
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 100
"signature"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

                         7240   	.messg "sieee"
                         7241   	.subttl "sieee"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 101
"sieee"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

     ABCF   78           7243   atnsrv  sei
     ABD0   A5 9D        7244   	lda  sieeeset
     ABD2   85 9C        7245   	sta  sieeetim   ; init counter
     ABD4   A5 76        7246   	lda  fsflag
     ABD6   29 3E        7247   	and  #all-bit7-bit6-bit0
     ABD8   85 76        7248   	sta  fsflag     ; clear serial flags (bit7=talk,bit6=listen,
                         7249   			;                     bit0=atn pending)
                         7250   
     ABDA   A6 4F        7251   	ldx  tos        ; reset stack
     ABDC   9A           7252   	txs
     ABDD   20 ACBB      7253   	jsr  spinp      ; serial input
                         7254   
     ABE0   A9 80        7255   	lda  #$80       ; set atn mode flag for acpt routine
     ABE2   85 51        7256   	sta  eoiflg     ; reset eoi flag to non-eoi state
                         7257   	
     ABE4   A5 76        7258   	lda  fsflag
     ABE6   09 02        7259   	ora  #bit1
     ABE8   85 76        7260   	sta  fsflag     ; atnmod
                         7261   
     ABEA   20 AD03      7262   	jsr  clkhi
     ABED   20 ACF1      7263   	jsr  datlow     ; set data line low as response
                         7264   
     ABF0   AD 4001      7265   	lda  pb         ; set atn ack to release data line
     ABF3   29 EF        7266   	and  #all-atna
     ABF5   8D 4001      7267   	sta  pb
                         7268   
     ABF8   AD 4001      7269   1$      lda  pb         ; test atn still here
     ABFB   10 5D        7270   	bpl  a2         ; gone !
                         7271   
     ABFD   29 04        7272   	and  #clkin     ; clock still low
     ABFF   D0 F7        7273   	bne  1$
                         7274   
     AC01   20 AE42      7275   a3      jsr  acptr      ; get a command byte
                         7276   
     AC04   C9 3F        7277   	cmp  #unlsn
     AC06   D0 09        7278   	bne  a4
                         7279   
     AC08   A5 76        7280   	lda  fsflag     ; clr fast host flag & listen flag
     AC0A   29 9F        7281   	and  #all-bit5-bit6
     AC0C   85 76        7282   	sta  fsflag
     AC0E   4C AC1B      7283   	jmp  a6
                         7284   
     AC11   C9 5F        7285   a4      cmp  #untlk
     AC13   D0 09        7286   	bne  a5
                         7287   
     AC15   A5 76        7288   	lda  fsflag     ; clr fast host flag & talk flag
     AC17   29 5F        7289   	and  #all-bit5-bit7
     AC19   85 76        7290   	sta  fsflag
                         7291   
     AC1B   4C AC96      7292   a6      jmp  a9         ; jmp
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 101-1
"sieee"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

                         7293   
     AC1E   C5 78        7294   a5      cmp  tlkadr     ; our talk address?
     AC20   D0 0A        7295   	bne  a7         ; nope
                         7296   
     AC22   A5 76        7297   	lda  fsflag
     AC24   09 80        7298   	ora  #bit7      ; set talk flag
     AC26   29 BF        7299   	and  #all-bit6  ; clear listen flag
     AC28   85 76        7300   	sta  fsflag
     AC2A   D0 29        7301   	bne  a8         ; bra
                         7302   
     AC2C   C5 77        7303   a7      cmp  lsnadr     ; our listen address?
     AC2E   D0 0A        7304   	bne  a10        ; nope
                         7305   
     AC30   A5 76        7306   	lda  fsflag
     AC32   09 40        7307   	ora  #bit6      ; set talk flag
     AC34   29 7F        7308   	and  #all-bit7  ; clear talk flag
     AC36   85 76        7309   	sta  fsflag
     AC38   D0 1B        7310   	bne  a8         ; bra
                         7311   
     AC3A   AA           7312   a10     tax             ; test if sa
     AC3B   29 60        7313   	and  #$60
     AC3D   C9 60        7314   	cmp  #$60       ; sa = $60 + n
     AC3F   D0 50        7315   	bne  a11        ; did not get a valid command
                         7316   
     AC41   8A           7317   	txa             ; a sa for me
     AC42   85 53        7318   	sta  orgsa
     AC44   29 0F        7319   	and  #$0f       ; strip junk
     AC46   85 52        7320   	sta  sa
                         7321   
     AC48   A5 53        7322   	lda  orgsa      ; test if close
     AC4A   29 F0        7323   	and  #$f0
     AC4C   C9 E0        7324   	cmp  #$e0
     AC4E   D0 46        7325   	bne  a9         ; no
                         7326   
     AC50   58           7327   	cli
     AC51   20 995C      7328   	jsr  close      ; close the file
     AC54   78           7329   	sei
                         7330   
                         7331   ;warning:::close doesn't return in time for a9
                         7332   
     AC55   2C 4001      7333   a8      bit  pb         ; test atn still here
     AC58   30 A7        7334   	bmi  a3
                         7335   
                         7336   ;atn gone , do what we where told to do
                         7337   
     AC5A   A5 76        7338   a2      lda  fsflag
     AC5C   29 FD        7339   	and  #all-bit1
     AC5E   85 76        7340   	sta  fsflag     ; clear atn mode
                         7341   
     AC60   AD 4001      7342   	lda  pb         ; atn gone, release atn ack
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 101-2
"sieee"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

     AC63   09 10        7343   	ora  #atna
     AC65   8D 4001      7344   	sta  pb
                         7345   
     AC68   24 76        7346   	bit  fsflag     ; listen ?
     AC6A   50 0F        7347   	bvc  a12
                         7348   
     AC6C   A9 20        7349   	lda  #bit5
     AC6E   24 76        7350   	bit  fsflag     ; fast ?
     AC70   F0 03        7351   	beq  a14
                         7352   
     AC72   20 AC9D      7353   	jsr  drq        ; device request fast
                         7354   
U    AC75   20 0000 "    7355   a14     jsr  jlisten
     AC78   4C AEE4      7356   	jmp  xidle
                         7357   
     AC7B   24 76        7358   a12     bit  fsflag     ; talk?
     AC7D   10 0F        7359   	bpl  a13
                         7360   
     AC7F   20 ACE8      7361   	jsr  dathi      ; release data line
     AC82   20 ACFA      7362   	jsr  clklo
                         7363   
     AC85   20 AD2F      7364   	jsr  delay40    ; slow down for plus4 series
U    AC88   20 0000 "    7365   	jsr  jtalk
     AC8B   20 AD2F      7366   	jsr  delay40    ; slow down for plus4 series
                         7367   
     AC8E   4C AEDF      7368   a13     jmp  ilerr      ; release all lines and go to idle
                         7369   
                         7370   ;fix so (device not present) errors reported
                         7371   
     AC91                7372   a11
     AC91   A9 00        7373   	lda  #0
     AC93   8D 4001      7374   	sta  pb         ; kill all
                         7375   
     AC96   2C 4001      7376   a9      bit  pb
     AC99   10 BF        7377   	bpl  a2         ; exit out same way after atn done
                         7378   
     AC9B   30 F9        7379   	bmi  a9         ; bra
                         7380   
                         7381   
     AC9D   20 AD15      7382   drq     jsr  tstatn     ; does the host want us ?
     ACA0   20 AD0C      7383   	jsr  debnc
     ACA3   29 04        7384   	and  #clkin
     ACA5   D0 F6        7385   	bne  drq        ; wait for clk hi
                         7386   
     ACA7   20 ACD4      7387   	jsr  spout      ; output
                         7388   
     ACAA   A9 00        7389   	lda  #0
     ACAC   8D 400C      7390   	sta  sdr        ; send zero
                         7391   
     ACAF   A9 08        7392   fs_wait lda  #8
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 101-3
"sieee"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

     ACB1   2C 400D      7393   1$      bit  icr        ; wait for byte to shift out
     ACB4   F0 FB        7394   	beq  1$
                         7395   
     ACB6   EA EA EA     7396   	.byte $ea, $ea, $ea, $ea, $ea   ; placeholder
     ACB9   EA EA 
                         7397   
     ACBB   08           7398   spinp   php             ; save uP status
     ACBC   78           7399   	sei
     ACBD   AD 400E      7400   	lda  cra        ; turn 8520 in
     ACC0   29 BF        7401   	and  #%10111111 ; serial port input
U    ACC2   20 0000 "    7402   	jsr  spin_patch ; sta cra
     ACC5   AD 4001      7403   	lda  pb         ; turn drvr in
     ACC8   29 DF        7404   	and  #all-fsdir
     ACCA   8D 4001      7405   	sta  pb
     ACCD   28           7406   	plp
     ACCE   60           7407   	rts
                         7408   
     ACCF   EA EA EA     7409   	.byte $ea, $ea, $ea, $ea, $ea   ; placeholder
     ACD2   EA EA 
                         7410   
     ACD4   08           7411   spout   php             ; save uP status
     ACD5   78           7412   	sei
     ACD6   AD 4001      7413   	lda  pb
     ACD9   09 20        7414   	ora  #fsdir
     ACDB   8D 4001      7415   	sta  pb         ; turn drvr out
     ACDE   AD 400E      7416   	lda  cra        ; turn 6526 out
     ACE1   09 40        7417   	ora  #%01000000
U    ACE3   20 0000 "    7418   	jsr  spout_patch ; sta cra
     ACE6   28           7419   	plp
     ACE7   60           7420   	rts
                         7421   
                         7422   
                         7423   
     ACE8   AD 4001      7424   dathi   lda  pb         ; set data out hi
     ACEB   29 FD        7425   	and  #all-datout
     ACED   8D 4001      7426   	sta  pb
     ACF0   60           7427   	rts
                         7428   
                         7429   
                         7430   
     ACF1   AD 4001      7431   datlow  lda  pb         ; set data out low
     ACF4   09 02        7432   	ora  #datout
     ACF6   8D 4001      7433   	sta  pb
     ACF9   60           7434   	rts
                         7435   
                         7436   
                         7437   
     ACFA   AD 4001      7438   clklo   lda  pb         ; set clk out low
     ACFD   09 08        7439   	ora  #clkout
     ACFF   8D 4001      7440   	sta  pb
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 101-4
"sieee"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

     AD02   60           7441   	rts
                         7442   
                         7443   
                         7444   
     AD03   AD 4001      7445   clkhi   lda  pb         ; set clk out high
     AD06   29 F7        7446   	and  #$ff-clkout
     AD08   8D 4001      7447   	sta  pb
     AD0B   60           7448   	rts
                         7449   
                         7450   
                         7451   
     AD0C   AD 4001      7452   debnc   lda  pb         ; debounce port
     AD0F   CD 4001      7453   	cmp  pb
     AD12   D0 F8        7454   	bne  debnc
                         7455   
     AD14   60           7456   	rts
                         7457   
                         7458   
                         7459   
     AD15   A9 02        7460   tstatn  lda  #bit1
     AD17   24 76        7461   	bit  fsflag     ; test if in atn mode
     AD19   F0 06        7462   	beq  1$         ; no
                         7463   
     AD1B   AD 4001      7464   	lda  pb         ; in atnmod
     AD1E   10 0C        7465   	bpl  2$         ; atn gone,do what we are told to do
                         7466   
     AD20   60           7467   3$      rts             ; still in atn  mode
                         7468   
     AD21   AD 4001      7469   1$      lda  pb         ; not atnmode
     AD24   10 FA        7470   	bpl  3$         ; no atn present
                         7471   
     AD26   2C 400D      7472   	bit  icr        ; clear atn
U    AD29   4C 0000 "    7473   	jmp  jatnsrv    ; do atn command
                         7474   
     AD2C   4C AC5A      7475   2$      jmp  a2
                         7476   
                         7477   
                         7478   
     AD2F   8A           7479   delay40 txa             ; only affect .a
     AD30   A2 0C        7480   	ldx  #$0c       ; insert 40us of delay with this routine
     AD32   D0 03        7481   	bne  delay16+3
                         7482   
     AD34   8A           7483   delay16 txa             ; only affect .a
     AD35   A2 03        7484   	ldx  #3         ; insert 16us of delay with this routine
     AD37   CA           7485   1$      dex
     AD38   D0 FD        7486   	bne  1$
                         7487   
     AD3A   AA           7488   	tax
     AD3B   60           7489   	rts
                         7490   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 101-5
"sieee"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

                         7491   
                         7492   
     AD3C   AD 0202      7493   nnmi    lda  cmdbuf+2   ; new nmi routine check for
     AD3F   C9 2D        7494   	cmp  #'-'
     AD41   F0 05        7495   	beq  1$         ; if ui- then no delay
                         7496   
     AD43   38           7497   	sec
     AD44   E9 2B        7498   	sbc  #'+'
     AD46   D0 11        7499   	bne  2$         ; if not ui+ then must be a real ui command
                         7500   
     AD48   29 02        7501   1$      and  #bit1
     AD4A   0A           7502   	asl  a
     AD4B   0A           7503   	asl  a
     AD4C   0A           7504   	asl  a
     AD4D   85 38        7505   	sta  tmp
     AD4F   78           7506   	sei
     AD50   A5 76        7507   	lda  fsflag
     AD52   29 EF        7508   	and  #all-bit4
     AD54   05 38        7509   	ora  tmp
     AD56   85 76        7510   	sta  fsflag     ; set/clr slow flag
     AD58   60           7511   	rts
                         7512   
U    AD59   4C 0000 "    7513   2$      jmp  jnmi       ; doit
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 102
"sieee.sertalk1.src"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

                         7515   	.subttl "sieee.sertalk1.src"
                         7516   
     AD5C   78           7517   talk    sei             ; find if open channel
     AD5D   20 9027      7518   	jsr  fndrch
     AD60   B0 07        7519   	bcs  1$         ; no one home
                         7520   
     AD62   A6 50        7521   2$      ldx  lindx
     AD64   BD 0234      7522   	lda  chnrdy,x
     AD67   30 01        7523   	bmi  3$
                         7524   
     AD69   60           7525   1$      rts
                         7526   
                         7527   ;  code added to correct verify error
                         7528   
     AD6A   20 AD15      7529   3$      jsr  tstatn     ; test for atn
     AD6D   20 AD0C      7530   	jsr  debnc      ; debounce
     AD70   29 01        7531   	and  #datin
     AD72   08           7532   	php
     AD73   20 AD03      7533   	jsr  clkhi      ; set clk hi
     AD76   28           7534   	plp             ; see if verify error...
     AD77   F0 13        7535   	beq  4$         ; br,  yes...data line hi, eoi !!!!
                         7536   
     AD79   20 AD15      7537   5$      jsr  tstatn     ; test for atn
     AD7C   20 AD0C      7538   	jsr  debnc
     AD7F   29 01        7539   	and  #datin
     AD81   D0 F6        7540   	bne  5$         ; wait for data high
                         7541   
     AD83   A6 50        7542   	ldx  lindx      ; prepare to send eoi if needed
     AD85   BD 0234      7543   	lda  chnrdy,x
     AD88   29 08        7544   	and  #eoi
     AD8A   D0 14        7545   	bne  7$         ; no eoi
                         7546   
     AD8C   20 AD15      7547   4$      jsr  tstatn     ; test for atn
     AD8F   20 AD0C      7548   	jsr  debnc      ; debounce
     AD92   29 01        7549   	and  #datin     ; test if data line is low
     AD94   D0 F6        7550   	bne  4$         ; yes, wait till hi
                         7551   
     AD96   20 AD15      7552   6$      jsr  tstatn     ; test for atn
     AD99   20 AD0C      7553   	jsr  debnc      ; debounce
     AD9C   29 01        7554   	and  #datin
     AD9E   F0 F6        7555   	beq  6$
                         7556   
     ADA0   20 ACFA      7557   7$      jsr  clklo      ; set clock low
     ADA3   20 AD15      7558   	jsr  tstatn     ; chk atn line
     ADA6   20 AD0C      7559   	jsr  debnc      ; debounce
     ADA9   29 01        7560   	and  #datin
     ADAB   D0 F3        7561   	bne  7$
                         7562   
                         7563   ;**********  fast serial routines  **********
                         7564   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 102-1
"sieee.sertalk1.src"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

     ADAD   A9 20        7565   	lda  #bit5
     ADAF   24 76        7566   	bit  fsflag     ; fast or slow ?
     ADB1   F0 34        7567   	beq  10$
                         7568   
     ADB3   AD 4001      7569   	lda  pb         ; fast serial output
     ADB6   09 20        7570   	ora  #fsdir
     ADB8   8D 4001      7571   	sta  pb         ; turn drvr out
     ADBB   AD 400E      7572   	lda  cra        ; turn 6526 out
     ADBE   09 40        7573   	ora  #%01000000
     ADC0   8D 400E      7574   	sta  cra
     ADC3   2C 400D      7575   	bit  icr
     ADC6   A6 50        7576   	ldx  lindx
     ADC8   BD 023B      7577   	lda  chndat,x   ; get data
     ADCB   8D 400C      7578   	sta  sdr        ; send it
                         7579   
     ADCE   A9 08        7580   	lda  #8
     ADD0   2C 400D      7581   8$      bit  icr        ; wait for byte ready
     ADD3   F0 FB        7582   	beq  8$
                         7583   
     ADD5   AD 400E      7584   	lda  cra
     ADD8   29 BF        7585   	and  #%10111111 ; release the data bus
     ADDA   8D 400E      7586   	sta  cra        ; must go input
     ADDD   AD 4001      7587   	lda  pb
     ADE0   29 DF        7588   	and  #all-fsdir ; turn drvr in
     ADE2   8D 4001      7589   	sta  pb
     ADE5   D0 43        7590   	bne  9$         ; wait for data accepted
                         7591   
                         7592   ;**********  end fast serial routines  **********
                         7593   
     ADE7                7594   10$
     ADE7   A9 08        7595   	lda  #8         ; set up bit counter
     ADE9   85 66        7596   	sta  cont
                         7597   
     ADEB                7598   11$
     ADEB   20 AD0C      7599   	jsr  debnc      ; let port settle
     ADEE   29 01        7600   	and  #datin     ; test that data line is now high before we send
     ADF0   D0 4D        7601   	bne  16$
                         7602   
     ADF2   A6 50        7603   12$     ldx  lindx      ; get byte to send
     ADF4   BD 023B      7604   	lda  chndat,x
     ADF7   6A           7605   	ror  a
     ADF8   9D 023B      7606   	sta  chndat,x
                         7607   
     ADFB   B0 05        7608   	bcs  13$        ; send a 1
                         7609   
     ADFD   20 ACF1      7610   	jsr  datlow     ; send a 0
     AE00   D0 03        7611   	bne  14$        ; and clock it
                         7612   
     AE02   20 ACE8      7613   13$     jsr  dathi
     AE05   20 AD34      7614   14$     jsr  delay16    ; wait a bit for t-s ( 2 mhz )
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 102-2
"sieee.sertalk1.src"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

                         7615   
     AE08   A9 10        7616   	lda  #bit4
     AE0A   24 76        7617   	bit  fsflag     ; slow down?
     AE0C   D0 03        7618   	bne  17$
                         7619   
     AE0E   20 AD2F      7620   	jsr  delay40    ; delay 40 us ( host dma )
     AE11   20 AD03      7621   17$     jsr  clkhi      ; rising edge clock
     AE14   20 AD34      7622   	jsr  delay16    ; increase t-v ( 2 mhz )
                         7623   
     AE17   A9 10        7624   	lda  #bit4
     AE19   24 76        7625   	bit  fsflag     ; slow down?
     AE1B   D0 03        7626   	bne  15$
                         7627   
     AE1D   20 AD2F      7628   	jsr  delay40    ; delay 40 us ( host dma )
     AE20   20 ACFA      7629   15$     jsr  clklo      ; pull clock low and ...
     AE23   20 ACE8      7630   	jsr  dathi      ; release data
                         7631   
     AE26   C6 66        7632   	dec  cont       ; more bits?
     AE28   D0 C1        7633   	bne  11$        ; yes
                         7634   
     AE2A   20 AD15      7635   9$      jsr  tstatn     ; test for atn
     AE2D   20 AD0C      7636   	jsr  debnc      ; debounce
     AE30   29 01        7637   	and  #datin
     AE32   F0 F6        7638   	beq  9$         ; wait for data low
                         7639   
     AE34   58           7640   	cli             ; let the controller run
     AE35   20 9303      7641   	jsr  get        ; get the next byte
     AE38   78           7642   	sei             ; sorry sync protocol
                         7643   
     AE39   20 AD15      7644   	jsr  tstatn     ; test for atn
     AE3C   4C AD62      7645   	jmp  2$         ; keep on talkin
                         7646   
     AE3F   4C AED9      7647   16$     jmp  frmerr
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 103
"sieee.serlistn1.src"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

                         7649   	.subttl "sieee.serlistn1.src"
                         7650   
     AE42   2C 400D      7651   acptr   bit  icr        ; clear pending
     AE45   A9 08        7652   	lda  #8         ; set byte bit count
     AE47   85 66        7653   	sta  cont
                         7654   
     AE49   20 AD15      7655   1$      jsr  tstatn
     AE4C   20 AD0C      7656   	jsr  debnc
     AE4F   29 04        7657   	and  #clkin
     AE51   D0 F6        7658   	bne  1$
                         7659   
     AE53   20 ACE8      7660   	jsr  dathi      ; make data line hi
                         7661   
     AE56   A9 01        7662   	lda  #datin
     AE58   2C 4001      7663   2$      bit  pb         ; wait for data high
     AE5B   D0 FB        7664   	bne  2$
                         7665   
     AE5D   A2 0A        7666   	ldx  #$0a       ; > 256uS is EOI
     AE5F   20 AD15      7667   3$      jsr  tstatn
     AE62   CA           7668   	dex
     AE63   F0 09        7669   	beq  4$         ; times up?
                         7670   
     AE65   20 AD0C      7671   	jsr  debnc      ; test clock low
     AE68   29 04        7672   	and  #clkin
     AE6A   F0 F3        7673   	beq  3$         ; no
     AE6C   D0 19        7674   	bne  5$         ; yes
                         7675   
     AE6E   20 ACF1      7676   4$      jsr  datlow     ; set data line low as response
                         7677   
     AE71   A2 18        7678   	ldx  #24        ; delay for talker turnaround
     AE73   CA           7679   6$      dex
     AE74   D0 FD        7680   	bne  6$
                         7681   
     AE76   20 ACE8      7682   	jsr  dathi      ; set data line hi
                         7683   
     AE79   20 AD15      7684   7$      jsr  tstatn
     AE7C   20 AD0C      7685   	jsr  debnc      ; wait for low clock
     AE7F   29 04        7686   	and  #clkin
     AE81   F0 F6        7687   	beq  7$
                         7688   
     AE83   A9 00        7689   	lda  #0         ; set eoi received
     AE85   85 51        7690   	sta  eoiflg
                         7691   
     AE87   AD 4001      7692   5$      lda  pb         ; wait for clock high
     AE8A   49 01        7693   	eor  #01        ; complement datain
                         7694   
                         7695   ;**********  fast serial routines  **********
                         7696   
     AE8C   AA           7697   	tax             ; save .a
     AE8D   AD 400D      7698   	lda  icr
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 103-1
"sieee.serlistn1.src"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

     AE90   29 08        7699   	and  #8         ; fast byte ?
     AE92   F0 08        7700   	beq  11$
                         7701   
     AE94   AD 400C      7702   	lda  sdr        ; get data
     AE97   85 54        7703   	sta  data       ; keep
     AE99   4C AEB2      7704   	jmp  10$        ; finish up
                         7705   
                         7706   ;**********  end fast serial routines **********
                         7707   
     AE9C   8A           7708   11$     txa             ; restore .a
     AE9D   4A           7709   	lsr  a          ; shift into carry
     AE9E   29 02        7710   	and  #$02       ; clkin/2
     AEA0   D0 E5        7711   	bne  5$
                         7712   
     AEA2   66 54        7713   	ror  data
                         7714   
     AEA4   20 AD15      7715   9$      jsr  tstatn
     AEA7   20 AD0C      7716   	jsr  debnc
     AEAA   29 04        7717   	and  #clkin     ; wait for clock low
     AEAC   F0 F6        7718   	beq  9$
                         7719   
     AEAE   C6 66        7720   	dec  cont       ; more to do?
     AEB0   D0 D5        7721   	bne  5$
                         7722   
     AEB2   20 ACF1      7723   10$     jsr  datlow     ; set data line low
     AEB5   A5 54        7724   	lda  data
     AEB7   60           7725   	rts
                         7726   
                         7727   
     AEB8   78           7728   listen  sei
     AEB9   20 9042      7729   	jsr  fndwch     ; test if active write channel
     AEBC   B0 06        7730   	bcs  1$
                         7731   
     AEBE   BD 0234      7732   	lda  chnrdy,x
     AEC1   6A           7733   	ror  a
     AEC2   B0 0B        7734   	bcs  2$
                         7735   
     AEC4   A5 53        7736   1$      lda  orgsa      ; test if open
     AEC6   29 F0        7737   	and  #$f0
     AEC8   C9 F0        7738   	cmp  #$f0
     AECA   F0 03        7739   	beq  2$         ; its an open
                         7740   
     AECC   4C AEDF      7741   	jmp  ilerr      ; not active channel
                         7742   
     AECF   20 AE42      7743   2$      jsr  acptr      ; get a byte
                         7744   
     AED2   58           7745   	cli
     AED3   20 8E78      7746   	jsr  put        ; put(data,eoiflg,sa)
     AED6   4C AEB8      7747   	jmp  listen     ; and keep on listen
                         7748   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 103-2
"sieee.serlistn1.src"   SIEEE.SRC

Error Addr  Code          Seq   Source statement

                         7749   
     AED9   A5 76        7750   frmerr  lda  fsflag
     AEDB   29 DF        7751   	and  #all-bit5  ; leave ...
     AEDD   85 76        7752   	sta  fsflag     ; clear serial flags
                         7753   
                         7754   
     AEDF   A9 10        7755   ilerr   lda  #atna
     AEE1   8D 4001      7756   	sta  pb         ; in atnmod, release all bus lines
                         7757   
                         7758   
     AEE4   20 ACBB      7759   xidle   jsr  spinp
U    AEE7   4C 0000 "    7760   	jmp  jidle      ; go idle it
                         7761   
                         7762   
     AEEA                7763   spinout                 ; carry set spout
     AEEA   B0 03        7764   	bcs  1$
                         7765   
     AEEC   4C ACBB      7766   	jmp  spinp      ; carry clear spin
     AEEF   4C ACD4      7767   1$      jmp  spout
                         7768   	.INCLUDE dskint
                         7769           .messg "dskint"
                         7770           .subttl "dskint"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 104
"dskint"   DSKINT.SRC

Error Addr  Code          Seq   Source statement

     AEF2   A2 00        7772   pezro   ldx  #0         ; err #1 for zero page
     AEF4   2C           7773   	.byte skip2	; skip next two bytes
     AEF5   A6 40        7774   perr    ldx  temp       ; get error #
     AEF7   9A           7775           txs     	; use stack as storage reg.
     AEF8   BA           7776   pe20    tsx     	; restore error #
     AEF9   A9 60        7777   pe30    lda  #pwr_led+act_led
     AEFB   0D 4000      7778           ora  pa
     AEFE   8D 4000      7779           sta  pa		; turn on led
     AF01   98           7780           tya     	; clear inner ctr
     AF02   18           7781   pd10    clc
     AF03   69 01        7782   pd20    adc  #1         ; count inner ctr
     AF05   D0 FC        7783           bne  pd20
                         7784   
     AF07   88           7785           dey     	; done ?
     AF08   D0 F8        7786           bne  pd10       ; no
                         7787   
     AF0A   AD 4000      7788           lda  pa
     AF0D   29 9F        7789           and  #all-pwr_led-act_led
     AF0F   8D 4000      7790           sta  pa		; turn off all led
     AF12   98           7791   pe40    tya     	; clear inner ctr
     AF13   18           7792   pd11    clc
     AF14   69 01        7793   pd21    adc  #1         ; count inner ctr
     AF16   D0 FC        7794           bne  pd21
                         7795   
     AF18   88           7796           dey     	; done ?
     AF19   D0 F8        7797           bne  pd11       ; no
                         7798   
     AF1B   CA           7799           dex     	; blinked # ?
     AF1C   10 DB        7800           bpl  pe30       ; no - blink again
                         7801   
     AF1E   E0 F9        7802           cpx  #$f9       ; waited between counts ?
     AF20   D0 F0        7803           bne  pe40       ; no
                         7804   
     AF22   F0 D4        7805           beq  pe20       ; always - all again
                         7806   
     AF24   78           7807   dskint  sei     	; reset entry
     AF25   D8           7808           cld
     AF26   A9 FE        7809   	lda  #init_prt_pa
     AF28   8D 4000      7810   	sta  pa
     AF2B   A9 65        7811   	lda  #init_dd_pa
     AF2D   8D 4002      7812   	sta  ddpa
                         7813   
     AF30   A9 D5        7814   	lda  #init_prt_pb
     AF32   8D 4001      7815   	sta  pb
     AF35   A9 3A        7816   	lda  #init_dd_pb
     AF37   8D 4003      7817   	sta  ddpb
     AF3A   A9 00        7818   	lda  #0
     AF3C   8D 4005      7819   	sta  tima_h	; set baud rate up
     AF3F   A9 06        7820   	lda  #6
     AF41   8D 4004      7821   	sta  tima_l	; 6uS bit
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 104-1
"dskint"   DSKINT.SRC

Error Addr  Code          Seq   Source statement

     AF44   A9 01        7822   	lda  #1
     AF46   8D 400E      7823   	sta  cra	; sp input, phi2, cont, start
     AF49   A9 9A        7824   	lda  #$9a
     AF4B   8D 400D      7825   	sta  icr	; irq on flag, sp, timerb
                         7826   	
     AF4E   A0 00        7827           ldy  #0
     AF50   A2 00        7828           ldx  #0
     AF52   8A           7829   pu10    txa     	; fill z-page with
     AF53   95 00        7830           sta  $0,x       ; accend pattern
     AF55   E8           7831           inx
     AF56   D0 FA        7832           bne  pu10
                         7833   
     AF58   8A           7834   pu20    txa     	; chk pattern by inc
     AF59   D5 00        7835           cmp  $0,x       ; ...back to orig #
     AF5B   D0 95        7836           bne  pezro      ; bad bits
                         7837   
     AF5D   F6 00        7838   pu30    inc  $0,x       ; bump contents
     AF5F   C8           7839           iny
     AF60   D0 FB        7840           bne  pu30       ; not done
                         7841   
     AF62   D5 00        7842           cmp  $0,x       ; check for good count
     AF64   D0 8C        7843           bne  pezro      ; something's wrong
                         7844   
     AF66   94 00        7845           sty  $0,x       ; leave z-page zeroed
     AF68   B5 00        7846           lda  $0,x       ; check it
     AF6A   D0 86        7847           bne  pezro      ; wrong
                         7848   
     AF6C   E8           7849           inx     	; next!
     AF6D   D0 E9        7850           bne  pu20       ; not all done
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 105
"dskint"   DSKINT.SRC

Error Addr  Code          Seq   Source statement

                         7852   ; test 32k byte rom
                         7853   
                         7854   ; enter x=start page
                         7855   ; exit if ok
                         7856   
     AF6F   E6 40        7857   rm10    inc  temp       ; next error #
     AF71   A2 7F        7858   	ldx  #127	; 128 pages
     AF73   86 47        7859           stx  ip+1       ; save page, start x=0
     AF75   E8           7860   	inx
     AF76   A9 00        7861           lda  #0
     AF78   85 46        7862           sta  ip         ; zero lo indirect
     AF7A   A0 02        7863   	ldy  #2		; skip signature bytes
     AF7C   18           7864           clc
     AF7D   E6 47        7865   rt10    inc  ip+1       ; do it backwards
     AF7F   71 46        7866   rt20    adc  (ip),y     ; total checksum in a
     AF81   C8           7867           iny
     AF82   D0 FB        7868           bne  rt20
                         7869   
     AF84   CA           7870           dex
     AF85   D0 F6        7871           bne  rt10
                         7872   
     AF87   69 FF        7873           adc  #255        ; add in last carry
     AF89   85 47        7874   	sta  ip+1
     AF8B   D0 3A        7875   	bne  perr2      ; no - show error number
                         7876   
                         7877   ; test all common ram
                         7878   
     AF8D   A9 01        7879   cr20    lda  #$01       ; start of 1st block
     AF8F   85 47        7880   cr30    sta  ip+1       ; save page #
     AF91   E6 40        7881           inc  temp       ; bump error #
                         7882   
                         7883   ; enter x=# of pages in block
                         7884   ; ip ptr to first page in block
                         7885   ; exit if ok
                         7886   
     AF93   A2 1F        7887   ramtst  ldx  #31	; save page count
     AF95   98           7888   ra10    tya     	; fill with adr sensitive pattern
     AF96   18           7889           clc
     AF97   65 47        7890           adc  ip+1
     AF99   91 46        7891           sta  (ip),y
     AF9B   C8           7892           iny
     AF9C   D0 F7        7893           bne  ra10
                         7894   
     AF9E   E6 47        7895           inc  ip+1
     AFA0   CA           7896           dex
     AFA1   D0 F2        7897           bne  ra10
                         7898   
     AFA3   A2 1F        7899           ldx  #31	; restore page count
     AFA5   C6 47        7900   ra30    dec  ip+1       ; check pattern backwards
     AFA7   88           7901   ra40    dey
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 105-1
"dskint"   DSKINT.SRC

Error Addr  Code          Seq   Source statement

     AFA8   98           7902           tya     	; gen pattern again
     AFA9   18           7903           clc
     AFAA   65 47        7904           adc  ip+1
     AFAC   D1 46        7905           cmp  (ip),y     ; ok ?
     AFAE   D0 17        7906           bne  perr2      ; no - show error #
                         7907   
     AFB0   49 FF        7908           eor  #$ff       ; yes - test inverse pattern
     AFB2   91 46        7909           sta  (ip),y
     AFB4   51 46        7910           eor  (ip),y     ; ok ?
     AFB6   91 46        7911           sta  (ip),y     ; leave memory zero
     AFB8   D0 0D        7912           bne  perr2      ; no - show error #
                         7913   
     AFBA   98           7914           tya
     AFBB   D0 EA        7915           bne  ra40
                         7916   
     AFBD   CA           7917           dex
     AFBE   D0 E5        7918           bne  ra30
                         7919   
     AFC0   A9 80        7920   	lda  #bit7
     AFC2   8D 01FB      7921   	sta  dejavu	; enable autoloader
     AFC5   D0 03        7922           bne  diagok
                         7923   
     AFC7   4C AEF5      7924   perr2   jmp  perr
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 106
"dskint"   DSKINT.SRC

Error Addr  Code          Seq   Source statement

     AFCA   78           7926   diagok  sei
     AFCB   A2 8F        7927   	ldx  #dtos
     AFCD   86 4F        7928   	stx  tos
     AFCF   9A           7929           txs
U    AFD0   20 0000 "    7930   	jsr  vectors	; setup default vectors
     AFD3   20 AFE9      7931   	jsr  restore	; restore all
     AFD6   2C 01FB      7932   	bit  dejavu
     AFD9   10 03        7933   	bpl  diagrtn	; boot?
                         7934   
     AFDB   4C A938      7935   	jmp  cbmboot	; try to boot "COPYRIGHT CBM 86" USR file
                         7936   
     AFDE   A9 73        7937   diagrtn lda  #$73       ; pwr on msg
     AFE0   20 A867      7938           jsr  errts0     ; copyright cbm dos
     AFE3   20 AD15      7939   	jsr  tstatn	; check for atn
U    AFE6   4C 0000 "    7940   	jmp  jidle
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 107
"dskint"   DSKINT.SRC

Error Addr  Code          Seq   Source statement

     AFE9   AD 4000      7942   restore lda  pa         ; compute primary addr
     AFEC   29 18        7943   	and  #dev_sel1+dev_sel2
     AFEE   4A           7944           lsr  a
     AFEF   4A           7945           lsr  a
     AFF0   4A           7946           lsr  a
     AFF1   09 48        7947           ora  #$48       ; talk address
     AFF3   85 78        7948           sta  tlkadr
     AFF5   49 60        7949           eor  #$60       ; listen address
     AFF7   85 77        7950           sta  lsnadr
                         7951   
     AFF9   A2 08        7952           ldx  #numjob
     AFFB   A9 0B        7953   	lda  #>bam2
     AFFD   9D 01F1      7954   dskin0  sta  bufind,x     ; set buff indirects
     B000   38           7955   	sec
     B001   E9 01        7956   	sbc  #1
     B003   CA           7957           dex
     B004   10 F7        7958           bpl  dskin0
                         7959   
     B006   A2 00        7960           ldx  #0         ; init buf pntr tbl
     B008   A0 00        7961           ldy  #0
     B00A   A9 00        7962   intt1   lda  #0
     B00C   95 BB        7963           sta  buftab,x
     B00E   E8           7964           inx
     B00F   B9 01F1      7965           lda  bufind,y
     B012   95 BB        7966           sta  buftab,x
     B014   E8           7967           inx
     B015   C8           7968           iny
     B016   C0 09        7969           cpy  #bfcnt+2   ; include bams
     B018   D0 F0        7970           bne  intt1
                         7971   
     B01A   A9 00        7972           lda  #<cmdbuf   ; set pntr to cmdbuf
     B01C   95 BB        7973           sta  buftab,x
     B01E   A9 02        7974           lda  #>cmdbuf
     B020   95 BC        7975           sta  buftab+1,x
     B022   A9 D0        7976           lda  #<errbuf   ; set pntr to errbuf
     B024   95 BD        7977           sta  buftab+2,x
     B026   A9 02        7978           lda  #>errbuf
     B028   95 BE        7979           sta  buftab+3,x
     B02A   A9 FF        7980           lda  #$ff
     B02C   A2 12        7981           ldx  #maxsa
     B02E   95 A8        7982   dskin1  sta  lintab,x
     B030   CA           7983           dex
     B031   10 FB        7984           bpl  dskin1
                         7985   
     B033   A2 06        7986           ldx  #mxchns-1
     B035   95 D1        7987   dskin2  sta  buf0,x     ; set buff as unused
     B037   95 D8        7988           sta  buf1,x
     B039   9D 0265      7989           sta  ss,x
     B03C   CA           7990           dex
     B03D   10 F6        7991           bpl  dskin2
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 107-1
"dskint"   DSKINT.SRC

Error Addr  Code          Seq   Source statement

                         7992   
     B03F   A9 09        7993           lda  #bfcnt+2   ; set buffer pointers
     B041   85 D6        7994           sta  buf0+cmdchn
     B043   A9 0A        7995           lda  #bfcnt+3
     B045   85 D7        7996           sta  buf0+errchn
     B047   A9 06        7997           lda  #errchn
     B049   85 B8        7998           sta  lintab+errsa
     B04B   A9 85        7999           lda  #cmdchn+$80
     B04D   85 B7        8000           sta  lintab+cmdsa
     B04F   A9 1F        8001           lda  #lxint     ; lindx 0 to 4 free
     B051   85 70        8002           sta  linuse
     B053   A9 01        8003           lda  #rdylst
     B055   8D 0239      8004           sta  chnrdy+cmdchn
     B058   A9 88        8005           lda  #rdytlk
     B05A   8D 023A      8006           sta  chnrdy+errchn
     B05D   A9 80        8007           lda  #$80       ; all 7 bufs free
     B05F   85 6D        8008           sta  bufuse
     B061   A9 01        8009           lda  #1
     B063   85 25        8010           sta  wpsw
     B065   20 89C3      8011           jsr  usrint     ; init user jmp
     B068   20 8D59      8012           jsr  lruint
     B06B   A9 01        8013           lda  #1         ; set up sec offset
     B06D   85 2E        8014           sta  secinc
     B06F   A9 02        8015           lda  #2
     B071   85 30        8016           sta  revcnt     ; set up recovery count
     B073   A9 00        8017   	lda  #0
     B075   85 8A        8018   	sta  dkoramask	; ora mask for burst
     B077   A9 FF        8019   	lda  #all
     B079   85 89        8020   	sta  dkandmask	; *
                         8021   
     B07B   A9 00        8022   	lda  #<buffcache
     B07D   85 8B        8023   	sta  cache	; indirect for track cache buffer
     B07F   A9 0C        8024   	lda  #>buffcache
     B081   85 8C        8025   	sta  cache+1	; indirect for track cache buffer
                         8026   
     B083   A9 08        8027   	lda  #bit3
     B085   85 76        8028   	sta  fsflag	; fast serial enabled
                         8029   
     B087   A9 33        8030   	lda  #$33
     B089   8D 01EC      8031   	sta  dosver	; init DOS version & type
     B08C   A9 44        8032   	lda  #$44
     B08E   8D 01EB      8033   	sta  vernum
                         8034   
     B091   A9 C0        8035   	lda  #sysiob
     B093   85 8D        8036   	sta  iobyte	; bit-7 verify on, bit-6 crc check on, bit-5 part on
                         8037   
     B095   A9 50        8038   	lda  #$50	; +700 mS.
     B097   8D 01D9      8039   	sta  motoracc	; acceleration startup
                         8040   
     B09A   A9 20        8041   	lda  #32
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 107-2
"dskint"   DSKINT.SRC

Error Addr  Code          Seq   Source statement

     B09C   85 9D        8042   	sta  sieeeset	; track buffer timeout
                         8043   
     B09E   A2 00        8044   	ldx  #0		; job #0
     B0A0   A9 82        8045           lda  #reset_dv	; reset device & restore head
     B0A2   20 959D      8046   	jsr  strobe_controller
     B0A5   C9 02        8047   	cmp  #2
     B0A7   B0 05        8048   	bcs  1$		; controller error
                         8049   
     B0A9   A9 C0        8050   	lda  #restore_dv
     B0AB   4C 959D      8051   	jmp  strobe_controller
                         8052   
     B0AE   A9 76        8053   1$	lda  #cntrer
     B0B0   4C A867      8054   	jmp  errts0	; controller error
                         8055   
     B0B3   A9 00        8056   setdef	lda  #0
     B0B5   85 8E        8057    	sta  pstartrk	; physical starting track
                         8058   
     B0B7   A9 01        8059           lda  #1
     B0B9   85 90        8060    	sta  startrk	; logical starting track
     B0BB   A9 03        8061   	lda  #sysdirsec
     B0BD   8D 01E5      8062   	sta  dirst	; starting directory sector
     B0C0   A9 51        8063   	lda  #81
     B0C2   8D 022C      8064   	sta  maxtrk
     B0C5   A9 4F        8065   	lda  #79
     B0C7   85 8F        8066   	sta  pmaxtrk	; physical ending track for formatting
     B0C9   A9 28        8067   	lda  #systrack
     B0CB   8D 022B      8068   	sta  dirtrk	; system track
     B0CE   60           8069   	rts
                         8070   
     B0CF   A9 28        8071   psetdef	lda  #40	; ****** 24h, 28H *****
     B0D1   85 75        8072   	sta  numsec	; logical number of sectors per cylinder
                         8073   
     B0D3   A0 02        8074   	ldy  #sysiz
     B0D5   84 91        8075   	sty  psectorsiz	; physical sector size (512)
     B0D7   B9 BD06      8076   	lda  nsecks,y
     B0DA   85 92        8077   	sta  pnumsec	; physical number of sectors per cylinder
     B0DC   85 93        8078   	sta  pendsec	; last physical sector number
     B0DE   8D 01F0      8079   	sta  maxsek
     B0E1   88           8080   	dey
     B0E2   84 94        8081   	sty  pstartsec	; physical starting sector
     B0E4   8C 01EF      8082   	sty  minsek
                         8083   
     B0E7   A9 F5        8084   	lda  #$f5
     B0E9   85 9B        8085   	sta  fillbyte	; fill byte ($f5 - verify with track cache)
                         8086   
     B0EB   A9 23        8087   	lda  #35
     B0ED   85 9A        8088   	sta  gap3	; gap for formatting
     B0EF   60           8089   	rts
                         8090   	.INCLUDE idle
                         8091           .messg "idle"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 107-3
"idle"   IDLE.SRC

Error Addr  Code          Seq   Source statement

                         8092           .subttl "idle"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 108
"idle"   IDLE.SRC

Error Addr  Code          Seq   Source statement

     B0F0   78           8094   idle    sei
     B0F1   A9 10        8095   	lda  #atna
     B0F3   8D 4001      8096           sta  pb         ; release serial bus
     B0F6   58           8097           cli     	; wait for something to do..
     B0F7   A5 7B        8098           lda  cmdwat     ; any commands pending ?
     B0F9   F0 0A        8099           beq  1$		; no command waiting
                         8100   
     B0FB   A9 00        8101           lda  #0
     B0FD   85 7B        8102           sta  cmdwat
     B0FF   20 8004      8103           jsr  parsxq     ; parse and execute command
     B102   20 ACBB      8104   	jsr  spinp	; fast serial input
     B105                8105   1$
     B105   58           8106           cli
     B106   A9 01        8107   	lda  #bit0
     B108   24 76        8108   	bit  fsflag	; any attentions pending ?
     B10A   F0 03        8109   	beq  2$
                         8110   
U    B10C   4C 0000 "    8111   	jmp  jatnsrv	; service the attention
                         8112   
     B10F   A5 87        8113   2$      lda  dirty	; dirty?
     B111   D0 1E        8114   	bne  5$
                         8115   
     B113   A0 09        8116   	ldy  #numjob+1	; include bams
     B115   A2 0E        8117   	ldx  #14        ; max user sa
     B117   B5 A8        8118   3$	lda  lintab,x   ; active ?
     B119   C9 FF        8119           cmp  #$ff
     B11B   D0 14        8120           bne  5$		; yes
                         8121   
     B11D   88           8122   	dey
     B11E   30 05        8123   	bmi  4$
                         8124   	
     B120   B9 0002      8125   	lda  jobs,y
     B123   30 0C        8126           bmi  5$		; it's active
                         8127   
     B125   CA           8128   4$      dex
     B126   10 EF        8129           bpl  3$
                         8130   	
     B128   A5 79        8131   	lda  ledprint
     B12A   29 BF        8132   	and  #all-act_led
     B12C   85 79        8133   	sta  ledprint	; no activity
     B12E   4C B137      8134           jmp  6$
                         8135   
     B131   A5 79        8136   5$	lda  ledprint
     B133   09 40        8137   	ora  #act_led
     B135   85 79        8138   	sta  ledprint	; activity led on
                         8139   
     B137   A5 25        8140   6$      lda  wpsw       ; disk changed ?
     B139   F0 03        8141           beq  7$		; no
                         8142   
     B13B   20 926E      8143           jsr  cldchn     ; close them..
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 108-1
"idle"   IDLE.SRC

Error Addr  Code          Seq   Source statement

     B13E   AE 02AB      8144   7$	ldx  erword
     B141   F0 08        8145           beq  8$		; no error flashing
                         8146   
     B143   A5 79        8147   	lda  ledprint
     B145   09 20        8148   	ora  #pwr_led
     B147   85 79        8149   	sta  ledprint
     B149   D0 06        8150   	bne  9$		; bra
                         8151   
     B14B   A5 79        8152   8$	lda  ledprint
     B14D   29 DF        8153   	and  #all-pwr_led
     B14F   85 79        8154   	sta  ledprint
                         8155   
     B151   A5 9C        8156   9$	lda  sieeetim	; serial bus last accessed
     B153   D0 03        8157   	bne  10$
                         8158   
                         8159   ; dump the cache track buffer
     B155   20 B15B      8160   	jsr  ieeedumptrk
     B158   4C B105      8161   10$	jmp  1$
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 109
"idle"   IDLE.SRC

Error Addr  Code          Seq   Source statement

     B15B                8163   ieeedumptrk
     B15B   A5 87        8164   	lda  dirty	; dirty flag set?
     B15D   F0 1C        8165   	beq  1$
                         8166   
     B15F   A9 40        8167   	lda  #bit6
     B161   8D 02A8      8168   	sta  jobrtn	; no check t&s flag
     B164   A5 6C        8169   	lda  jobnum
     B166   48           8170   	pha
     B167   A5 4D        8171   	lda  track
     B169   48           8172   	pha
     B16A   A5 4E        8173   	lda  sector
     B16C   48           8174   	pha
     B16D   A2 07        8175   	ldx  #>bam1->buff0
U    B16F   20 0000 "    8176   	jsr  jdumptrk	; special case no buffer op to set dirty
     B172   68           8177   	pla
     B173   85 4E        8178   	sta  sector
     B175   68           8179   	pla
     B176   85 4D        8180   	sta  track
     B178   68           8181   	pla
     B179   85 6C        8182   	sta  jobnum
     B17B   60           8183   1$	rts
                         8184   	.INCLUDE lstdir
                         8185           .messg "lstdir"
                         8186           .subttl "lstdir"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 110
"lstdir"   LSTDIR.SRC

Error Addr  Code          Seq   Source statement

     B17C   A9 00        8188   stdir   lda  #0         ; start dir loading func, get
     B17E   85 52        8189           sta  sa         ; buffr and get it started
     B180   A9 01        8190           lda  #1         ; allocate chanl and 1 bufefer
     B182   20 915A      8191           jsr  getrch
     B185   A9 00        8192           lda  #0
     B187   20 9422      8193           jsr  setpnt
     B18A   A6 50        8194           ldx  lindx
     B18C   A9 00        8195           lda  #0
     B18E   9D 0242      8196           sta  lstchr,x
     B191   20 9F11      8197           jsr  getact
     B194   AA           8198           tax
     B195   A9 00        8199           lda  #0
     B197   9D 0272      8200           sta  lstjob,x
     B19A   A9 01        8201           lda  #1         ; put sal in buffer
     B19C   20 8EB1      8202           jsr  putbyt
     B19F   A9 04        8203           lda  #4         ; put sah in buffer
     B1A1   20 8EB1      8204           jsr  putbyt
     B1A4   A9 01        8205           lda  #1         ; insert fhoney links (0101)
     B1A6   20 8EB1      8206           jsr  putbyt
     B1A9   20 8EB1      8207           jsr  putbyt
     B1AC   AD 028D      8208           lda  nbtemp
     B1AF   20 8EB1      8209           jsr  putbyt     ; put in drvnum
     B1B2   A9 00        8210           lda  #0
     B1B4   20 8EB1      8211           jsr  putbyt
     B1B7   20 B237      8212           jsr  movbuf     ; get disk name
     B1BA   20 9F11      8213           jsr  getact
     B1BD   0A           8214           asl  a
     B1BE   AA           8215           tax
     B1BF   D6 BB        8216           dec  buftab,x
     B1C1   D6 BB        8217           dec  buftab,x
     B1C3   A9 00        8218           lda  #0         ; end of this line
     B1C5   20 8EB1      8219           jsr  putbyt
     B1C8   A9 01        8220   dir1    lda  #1         ; insert fhoney links ($0101)
     B1CA   20 8EB1      8221           jsr  putbyt
     B1CD   20 8EB1      8222           jsr  putbyt
     B1D0   20 854D      8223           jsr  getnam     ; get #bufrs and file name
     B1D3   90 2C        8224           bcc  dir3       ; test if last entry
                         8225   
     B1D5   AD 028D      8226           lda  nbtemp
     B1D8   20 8EB1      8227           jsr  putbyt
     B1DB   AD 028E      8228           lda  nbtemp+1
     B1DE   20 8EB1      8229           jsr  putbyt
     B1E1   20 B237      8230           jsr  movbuf
     B1E4   A9 00        8231           lda  #0         ; end of entry
     B1E6   20 8EB1      8232           jsr  putbyt
     B1E9   D0 DD        8233           bne  dir1
                         8234   
     B1EB   20 9F11      8235   dir10   jsr  getact
     B1EE   0A           8236           asl  a
     B1EF   AA           8237           tax
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 110-1
"lstdir"   LSTDIR.SRC

Error Addr  Code          Seq   Source statement

     B1F0   A9 00        8238           lda  #0
     B1F2   95 BB        8239           sta  buftab,x
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 111
"lstdir"   LSTDIR.SRC

Error Addr  Code          Seq   Source statement

     B1F4   A9 88        8241           lda  #rdytlk
     B1F6   A4 50        8242           ldy  lindx
     B1F8   8D 026E      8243           sta  dirlst
     B1FB   99 0234      8244           sta  chnrdy,y   ; dir list buff full
     B1FE   A5 54        8245           lda  data
     B200   60           8246           rts
                         8247   
     B201   AD 028D      8248   dir3    lda  nbtemp     ; this is end of load
     B204   20 8EB1      8249           jsr  putbyt
     B207   AD 028E      8250           lda  nbtemp+1
     B20A   20 8EB1      8251           jsr  putbyt
     B20D   20 B237      8252           jsr  movbuf
     B210   20 9F11      8253           jsr  getact
     B213   0A           8254           asl  a
     B214   AA           8255           tax
     B215   D6 BB        8256           dec  buftab,x
     B217   D6 BB        8257           dec  buftab,x
     B219   A9 00        8258           lda  #0         ; end of listing (000)
     B21B   20 8EB1      8259           jsr  putbyt
     B21E   20 8EB1      8260           jsr  putbyt
     B221   20 8EB1      8261           jsr  putbyt
     B224   20 9F11      8262           jsr  getact
     B227   0A           8263           asl  a
     B228   A8           8264           tay
     B229   B9 00BB      8265           lda  buftab,y
     B22C   A6 50        8266           ldx  lindx
     B22E   9D 0242      8267           sta  lstchr,x
     B231   DE 0242      8268           dec  lstchr,x
     B234   4C B1EB      8269           jmp  dir10
                         8270   
     B237   A0 00        8271   movbuf  ldy  #0         ; file name to lsting buf
     B239   B9 02AC      8272   movb1   lda  nambuf,y
     B23C   20 8EB1      8273           jsr  putbyt
     B23F   C8           8274           iny
     B240   C0 1B        8275           cpy  #27
     B242   D0 F5        8276           bne  movb1
                         8277   
     B244   60           8278           rts
                         8279   
     B245   20 9071      8280   getdir  jsr  getbyt     ; get dir char
     B248   F0 01        8281           beq  getd3
                         8282   
     B24A   60           8283           rts
                         8284   
     B24B   85 54        8285   getd3   sta  data
     B24D   A4 50        8286           ldy  lindx
     B24F   B9 0242      8287           lda  lstchr,y
     B252   F0 08        8288           beq  gd1
                         8289   
     B254   A9 80        8290           lda  #eoiout
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 111-1
"lstdir"   LSTDIR.SRC

Error Addr  Code          Seq   Source statement

     B256   99 0234      8291           sta  chnrdy,y
     B259   A5 54        8292           lda  data
     B25B   60           8293           rts
                         8294   
     B25C   48           8295   gd1     pha
     B25D   20 B1C8      8296           jsr  dir1
     B260   68           8297           pla
     B261   60           8298           rts
                         8299   	.INCLUDE verdir
                         8300           .messg "verdir"
                         8301           .subttl "verdir"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 112
"verdir"   VERDIR.SRC

Error Addr  Code          Seq   Source statement

                         8303   ;  validate files with bam
                         8304   ;  create new bam according to
                         8305   ;  contents of files entered in dir
                         8306   
     B262   20 8085      8307   verdir  jsr  simprs     ; get drive #
     B265   20 8F03      8308           jsr  initdr
     B268   20 B44A      8309           jsr  newmap     ; set new bam
     B26B   A9 00        8310           lda  #0
     B26D   85 73        8311           sta  delind
     B26F   20 8424      8312           jsr  srchst     ; search first file
     B272   D0 38        8313           bne  vd25       ; found one
                         8314   
     B274   A9 00        8315   vd10    lda  #0         ; set dir sectors..
     B276   85 4E        8316           sta  sector     ; ...in bam
     B278   AD 022B      8317           lda  dirtrk
     B27B   85 4D        8318           sta  track
     B27D   20 B2C7      8319           jsr  vmkbam
     B280   20 B515      8320   	jsr  mapout	; wrt 'em out
     B283   4C 804C      8321           jmp  endcmd
                         8322   
     B286   C8           8323   vd15    iny
     B287   B1 64        8324           lda  (dirbuf),y
     B289   48           8325           pha     	; save track
     B28A   C8           8326           iny
     B28B   B1 64        8327           lda  (dirbuf),y
     B28D   48           8328           pha     	; save sector
     B28E   A0 13        8329           ldy  #19        ; get ss track
     B290   B1 64        8330           lda  (dirbuf),y ; is this relative ?
     B292   F0 0A        8331           beq  vd17       ; no
                         8332   
     B294   85 4D        8333           sta  track      ; yes - save track
     B296   C8           8334           iny
     B297   B1 64        8335           lda  (dirbuf),y ; get ss sector
     B299   85 4E        8336           sta  sector
     B29B   20 B2C7      8337           jsr  vmkbam     ; validate ss by links
     B29E   68           8338   vd17    pla
     B29F   85 4E        8339           sta  sector     ; now do data blocks
     B2A1   68           8340           pla
     B2A2   85 4D        8341           sta  track
     B2A4   20 B2C7      8342           jsr  vmkbam     ; set bit used in bam
     B2A7   20 8477      8343   vd20    jsr  srre       ; search for more
     B2AA   F0 C8        8344           beq  vd10       ; no more files
                         8345   
     B2AC   A0 00        8346   vd25    ldy  #0
     B2AE   B1 64        8347           lda  (dirbuf),y
     B2B0   10 0F        8348           bpl  vd28
                         8349   
     B2B2   29 07        8350   	and  #7		; par. file?
     B2B4   C9 05        8351   	cmp  #5
     B2B6   D0 CE        8352   	bne  vd15
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 112-1
"verdir"   VERDIR.SRC

Error Addr  Code          Seq   Source statement

                         8353   
     B2B8   20 B323      8354   vd26	jsr  setparts	; set partition t&s
     B2BB   20 B33C      8355   	jsr  allocpart	; allocate t&s
     B2BE   4C B2A7      8356   	jmp  vd20
                         8357   
     B2C1   20 873B      8358   vd28    jsr  deldir     ; not closed delete dir
     B2C4   4C B2A7      8359           jmp  vd20
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 113
"verdir"   VERDIR.SRC

Error Addr  Code          Seq   Source statement

     B2C7                8361   vmkbam          	; mark bam w/file sectors
     B2C7   20 94B5      8362           jsr  tschk
     B2CA   20 B572      8363           jsr  wused
     B2CD   20 93CF      8364           jsr  opnird
     B2D0   A9 00        8365   mrk2    lda  #0
     B2D2   20 9422      8366           jsr  setpnt
     B2D5   20 9071      8367           jsr  getbyt
     B2D8   85 4D        8368           sta  track
     B2DA   20 9071      8369           jsr  getbyt
     B2DD   85 4E        8370           sta  sector
     B2DF   A5 4D        8371           lda  track
     B2E1   D0 03        8372           bne  mrk1
                         8373   
     B2E3   4C 919E      8374           jmp  frechn
     B2E6   20 B572      8375   mrk1    jsr  wused
     B2E9   20 93AA      8376           jsr  nxtbuf
     B2EC   4C B2D0      8377           jmp  mrk2
                         8378   
                         8379   
                         8380   
     B2EF                8381   calcpar
     B2EF   AD 01EE      8382   	lda  lo
     B2F2   D0 08        8383   	bne  1$
                         8384   
     B2F4   AD 01ED      8385   	lda  hi
     B2F7   F0 1D        8386   	beq  2$
                         8387   
     B2F9   CE 01ED      8388   	dec  hi
     B2FC   CE 01EE      8389   1$	dec  lo
     B2FF   E6 4E        8390   	inc  sector	; next please
     B301   A5 75        8391   	lda  numsec
     B303   C5 4E        8392   	cmp  sector
     B305   D0 0F        8393   	bne  2$
                         8394   	
     B307   A9 00        8395   	lda  #0
     B309   85 4E        8396   	sta  sector	; start over
     B30B   A5 4D        8397   	lda  track
     B30D   CD 022B      8398   	cmp  dirtrk	; can not overrun system track
     B310   F0 0C        8399   	beq  3$
                         8400   
     B312   E6 4D        8401   	inc  track	; next
                         8402   
     B314   38           8403   	sec
     B315   24           8404   	.byte skip1
     B316   18           8405   2$	clc
     B317   AD 01ED      8406   	lda  hi
     B31A   0D 01EE      8407   	ora  lo
     B31D   60           8408   	rts		; .z=1 done...
                         8409   
     B31E   A9 67        8410   3$	lda  #systs	; illegal partition track & sector error
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 113-1
"verdir"   VERDIR.SRC

Error Addr  Code          Seq   Source statement

U    B320   4C 0000 "    8411   	jmp  cmder2
                         8412   
                         8413   
                         8414   
     B323                8415   setparts
                         8416   
     B323   A0 01        8417   	ldy  #1
     B325   B1 64        8418   	lda  (dirbuf),y
     B327   85 4D        8419   	sta  track	; starting track
     B329   C8           8420   	iny
     B32A   B1 64        8421   	lda  (dirbuf),y
     B32C   85 4E        8422   	sta  sector	; starting sector
     B32E   A0 1C        8423   	ldy  #$1C
     B330   B1 64        8424   	lda  (dirbuf),y
     B332   8D 01EE      8425   	sta  lo		; blks used
     B335   C8           8426   	iny
     B336   B1 64        8427   	lda  (dirbuf),y
     B338   8D 01ED      8428   	sta  hi
     B33B   60           8429   	rts
                         8430   
                         8431   
                         8432   
                         8433   
     B33C                8434   allocpart
                         8435   
     B33C   20 94B5      8436   	jsr  tschk	; check t&s
     B33F   20 B572      8437   	jsr  wused	; allocate it
     B342   20 B2EF      8438   	jsr  calcpar
     B345   D0 F5        8439   	bne  allocpart
                         8440   	
     B347   60           8441   	rts
                         8442   	.INCLUDE newdsk
                         8443           .messg "new"
                         8444   	.subttl "new"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 114
"new"   NEWDSK.SRC

Error Addr  Code          Seq   Source statement

                         8446   ; new: initialize a disk, disk is
                         8447   ;  soft-sectored, bit avail. map,
                         8448   ;  dir, & 1st block are all inited
                         8449   
     B348   20 81FD      8450   new     jsr  onedrv
     B34B   A5 EF        8451           lda  fildrv     ; set up drive #
     B34D   10 05        8452           bpl  n10
                         8453   
     B34F   A9 33        8454           lda  #badfn     ; bad drive # given
     B351   4C 807C      8455           jmp  cmderr
                         8456   
     B354   A9 00        8457   n10     lda  #0
     B356   85 6E        8458           sta  nodrv      ; clr drive status
     B358   8D 01FA      8459   	sta  wpstat	; and write protect status
     B35B   20 81F6      8460           jsr  setlds
     B35E   A2 00        8461           ldx  #0         ; drv 0
     B360   AC 0292      8462           ldy  filtbl+1   ; get disk id
     B363   C4 29        8463           cpy  cmdsiz     ; is this new or clear?
     B365   F0 19        8464           beq  n20        ; next if new
                         8465   
     B367   B9 0200      8466           lda  cmdbuf,y   ; format disk
     B36A   95 1D        8467           sta  dskid,x    ; store in proper drive
     B36C   B9 0201      8468           lda  cmdbuf+1,y ; (y=0)
     B36F   95 1E        8469           sta  dskid+1,x
     B371   20 9262      8470   	jsr  clrchn	; clear all channels
U    B374   20 0000 "    8471   	jsr  jintdsk	; init disk
     B377   20 8746      8472           jsr  format     ; format disk
     B37A   20 B43D      8473   	jsr  clrbam	; zero bam
     B37D   4C B390      8474           jmp  n30
                         8475   
U    B380   20 0000 "    8476   n20	jsr  jintdsk	; init disk
     B383   20 8F03      8477   	jsr  initdr     ; clear directory only
     B386   A5 6F        8478           lda  dskver     ; use current version #
     B388   CD 01EB      8479           cmp  vernum
     B38B   F0 03        8480           beq  n30
                         8481   
     B38D   4C 94CB      8482           jmp  vnerr      ; wrong version #
                         8483   
     B390   A5 6C        8484   n30     lda  jobnum
     B392   A8           8485           tay
     B393   0A           8486           asl  a
     B394   AA           8487           tax
U    B395   AD 0000 "    8488           lda  dsknam     ; set ptr to disk name
     B398   95 BB        8489           sta  buftab,x
     B39A   AE 0291      8490           ldx  filtbl
     B39D   A9 1B        8491           lda  #27
     B39F   20 84EE      8492           jsr  trname     ; transfer cmd buf to bam
     B3A2   A0 00        8493           ldy  #0
     B3A4   84 64        8494           sty  dirbuf     ; reset lsb
     B3A6   AD 022B      8495           lda  dirtrk
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 114-1
"new"   NEWDSK.SRC

Error Addr  Code          Seq   Source statement

     B3A9   91 64        8496           sta  (dirbuf),y ; directory track
     B3AB   C8           8497           iny
     B3AC   A9 03        8498   	lda  #sysdirsec
     B3AE   8D 01E5      8499       	sta  dirst
     B3B1   91 64        8500           sta  (dirbuf),y ; link to first dir blk
     B3B3   C8           8501           iny
     B3B4   AD 01EB      8502           lda  vernum
     B3B7   85 6F        8503           sta  dskver
     B3B9   91 64        8504           sta  (dirbuf),y ; format type
     B3BB   C8           8505           iny
     B3BC   A9 00        8506           lda  #0         ; null
     B3BE   91 64        8507           sta  (dirbuf),y
     B3C0   A0 16        8508           ldy  #22        ; skip name
     B3C2   A5 1D        8509           lda  dskid
     B3C4   91 64        8510           sta  (dirbuf),y ; set the disk id '3d'
     B3C6   C8           8511           iny
     B3C7   A5 1E        8512           lda  dskid+1
     B3C9   91 64        8513           sta  (dirbuf),y
     B3CB   C8           8514           iny
     B3CC   A9 A0        8515           lda  #160       ; shifted space
     B3CE   91 64        8516           sta  (dirbuf),y
     B3D0   C8           8517           iny
     B3D1   AD 01EC      8518           lda  dosver
     B3D4   91 64        8519           sta  (dirbuf),y
     B3D6   C8           8520           iny
     B3D7   A5 6F        8521           lda  dskver
     B3D9   91 64        8522           sta  (dirbuf),y
     B3DB   C8           8523           iny
     B3DC   A9 A0        8524           lda  #160       ; shftd space
     B3DE   91 64        8525           sta  (dirbuf),y
     B3E0   C8           8526           iny
     B3E1   91 64        8527           sta  (dirbuf),y
     B3E3   C8           8528           iny
     B3E4   A9 00        8529           lda  #0         ; nulls
     B3E6   91 64        8530   n32     sta  (dirbuf),y ; clr remaining
     B3E8   C8           8531           iny
     B3E9   D0 FB        8532           bne  n32
                         8533   
     B3EB   A9 00        8534           lda  #00
     B3ED   20 B435      8535           jsr  settrk     ; dirtrk, 00
     B3F0   20 93C1      8536           jsr  drtwrt     ; write it out
     B3F3   A9 00        8537           lda  #0
     B3F5   85 64        8538           sta  dirbuf     ; lsb reset
     B3F7   A8           8539           tay     	; set up 1st dir blk
     B3F8   91 64        8540   n34     sta  (dirbuf),y
     B3FA   C8           8541           iny
     B3FB   D0 FB        8542           bne  n34
                         8543   
     B3FD   C8           8544           iny     	; set sector link
     B3FE   A9 FF        8545           lda  #$ff
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 114-2
"new"   NEWDSK.SRC

Error Addr  Code          Seq   Source statement

     B400   91 64        8546           sta  (dirbuf),y
     B402   AD 01E5      8547           lda  dirst	; wrt it to dirtrk
     B405   20 B435      8548           jsr  settrk
     B408   20 93C1      8549           jsr  drtwrt
     B40B   20 B44A      8550           jsr  newmap     ; build new bam
     B40E   AD 022B      8551   	lda  dirtrk
     B411   85 4D        8552   	sta  track
     B413   A9 00        8553   	lda  #0
     B415   85 4E        8554   	sta  sector	; allocate 3 sectors & directory sector
     B417   20 B572      8555   	jsr  wused	; 0
     B41A   E6 4E        8556   	inc  sector
     B41C   20 B572      8557   	jsr  wused	; 1
     B41F   E6 4E        8558   	inc  sector
     B421   20 B572      8559   	jsr  wused	; 2
                         8560   
     B424   AD 01E5      8561   	lda  dirst
     B427   85 4E        8562   	sta  sector
     B429   20 B572      8563   	jsr  wused	; 3 usually
     B42C   20 B612      8564           jsr  bamout     ; write the bams
     B42F   20 8F03      8565   	jsr  initdr	; read it back
     B432   4C 804C      8566           jmp  endcmd
                         8567   
     B435   85 4E        8568   settrk  sta  sector
     B437   AD 022B      8569           lda  dirtrk
     B43A   85 4D        8570           sta  track
     B43C   60           8571           rts
                         8572   
     B43D   A9 00        8573   clrbam	lda  #0
     B43F   A8           8574   	tay
     B440   99 0A00      8575   1$	sta  bam1,y	; zero
     B443   99 0B00      8576   	sta  bam2,y
     B446   C8           8577   	iny
     B447   D0 F7        8578   	bne  1$
                         8579   	
     B449   60           8580   	rts
                         8581   	.INCLUDE mapit
                         8582           .messg "mapit"
                         8583           .subttl "mapit"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 115
"mapit"   MAPIT.SRC

Error Addr  Code          Seq   Source statement

     B44A                8585   newmap
     B44A   A9 00        8586   	lda  #0
     B44C   85 4D        8587           sta  track	; clr trk counter
     B44E   AD 022B      8588           lda  dirtrk     ; link to bam2
     B451   8D 0A00      8589           sta  bam1       ; set trk links
     B454   A9 00        8590           lda  #0         ; end trk link
     B456   8D 0B00      8591           sta  bam2       ;
     B459   A9 02        8592           lda  #2         ; link to bam2
     B45B   8D 0A01      8593           sta  bam1+1
     B45E   A9 FF        8594           lda  #$ff       ; sector end link
     B460   8D 0B01      8595           sta  bam2+1
     B463   AD 01EB      8596           lda  vernum
     B466   8D 0A02      8597           sta  bam1+2
     B469   8D 0B02      8598           sta  bam2+2
     B46C   49 FF        8599   	eor  #$ff
     B46E   8D 0A03      8600           sta  bam1+3
     B471   8D 0B03      8601           sta  bam2+3
     B474   A5 1D        8602           lda  dskid
     B476   8D 0A04      8603           sta  bam1+4
     B479   8D 0B04      8604           sta  bam2+4
     B47C   A5 1E        8605           lda  dskid+1
     B47E   8D 0A05      8606           sta  bam1+5
     B481   8D 0B05      8607           sta  bam2+5
     B484   A5 8D        8608   	lda  iobyte
     B486   8D 0A06      8609   	sta  bam1+6	; bit-7 iobyte verify, bit-6 crc check
     B489   8D 0B06      8610   	sta  bam2+6	; *
     B48C   A9 00        8611   	lda  #0
     B48E   8D 0A07      8612   	sta  bam1+7	; auto boot flag off
     B491   8D 0B07      8613   	sta  bam2+7	; *
     B494   20 B652      8614           jsr  setbp2     ; set pntrs
     B497   A0 10        8615   1$	ldy  #bindx     ; bam offset
     B499   E6 4D        8616   2$	inc  track	; next trk
     B49B   A5 4D        8617   	lda  track	; chk trk
     B49D   C5 90        8618   	cmp  startrk	; allocate neccessary tracks
     B49F   F0 0B        8619   	beq  4$		; if track = starttrk then do not allocate
                         8620   
     B4A1   90 07        8621   	bcc  3$		; if track < starttrk then allocate
                         8622   
     B4A3   CD 022C      8623   	cmp  maxtrk
     B4A6   F0 02        8624   	beq  3$		; if track = maxtrk then allocate
                         8625   
     B4A8   90 02        8626   	bcc  4$		; if track < maxtrk then do not allocate
                         8627   
     B4AA   18           8628   3$	clc
     B4AB   24           8629   	.byte skip1
     B4AC   38           8630   4$	sec
     B4AD   08           8631   	php		; save carry
                         8632   
     B4AE   A9 00        8633           lda  #0         ; clear track map
     B4B0   85 40        8634           sta  t0
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 115-1
"mapit"   MAPIT.SRC

Error Addr  Code          Seq   Source statement

     B4B2   85 41        8635           sta  t1
     B4B4   85 42        8636           sta  t2
     B4B6   85 43        8637   	sta  t3
     B4B8   85 44        8638   	sta  t4
                         8639   
     B4BA   A6 75        8640   	ldx  numsec
     B4BC   8A           8641   	txa
     B4BD   B0 02        8642   	bcs  5$
                         8643   
     B4BF   A9 00        8644   	lda  #0
     B4C1   91 31        8645   5$      sta  (bmpnt),y
     B4C3   C8           8646           iny
                         8647   
     B4C4   28           8648   6$      plp  		; save carry
     B4C5   08           8649   	php		; & retrieve
     B4C6   26 40        8650   	rol  t0         ;      t0        t1          t2    ...    t4
     B4C8   26 41        8651           rol  t1         ;   76543210  111111      22221111 ... 33333333
     B4CA   26 42        8652           rol  t2         ;             54321098    32109876 ... 98765432
     B4CC   26 43        8653           rol  t3
     B4CE   26 44        8654           rol  t4
     B4D0   CA           8655           dex
     B4D1   D0 F1        8656           bne  6$
                         8657   	
     B4D3   28           8658   	plp
     B4D4                8659   8$			; .x=0
     B4D4   B5 40        8660           lda  t0,x
     B4D6   91 31        8661           sta  (bmpnt),y  ; write out bit map
     B4D8   C8           8662           iny
     B4D9   E8           8663           inx
     B4DA   E0 05        8664           cpx  #5
     B4DC   90 F6        8665           bcc  8$
                         8666   
     B4DE   98           8667   	tya		; done?
     B4DF   D0 B8        8668   	bne  2$
                         8669   
     B4E1   A5 32        8670           lda  bmpnt+1
     B4E3   C9 0B        8671           cmp  #>bam2	; both bams done?
     B4E5   F0 04        8672           beq  9$		; yep...
                         8673   
     B4E7   E6 32        8674           inc  bmpnt+1    ; do the next bam
     B4E9   D0 AC        8675   	bne  1$		; bra
                         8676   
     B4EB   A9 01        8677   9$	lda  #1
     B4ED   85 35        8678           sta  wbam       ; set it dirty
     B4EF   A9 00        8679           lda  #0
     B4F1   8D 02A9      8680           sta  ndbl       ; clr blk free
                         8681   
     B4F4   AD 022B      8682   	lda  dirtrk
     B4F7   85 4D        8683   	sta  track
     B4F9   A9 00        8684   	lda  #0
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 115-2
"mapit"   MAPIT.SRC

Error Addr  Code          Seq   Source statement

     B4FB   85 4E        8685   	sta  sector	; allocate 3 sectors & directory sector
     B4FD   20 B572      8686   	jsr  wused	; 0
     B500   E6 4E        8687   	inc  sector
     B502   20 B572      8688   	jsr  wused	; 1
     B505   E6 4E        8689   	inc  sector
     B507   20 B572      8690   	jsr  wused	; 2
                         8691   
     B50A   AD 01E5      8692   	lda  dirst
     B50D   85 4E        8693   	sta  sector
     B50F   20 B572      8694   	jsr  wused	; 3 usually
                         8695    
     B512   4C 8F85      8696   	jmp  nfcalc
                         8697   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 116
"mapit"   MAPIT.SRC

Error Addr  Code          Seq   Source statement

     B515   A5 35        8699   mapout  lda  wbam       ; is it dirty?
     B517   F0 28        8700           beq  sb40       ; its clean
                         8701   
     B519   AD 022C      8702           lda  maxtrk     ; verify bam first
     B51C   85 66        8703           sta  cont       ; set trk counter
     B51E   20 B652      8704           jsr  setbp2     ; set base adrr
     B521   A9 10        8705   sb10    lda  #bindx     ; bam offset
     B523   85 31        8706   sb20    sta  bmpnt      ; lsb
     B525   20 B75E      8707           jsr  avck       ; check this trk
     B528   C6 66        8708           dec  cont       ; do next trk
     B52A   F0 12        8709           beq  sb30       ; verify done
                         8710   	
     B52C   18           8711           clc     	; update bam pointer
     B52D   A5 31        8712           lda  bmpnt      ;
     B52F   69 06        8713           adc  #6         ; 6 byte per trk
     B531   90 F0        8714           bcc  sb20       ; same bam
                         8715   
     B533   A5 32        8716   	lda  bmpnt+1
     B535   C9 0B        8717   	cmp  #>bam2
     B537   F0 05        8718   	beq  sb30
                         8719   
     B539   E6 32        8720           inc  bmpnt+1    ; do next bam
     B53B   4C B521      8721           jmp  sb10
                         8722   
     B53E   20 B612      8723   sb30    jsr  bamout     ; wrt the bams
     B541   A9 00        8724   sb40    lda  #0
     B543   85 35        8725           sta  wbam       ; set it clean now!
     B545   60           8726           rts
                         8727   	.INCLUDE frets
                         8728           .messg "frets"
                         8729           .subttl "frets"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 117
"frets"   FRETS.SRC

Error Addr  Code          Seq   Source statement

     B546   20 B5B4      8731   frets   jsr  setbam     ; mrk bam free
     B549   20 B5D8      8732           jsr  bambit
     B54C   D0 23        8733           bne  fre10      ; free already
                         8734   
     B54E   B1 31        8735           lda  (bmpnt),y  ; not free, free it
     B550   1D B5EA      8736           ora  bmask,x
     B553   91 31        8737           sta  (bmpnt),y
     B555   A9 01        8738           lda  #1
     B557   85 35        8739           sta  wbam       ; set it dirty
     B559   A0 00        8740           ldy  #0         ; point to blks free
     B55B   18           8741           clc
     B55C   B1 31        8742           lda  (bmpnt),y
     B55E   69 01        8743           adc  #01        ; add one
     B560   91 31        8744           sta  (bmpnt),y
     B562   A5 4D        8745           lda  track
     B564   CD 022B      8746           cmp  dirtrk
     B567   F0 34        8747           beq  use10
                         8748   
     B569   EE 02A9      8749           inc  ndbl
     B56C   D0 03        8750           bne  fre10
                         8751   
     B56E   EE 02AA      8752           inc  ndbh
     B571   60           8753   fre10   rts
                         8754   
     B572   20 B5B4      8755   wused   jsr  setbam     ; get bam index
     B575   20 B5D8      8756           jsr  bambit
     B578   F0 39        8757           beq  use30      ; used, no action
                         8758   
     B57A   B1 31        8759           lda  (bmpnt),y  ; get bits
     B57C   5D B5EA      8760           eor  bmask,x    ; mark sec used
     B57F   91 31        8761           sta  (bmpnt),y
     B581   A9 01        8762           lda  #1
     B583   85 35        8763           sta  wbam       ; set it dirty
     B585   A0 00        8764           ldy  #0
     B587   B1 31        8765           lda  (bmpnt),y  ; count -1
     B589   38           8766           sec
     B58A   E9 01        8767           sbc  #01
     B58C   91 31        8768           sta  (bmpnt),y  ; save it
     B58E   A5 4D        8769           lda  track
     B590   CD 022B      8770           cmp  dirtrk
     B593   F0 0B        8771           beq  use20
                         8772   
     B595   AD 02A9      8773           lda  ndbl
     B598   D0 03        8774           bne  use10
                         8775   
     B59A   CE 02AA      8776           dec  ndbh
     B59D   CE 02A9      8777   use10   dec  ndbl
     B5A0   AD 02AA      8778   use20   lda  ndbh
     B5A3   D0 0E        8779           bne  use30
                         8780   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 117-1
"frets"   FRETS.SRC

Error Addr  Code          Seq   Source statement

     B5A5   AD 02A9      8781           lda  ndbl
     B5A8   C9 03        8782           cmp  #3
     B5AA   B0 05        8783           bcs  use25
                         8784   
     B5AC   A9 72        8785           lda  #dskful
     B5AE   4C A86D      8786           jmp  errmsg
                         8787   
     B5B1   A9 01        8788   use25	lda  #1
     B5B3   60           8789   use30   rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 118
"frets"   FRETS.SRC

Error Addr  Code          Seq   Source statement

     B5B4   A5 6E        8791   setbam  lda  nodrv
     B5B6   F0 05        8792           beq  bamtrk     ; ok
                         8793   
     B5B8   A9 74        8794           lda  #nodriv
U    B5BA   20 0000 "    8795           jsr  cmder2     ; no drive present
                         8796   
     B5BD   20 B652      8797   bamtrk  jsr  setbp2     ; default base adr
     B5C0   A5 4D        8798           lda  track
     B5C2   C9 29        8799           cmp  #41        ; which bam ?
     B5C4   90 04        8800           bcc  stbm20     ; bam1
                         8801   
     B5C6   E9 28        8802           sbc  #40        ; range 40 trk per bam
     B5C8   E6 32        8803           inc  bmpnt+1    ; it's bam2
     B5CA   0A           8804   stbm20  asl  a          ; trk x6 offset
     B5CB   85 31        8805           sta  bmpnt      ; save x2
     B5CD   0A           8806           asl  a          ; x4
     B5CE   18           8807           clc     	; total=x6
     B5CF   65 31        8808           adc  bmpnt      ;
     B5D1   69 0A        8809           adc  #bindx-6   ; bam offset -1 trk blk
     B5D3   85 31        8810           sta  bmpnt
     B5D5   A0 00        8811           ldy  #0         ; point to blks free
     B5D7   60           8812           rts
                         8813   
     B5D8   A5 4E        8814   bambit  lda  sector     ; get sector bit in bam
     B5DA   4A           8815           lsr  a          ; sectr/8
     B5DB   4A           8816           lsr  a
     B5DC   4A           8817           lsr  a
     B5DD   A8           8818           tay
     B5DE   C8           8819           iny     	; adjust it
     B5DF   A5 4E        8820           lda  sector     ; get remainder
     B5E1   29 07        8821           and  #$07
     B5E3   AA           8822           tax     	; bit mask index
     B5E4   B1 31        8823           lda  (bmpnt),y
     B5E6   3D B5EA      8824           and  bmask,x
     B5E9   60           8825           rts
                         8826   
     B5EA   01 02 04     8827   bmask    .byte  1,2,4,8,16,32,64,128
     B5ED   08 10 20 
     B5F0   40 80 
                         8828   	.INCLUDE bamutl
                         8829   	.messg "bamutl"
                         8830   	.subttl "bamutl"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 119
"bamutl"   BAMUTL.SRC

Error Addr  Code          Seq   Source statement

     B5F2   A5 6C        8832   rdbam   lda  jobnum     ; save it
     B5F4   85 3F        8833   	sta  tmpjbn
     B5F6   AD 0A00      8834   	lda  bam1       ; is it in memory?
     B5F9   D0 2F        8835   	bne  bamend     ; yes
                         8836   
     B5FB   A9 07        8837   	lda  #>bam1->buff0
     B5FD   A2 01        8838   	ldx  #1         ; sector
     B5FF   20 B643      8839   	jsr  setts
     B602   20 94DE      8840   	jsr  doread
     B605   A9 08        8841   	lda  #>bam2->buff0
     B607   A2 02        8842   	ldx  #2         ; sec number
     B609   20 B643      8843   	jsr  setts
     B60C   20 94DE      8844   	jsr  doread
     B60F   4C B62A      8845   	jmp  bamend
                         8846   
     B612   A5 6C        8847   bamout  lda  jobnum     ; save it
     B614   85 3F        8848   	sta  tmpjbn
     B616   A9 07        8849   	lda  #>bam1->buff0
     B618   A2 01        8850   	ldx  #1         ; sector
     B61A   20 B643      8851   	jsr  setts
     B61D   20 94E2      8852   	jsr  dowrit
     B620   A9 08        8853   	lda  #>bam2->buff0
     B622   A2 02        8854   	ldx  #2         ; sector
     B624   20 B643      8855   	jsr  setts
     B627   20 94E2      8856   	jsr  dowrit
     B62A   A5 3F        8857   bamend  lda  tmpjbn
     B62C   85 6C        8858   	sta  jobnum     ; restore it
     B62E   A9 00        8859   	lda  #0
     B630   85 35        8860   	sta  wbam       ; it clean now!
     B632   60           8861   	rts
                         8862   
     B633   20 B515      8863   rddir   jsr  mapout     ; wrt bams if dirty
     B636   A2 00        8864   	ldx  #0         ; sector
     B638   A5 6C        8865   	lda  jobnum
     B63A   20 B643      8866   	jsr  setts      ; set dir hdrs
     B63D   20 94DE      8867   	jsr  doread     ; rd in the dir
     B640   4C B5F2      8868   	jmp  rdbam      ; rd bams if not in memory
                         8869   
     B643   85 6C        8870   setts   sta  jobnum     ;
     B645   86 4E        8871   	stx  sector     ; set up t/s
     B647   AE 022B      8872   	ldx  dirtrk     ; trk #18
     B64A   86 4D        8873   	stx  track
     B64C   4C 9588      8874   	jmp  seth       ; setup hdrs
                         8875   
     B64F   20 B5F2      8876   setbpt  jsr  rdbam      ; rd bam if not in memory
     B652   A9 0A        8877   setbp2  lda  #>bam1     ; preset bam pointers
     B654   85 32        8878   	sta  bmpnt+1
     B656   A9 00        8879   	lda  #0         ; default bam1 addr
     B658   85 31        8880   	sta  bmpnt
     B65A   60           8881   	rts
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 119-1
"bamutl"   BAMUTL.SRC

Error Addr  Code          Seq   Source statement

                         8882   
     B65B   AD 02A9      8883   numfre  lda  ndbl
     B65E   8D 028D      8884   	sta  nbtemp
     B661   AD 02AA      8885   	lda  ndbh
     B664   8D 028E      8886   	sta  nbtemp+1
     B667   60           8887   	rts
                         8888   	.INCLUDE tstfnd
                         8889           .messg "tstfnd"
                         8890           .subttl "tstfnd"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 120
"tstfnd"   TSTFND.SRC

Error Addr  Code          Seq   Source statement

                         8892   ; returns next available trk & sec
                         8893   ; given current t & s
                         8894   ;  allocation is from trk 40
                         8895   ;  towards 1 & 80, by full tracks
                         8896   
     B668   20 9D7C      8897   nxtts   jsr  gethdr
     B66B   A9 03        8898           lda  #3
     B66D   85 40        8899           sta  temp       ; set pass count
     B66F   A9 01        8900   	lda  #1         ; find next
     B671   05 35        8901           ora  wbam
     B673   85 35        8902           sta  wbam
     B675   20 B5B4      8903   nxtds   jsr  setbam
     B678   B1 31        8904           lda  (bmpnt),y
     B67A   D0 43        8905           bne  fndnxt
                         8906   
     B67C   A5 4D        8907           lda  track
     B67E   CD 022B      8908           cmp  dirtrk
     B681   F0 1D        8909           beq  nxterr
                         8910   
     B683   90 20        8911           bcc  nxt2
                         8912   
     B685   E6 4D        8913           inc  track
     B687   A5 4D        8914           lda  track
     B689   CD 022C      8915           cmp  maxtrk
     B68C   D0 E7        8916           bne  nxtds
                         8917   
     B68E   AE 022B      8918           ldx  dirtrk
     B691   CA           8919           dex
     B692   86 4D        8920           stx  track
     B694   E4 90        8921   	cpx  startrk
     B696   90 17        8922   	bcc  nxt3
                         8923   
     B698   A9 00        8924           lda  #0
     B69A   85 4E        8925           sta  sector
     B69C   C6 40        8926           dec  temp
     B69E   D0 D5        8927           bne  nxtds
                         8928   
     B6A0   A9 72        8929   nxterr  lda  #dskful
     B6A2   20 807C      8930           jsr  cmderr
                         8931   
     B6A5   A5 4D        8932   nxt2    lda  track
     B6A7   C5 90        8933   	cmp  startrk
     B6A9   90 04        8934   	bcc  nxt3
                         8935   
     B6AB   C6 4D        8936   	dec  track
     B6AD   D0 C6        8937           bne  nxtds
                         8938   
     B6AF   AE 022B      8939   nxt3	ldx  dirtrk
     B6B2   E8           8940           inx
     B6B3   86 4D        8941           stx  track
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 120-1
"tstfnd"   TSTFND.SRC

Error Addr  Code          Seq   Source statement

     B6B5   A9 00        8942           lda  #0
     B6B7   85 4E        8943           sta  sector
     B6B9   C6 40        8944           dec  temp
     B6BB   D0 B8        8945           bne  nxtds
                         8946   
     B6BD   F0 E1        8947           beq  nxterr
                         8948   
     B6BF   A5 4E        8949   fndnxt  lda  sector     ; get current sec
     B6C1   18           8950           clc     	; add in the incr
     B6C2   65 2E        8951           adc  secinc
     B6C4   85 4E        8952           sta  sector
     B6C6   A5 75        8953   	lda  numsec	; find next sec
     B6C8   85 28        8954           sta  cmd
     B6CA   C5 4E        8955           cmp  sector	; is it over?
     B6CC   B0 0B        8956           bcs  fndn0      ; no..it's ok
                         8957   
     B6CE   38           8958   	sec
     B6CF   A5 4E        8959   	lda  sector
     B6D1   E5 75        8960   	sbc  numsec
     B6D3   85 4E        8961   	sta  sector
     B6D5   F0 02        8962   	beq  fndn0
                         8963   
     B6D7   C6 4E        8964   	dec  sector	; -1
                         8965   
     B6D9   20 B746      8966   fndn0   jsr  getsec
     B6DC   F0 03        8967           beq  fndn2	; nothing here...
                         8968   
     B6DE                8969   fndn1
     B6DE   4C B572      8970   	jmp  wused
                         8971   
     B6E1                8972   fndn2
     B6E1   A9 00        8973           lda  #0
     B6E3   85 4E        8974           sta  sector     ; start again
     B6E5   20 B746      8975   	jsr  getsec
     B6E8   D0 F4        8976           bne  fndn1	; sumtin here...
                         8977   
     B6EA   4C B741      8978   	jmp  derr
                         8979   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 121
"tstfnd"   TSTFND.SRC

Error Addr  Code          Seq   Source statement

     B6ED   A9 01        8981   intts   lda  #1         ; find init opt t&s
     B6EF   05 35        8982           ora  wbam
     B6F1   85 35        8983           sta  wbam
     B6F3   A5 55        8984           lda  r0
     B6F5   48           8985           pha     	; save temp var
     B6F6   A9 01        8986           lda  #1         ; clr r0
     B6F8   85 55        8987           sta  r0
     B6FA   AD 022B      8988   its1    lda  dirtrk     ; track:= dirtrk-r0
     B6FD   38           8989           sec
     B6FE   E5 55        8990           sbc  r0
     B700   85 4D        8991           sta  track
     B702   08           8992   	php
     B703   C5 90        8993   	cmp  startrk	; ok
     B705   B0 04        8994   	bcs  1$		; startrk < track
                         8995   
     B707   28           8996   	plp
     B708   4C B717      8997   	jmp  its2
                         8998   
     B70B   28           8999   1$	plp
     B70C   90 09        9000           bcc  its2       ; if t>0
                         9001   
     B70E   F0 07        9002           beq  its2       ; then begin
                         9003   
     B710   20 B5B4      9004   	jsr  setbam     ; set the bam pntr
     B713   B1 31        9005           lda  (bmpnt),y
     B715   D0 1B        9006           bne  fndsec
                         9007   
     B717   AD 022B      9008   its2    lda  dirtrk     ; trk= dirtrk+r0
     B71A   18           9009           clc
     B71B   65 55        9010           adc  r0
     B71D   85 4D        9011           sta  track
     B71F   E6 55        9012           inc  r0         ; next trk
     B721   CD 022C      9013           cmp  maxtrk
     B724   90 05        9014           bcc  its3       ; next icf cmnd err
                         9015   
     B726   A9 67        9016           lda  #systs
U    B728   20 0000 "    9017           jsr  cmder2
                         9018   
     B72B   20 B5B4      9019   its3    jsr  setbam     ; set ptr
     B72E   B1 31        9020           lda  (bmpnt),y
     B730   F0 C8        9021           beq  its1
                         9022   
     B732   68           9023   fndsec  pla
     B733   85 55        9024           sta  r0         ; restore r0
     B735   A9 00        9025           lda  #0
     B737   85 4E        9026           sta  sector
     B739   20 B746      9027           jsr  getsec
     B73C   F0 03        9028           beq  derr
                         9029   
     B73E   4C B572      9030           jmp  wused
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 121-1
"tstfnd"   TSTFND.SRC

Error Addr  Code          Seq   Source statement

                         9031   
     B741   A9 71        9032   derr    lda  #direrr
U    B743   20 0000 "    9033           jsr  cmder2
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 122
"tstfnd"   TSTFND.SRC

Error Addr  Code          Seq   Source statement

     B746   20 B5B4      9035   getsec  jsr  setbam     ; set bam, find avl sec
     B749   20 B75E      9036           jsr  avck       ; chk bits & count
     B74C   A5 4E        9037   gs10    lda  sector
     B74E   C5 75        9038           cmp  numsec
     B750   B0 09        9039           bcs  gs20
                         9040   
     B752   20 B5D8      9041           jsr  bambit     ; get sector offset
     B755   D0 06        9042           bne  gs30
                         9043   
     B757   E6 4E        9044           inc  sector
     B759   D0 F1        9045           bne  gs10       ; bra
                         9046   
     B75B   A9 00        9047   gs20    lda  #0         ; nothing free
     B75D   60           9048   gs30    rts     	; (z=1): free
                         9049   
     B75E   A9 00        9050   avck    lda  #0
     B760   85 2F        9051           sta  ftnum      ; blk counter
U    B762   AC 0000 "    9052           ldy  bamsiz
     B765   88           9053           dey     	; adjust it
     B766   A2 08        9054   ac10    ldx  #8
     B768   B1 31        9055           lda  (bmpnt),y
     B76A   0A           9056   ac20    asl  a          ; used ?
     B76B   90 02        9057           bcc  ac30       ; no
                         9058   
     B76D   E6 2F        9059           inc  ftnum      ; count it
     B76F   CA           9060   ac30    dex
     B770   D0 F8        9061           bne  ac20       ; do next bit
                         9062   
     B772   88           9063           dey     	; do next byte
     B773   D0 F1        9064           bne  ac10
                         9065   
     B775   B1 31        9066           lda  (bmpnt),y
     B777   C5 2F        9067           cmp  ftnum
     B779   D0 01        9068           bne  ac40       ; counts don't match
                         9069   
     B77B   60           9070           rts
                         9071   
     B77C   A9 71        9072   ac40    lda  #direrr
U    B77E   20 0000 "    9073           jsr  cmder2
                         9074   	.INCLUDE part
                         9075   	.messg "part"
                         9076   	.subttl "part"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 123
"part"   PART.SRC

Error Addr  Code          Seq   Source statement

                         9078   ; Partition Routines
                         9079   ;
                         9080   ; USAGE: Create
                         9081   ;"/0:par_name,"+chr$(start-trk)+chr$(start-sector)+chr$(lo-blks)+chr$(hi-blks)+",C"
                         9082   ;
                         9083   ; USAGE: Select
                         9084   ;"/0:par_name"
                         9085   ;
     B781                9086   part
     B781   20 84AE      9087   	jsr  autoi	; init drive
     B784   A5 29        9088   	lda  cmdsiz
     B786   C9 02        9089   	cmp  #2
     B788   90 6D        9090   	bcc  8$		; select default
                         9091   
     B78A   A9 01        9092   	lda  #1
     B78C   8D 0291      9093   	sta  filtbl	; set filename
     B78F   20 81FD      9094   	jsr  onedrv	; select drive
     B792   20 82B9      9095   	jsr  lookup	; does it exist
                         9096   
     B795   AD 0297      9097   	lda  filtrk
     B798   F0 13        9098   	beq  5$		; no br, file exists
                         9099   
     B79A   20 B851      9100   	jsr  testlimit
     B79D   90 20        9101   	bcc  6$		; no parms must accept as select partition
                         9102   
     B79F   A9 63        9103   	lda  #flexst	; file exists
     B7A1   2C           9104   	.byte  skip2
     B7A2   A9 62        9105   2$	lda  #flntfd	; file not found
     B7A4   2C           9106   	.byte  skip2
     B7A5   A9 30        9107   3$	lda  #badsyn	; bad syntax
     B7A7   2C           9108   	.byte  skip2
     B7A8   A9 77        9109   4$	lda  #illpar	; illegal partition
     B7AA   20 807C      9110   	jsr  cmderr
                         9111   
     B7AD   20 B851      9112   5$	jsr  testlimit
     B7B0   90 F0        9113   	bcc  2$		; no parms can't create partition
                         9114   
     B7B2   AE 0290      9115   	ldx  limit
     B7B5   BD 0206      9116   	lda  cmdbuf+6,x
     B7B8   C9 43        9117   	cmp  #'C	; create char
     B7BA   D0 E9        9118   	bne  3$		; syntax error
                         9119   
     B7BC   4C B88D      9120   	jmp  creatpart	; create partition file
                         9121   
     B7BF   A5 F4        9122   6$	lda  pattyp
     B7C1   29 07        9123   	and  #typmsk
     B7C3   C9 05        9124   	cmp  #partyp	; partition file?
     B7C5   D0 DB        9125   	bne  2$
                         9126   
     B7C7   20 B323      9127   	jsr  setparts	; set partition t&s
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 123-1
"part"   PART.SRC

Error Addr  Code          Seq   Source statement

     B7CA   20 94B5      9128   7$	jsr  tschk	; check t&s
     B7CD   20 B2EF      9129   	jsr  calcpar	; calc maxtrk, etc...
     B7D0   D0 F8        9130   	bne  7$
                         9131   
     B7D2   90 D4        9132   	bcc  4$		; carry must be set
                         9133   
     B7D4   A0 02        9134   	ldy  #2
     B7D6   B1 64        9135   	lda  (dirbuf),y	; get sector
     B7D8   D0 CE        9136   	bne  4$		; must be zero
                         9137   
     B7DA   88           9138   	dey
     B7DB   A5 4D        9139   	lda  track	; get maxtrk
     B7DD   AA           9140   	tax		; save
     B7DE   F1 64        9141   	sbc  (dirbuf),y	; sub starting track
     B7E0   C9 02        9142   	cmp  #2
     B7E2   F0 C4        9143   	beq  4$		; illegal
                         9144   
     B7E4   90 C2        9145   	bcc  4$		; illegal
                         9146   
     B7E6   B1 64        9147   	lda  (dirbuf),y
     B7E8   8D 022B      9148   	sta  dirtrk	; set system track
     B7EB   85 90        9149   	sta  startrk	; set starting track
     B7ED   8E 022C      9150   	stx  maxtrk	; set maxtrk
     B7F0   CA           9151   	dex
     B7F1   CA           9152   	dex
     B7F2   86 8F        9153   	stx  pmaxtrk	; set physical maxtrk
     B7F4   4C B7FA      9154   	jmp  9$		; bra
                         9155   
     B7F7   20 B0B3      9156   8$	jsr  setdef	; set default
     B7FA   20 9262      9157   9$	jsr  clrchn	; clear all channels
     B7FD   20 8F03      9158   	jsr  initdr	; init directory
     B800   A5 90        9159   	lda  startrk
     B802   85 4D        9160   	sta  track	; exit with starting track in track position of OK...
     B804   AC 022C      9161   	ldy  maxtrk	; & last track in sector position
     B807   88           9162   	dey
     B808   84 4E        9163   	sty  sector
     B80A   A9 02        9164   	lda  #2		; ok partition
     B80C   A0 00        9165   	ldy  #0
     B80E   4C 805F      9166   	jmp  partend
                         9167   
                         9168   
                         9169   
     B811                9170   scanpart
     B811   A5 35        9171   	lda  wbam
     B813   48           9172   	pha
     B814   AD 02A9      9173   	lda  ndbl
     B817   48           9174   	pha
     B818   AD 02AA      9175   	lda  ndbh	; save
     B81B   48           9176   	pha
     B81C   20 B85F      9177   	jsr  settslim	; set t&s limits
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 123-2
"part"   PART.SRC

Error Addr  Code          Seq   Source statement

     B81F   20 94B5      9178   1$	jsr  tschk	; check limits
     B822   A5 4D        9179   	lda  track
     B824   C9 28        9180   	cmp  #systrack	; hard system track?
     B826   F0 19        9181   	beq  2$		; br, error
                         9182   
     B828   20 B572      9183   	jsr  wused	; allocate it
     B82B   F0 14        9184   	beq  2$		; already allocated? then error
                         9185   
     B82D   20 B546      9186   	jsr  frets	; freeit
                         9187   
     B830   20 B2EF      9188   	jsr  calcpar	; next
     B833   D0 EA        9189   	bne  1$
                         9190   
     B835   68           9191   	pla
     B836   8D 02AA      9192   	sta  ndbh
     B839   68           9193   	pla
     B83A   8D 02A9      9194   	sta  ndbl
     B83D   68           9195   	pla
     B83E   85 35        9196   	sta  wbam
     B840   60           9197   	rts
                         9198   
     B841   68           9199   2$	pla		; restore
     B842   8D 02AA      9200   	sta  ndbh
     B845   68           9201   	pla
     B846   8D 02A9      9202   	sta  ndbl
     B849   68           9203   	pla
     B84A   85 35        9204   	sta  wbam
     B84C   A9 67        9205   	lda  #systs
U    B84E   4C 0000 "    9206   	jmp  cmder2	; error
                         9207   
                         9208   
     B851                9209   testlimit
     B851   A2 01        9210   	ldx  #1
     B853   20 8526      9211   	jsr  fndlmt	; find = or ,
     B856   A5 29        9212   	lda  cmdsiz
     B858   38           9213   	sec
     B859   ED 0290      9214   	sbc  limit
     B85C   C9 04        9215   	cmp  #4
     B85E   60           9216   	rts
                         9217   
                         9218   
                         9219   
     B85F                9220   settslim
                         9221   
     B85F   AC 0290      9222   	ldy  limit
     B862   C8           9223   	iny
     B863   B9 0200      9224   	lda  cmdbuf,y
     B866   85 4D        9225   	sta  track
     B868   C8           9226   	iny
     B869   B9 0200      9227   	lda  cmdbuf,y
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 123-3
"part"   PART.SRC

Error Addr  Code          Seq   Source statement

     B86C   85 4E        9228   	sta  sector
     B86E   C8           9229   	iny
     B86F   B9 0200      9230   	lda  cmdbuf,y
     B872   8D 01EE      9231   	sta  lo
     B875   C8           9232   	iny
     B876   B9 0200      9233   	lda  cmdbuf,y
     B879   8D 01ED      9234   	sta  hi
     B87C   18           9235   	clc
     B87D   AD 01EE      9236   	lda  lo
     B880   6D 01ED      9237   	adc  hi
     B883   F0 03        9238   	beq  1$		; =0?
                         9239   
     B885   4C 94B5      9240   	jmp  tschk	; chk parms
     B888   A9 77        9241   1$	lda  #illpar
     B88A   20 807C      9242   	jsr  cmderr	; illegal partition
                         9243   
                         9244   
     B88D                9245   creatpart
                         9246   
     B88D   20 B811      9247   	jsr  scanpart	; test range given
     B890   A9 05        9248   	lda  #partyp	; open partition
     B892   8D 022D      9249   	sta  type
     B895   A9 12        9250   	lda  #iwsa	; internal write channel
     B897   85 52        9251   	sta  sa
     B899   20 B85F      9252   	jsr  settslim	; set t&s limits
     B89C   20 9BC6      9253   	jsr  opnwch1	; open internal write channel
     B89F   20 95AB      9254   	jsr  addfil	; addfil to directory
     B8A2   20 B85F      9255   	jsr  settslim	; set t&s limits
     B8A5   20 94B5      9256   1$	jsr  tschk	; check limits
     B8A8   A5 4D        9257   	lda  track
     B8AA   20 B572      9258   	jsr  wused	; allocate it
     B8AD   20 B2EF      9259   	jsr  calcpar	; next
     B8B0   D0 F3        9260   	bne  1$
                         9261   
     B8B2   20 B85F      9262   	jsr  settslim	; set t&s limits
     B8B5   A6 50        9263   	ldx  lindx
     B8B7   AD 01EE      9264   	lda  lo
     B8BA   9D 0249      9265   	sta  nbkl,x	; low blks
     B8BD   AD 01ED      9266   	lda  hi
     B8C0   9D 0250      9267   	sta  nbkh,x	; high blks
     B8C3   A9 00        9268   	lda  #0
     B8C5   20 8EB1      9269   	jsr  putbyt	; write one byte, nil
     B8C8   A9 12        9270   	lda  #iwsa
     B8CA   85 52        9271   	sta  sa
     B8CC   20 999F      9272   	jsr  clschn	; close channel
     B8CF   4C 804C      9273   	jmp  endcmd
                         9274   	.INCLUDE fastld
                         9275   	.messg "fastld"
                         9276   	.subttl "fastld"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 124
"fastld"   FASTLD.SRC

Error Addr  Code          Seq   Source statement

     B8D2   4C 804C      9278   slodown	jmp  endcmd	; not today
                         9279   
     B8D5   A9 08        9280   fstload lda  #bit3
     B8D7   24 76        9281   	bit  fsflag	; fast serial enabled ?
     B8D9   F0 F7        9282   	beq  slodown
                         9283   	
     B8DB   20 ACD4      9284   	jsr  spout	; output
     B8DE   20 BA06      9285   	jsr  set_fil	; setup filename for parser
     B8E1   B0 59        9286   	bcs  9$
                         9287   	
     B8E3   20 84AE      9288           jsr  autoi	; init mechanism
     B8E6   A5 6E        9289   	lda  nodrv	; chk status
     B8E8   D0 52        9290   	bne  9$		; no drive status
                         9291   
     B8EA   A9 80        9292   	lda  #bit7
     B8EC   85 3C        9293   	sta  tmp+4	; eoi first time thru flag
     B8EE   20 BA64      9294   	jsr  setvectors ; save/set vectors
                         9295   
     B8F1   AD 0200      9296   	lda  cmdbuf
     B8F4   C9 2A        9297   	cmp  #'*	; load last ?
     B8F6   D0 0F        9298   	bne  7$
                         9299   	
     B8F8   A5 4C        9300   	lda  prgtrk	; any file ?
     B8FA   F0 0B        9301   	beq  7$
                         9302   
     B8FC   48           9303   	pha		; save track
     B8FD   AD 028B      9304   	lda  prgsec
     B900   8D 029C      9305   	sta  filsec	; update
     B903   68           9306   	pla
     B904   4C B941      9307   	jmp  1$
                         9308   
     B907   A9 00        9309   7$	lda  #0
     B909   A8           9310   	tay
     B90A   AA           9311   	tax		; clear .a, .x, .y
     B90B   8D 0291      9312   	sta  filtbl	; set up for file name parser
     B90E   20 81FD      9313           jsr  onedrv     ; select drive
     B911   AD 022F      9314   	lda  f2cnt
     B914   48           9315   	pha
     B915   A9 01        9316   	lda  #1
     B917   8D 022F      9317   	sta  f2cnt
     B91A   A9 FF        9318   	lda  #$ff
     B91C   85 55        9319   	sta  r0		; set flag
     B91E   20 82B9      9320   	jsr  lookup	; locate file
     B921   68           9321   	pla
     B922   8D 022F      9322   	sta  f2cnt	; restore var
     B925   20 BA95      9323   	jsr  resvectors ; restore error vectors
                         9324   
     B928   24 7C        9325   	bit  switch	; seq flag set ?
     B92A   30 08        9326   	bmi  8$
                         9327   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 124-1
"fastld"   FASTLD.SRC

Error Addr  Code          Seq   Source statement

     B92C   A5 F4        9328    	lda  pattyp	; is it a program file ?
     B92E   29 07        9329   	and  #typmsk
     B930   C9 02        9330   	cmp  #2
     B932   D0 05        9331   	bne  6$		; not prg
                         9332   
     B934   AD 0297      9333   8$      lda  filtrk     ; check if found. err if not
     B937   D0 08        9334           bne  1$		; br, file found
                         9335   
     B939   A2 02        9336   6$    	ldx  #%00000010	; file not found
     B93B   2C           9337   	.byte skip2
     B93C   A2 0F        9338   9$	ldx  #%00001111	; no drive
     B93E   4C B9EC      9339           jmp  syserr
                         9340   
     B941   85 4C        9341   1$      sta  prgtrk	; save for next
     B943   A2 00        9342   	ldx  #0		; get channel offset
     B945   95 0B        9343   	sta  hdrs,x	; setup track
     B947   AD 029C      9344           lda  filsec     ; & sector
     B94A   8D 028B      9345   	sta  prgsec	; for next time
     B94D   95 0C        9346           sta  hdrs+1,x
                         9347   
     B94F   58           9348   2$	cli		; let controller run
     B950   A2 00        9349   	ldx  #0
     B952   A9 AA        9350   	lda  #tread_dv	; get cmd and send it
     B954   20 BFB7      9351   	jsr  stbctr	; whack the controller in the head
     B957   AA           9352   	tax
     B958   E0 02        9353   	cpx  #2		; error ?
     B95A   90 03        9354   	bcc  5$
                         9355   	
     B95C   4C B9D7      9356   	jmp  ctlerr
                         9357   
     B95F   78           9358   5$	sei
     B960   A0 00        9359   	ldy  #0
     B962   84 7E        9360   	sty  bufpnt
     B964   B9 009F      9361   	lda  cacheoff,y ; controller passed us a pointer to the data
     B967   29 7F        9362   	and  #all-bit7
     B969   18           9363   	clc
     B96A   65 8C        9364   	adc  cache+1	; get offset into data
     B96C   85 7F        9365   	sta  bufpnt+1
     B96E   B1 7E        9366   	lda  (bufpnt),y	; check status
     B970   F0 1E        9367   	beq  end_of_file
                         9368   
     B972   06 3C        9369   	asl  tmp+4	; clear flag
                         9370   
     B974   20 01FC      9371   	jsr  jhandsk	; handshake error to the host
                         9372   
     B977   A0 02        9373   	ldy  #2
     B979   B1 7E        9374   3$	lda  (bufpnt),y
     B97B   AA           9375   	tax		; save data in .x
     B97C   20 01FC      9376   	jsr  jhandsk	; handshake it to the host
     B97F   C8           9377   	iny
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 124-2
"fastld"   FASTLD.SRC

Error Addr  Code          Seq   Source statement

     B980   D0 F7        9378   	bne  3$
                         9379   
     B982   A2 00        9380   	ldx  #0		; jobnum * 2
     B984   B1 7E        9381   	lda  (bufpnt),y ; .y = 0
     B986   95 0B        9382   	sta  hdrs,x	; next track
     B988   C8           9383   	iny  		; sector entry
     B989   B1 7E        9384   	lda  (bufpnt),y
     B98B   95 0C        9385   	sta  hdrs+1,x	; next sector
     B98D   4C B94F      9386   	jmp  2$
                         9387   
                         9388   
     B990                9389   end_of_file
     B990   A2 1F        9390   	ldx  #$1f	; eof
     B992   20 01FC      9391   	jsr  jhandsk	; handshake it to the host
                         9392   
     B995   24 3C        9393   	bit  tmp+4	; first time through ?
     B997   10 1F        9394   	bpl  1$	        ; br, nope
                         9395   
     B999   A0 01        9396   	ldy  #1		; .y = 1
     B99B   B1 7E        9397   	lda  (bufpnt),y	; number of bytes
     B99D   38           9398   	sec
     B99E   E9 03        9399   	sbc  #3
     B9A0   85 38        9400   	sta  tmp	; save it
     B9A2   AA           9401   	tax		; send it
     B9A3   20 01FC      9402   	jsr  jhandsk	; handshake it to the host
                         9403   
     B9A6   C8           9404   	iny		; next
     B9A7   B1 7E        9405   	lda  (bufpnt),y	; address low
     B9A9   AA           9406   	tax
     B9AA   20 01FC      9407   	jsr  jhandsk	; handshake it to the host
                         9408   
     B9AD   C8           9409   	iny
     B9AE   B1 7E        9410   	lda  (bufpnt),y	; address high
     B9B0   AA           9411   	tax
     B9B1   20 01FC      9412   	jsr  jhandsk	; handshake it to the host
     B9B4   A0 04        9413   	ldy  #4		; skip addresses
     B9B6   D0 0D        9414   	bne  3$		; bra
                         9415   
     B9B8   A0 01        9416   1$      ldy  #1
     B9BA   B1 7E        9417   	lda  (bufpnt),y	; number of bytes
     B9BC   AA           9418   	tax
     B9BD   CA           9419   	dex
     B9BE   86 38        9420   	stx  tmp	; save here
     B9C0   20 01FC      9421   	jsr  jhandsk	; handshake it to the host
                         9422   
     B9C3   A0 02        9423   	ldy  #2		; start at data
     B9C5   B1 7E        9424   3$	lda  (bufpnt),y
     B9C7   AA           9425   	tax
     B9C8   20 01FC      9426   	jsr  jhandsk	; handshake it to the host
     B9CB   C8           9427   	iny
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 124-3
"fastld"   FASTLD.SRC

Error Addr  Code          Seq   Source statement

     B9CC   C6 38        9428   	dec  tmp	; use it as a temp
     B9CE   D0 F5        9429   	bne  3$
                         9430   
     B9D0   4C 804C      9431   	jmp  endcmd	; done
                         9432   ;
                         9433   ;
                         9434   ; error handler
                         9435   
     B9D3                9436   flderror
     B9D3   AA           9437   	tax
     B9D4   20 BA95      9438   	jsr  resvectors
                         9439   
     B9D7   20 B9FB      9440   ctlerr  jsr  finld	; finish up
     B9DA   A2 00        9441   	ldx  #0
U    B9DC   4C 0000 "    9442   	jmp  error	; error out.....
                         9443   
     B9DF                9444   fldcmderr
     B9DF   48           9445   	pha		; save error
     B9E0   08           9446   	php
     B9E1   78           9447   	sei
     B9E2   A2 02        9448   	ldx  #2
     B9E4   20 01FC      9449   	jsr  jhandsk	; send status back
     B9E7   28           9450   	plp
     B9E8   20 BA95      9451   	jsr  resvectors
     B9EB   68           9452   	pla
     B9EC   20 B9FB      9453   syserr  jsr  finld	; finish up
     B9EF   C9 02        9454   	cmp  #2
     B9F1   F0 03        9455   	beq  1$
                         9456   
     B9F3   A9 74        9457   	lda  #nodriv	; no active drive
     B9F5   2C           9458   	.byte skip2
     B9F6   A9 62        9459   1$	lda  #flntfd	; file not found
     B9F8   4C 807C      9460   	jmp  cmderr	; never more...
                         9461   
     B9FB   78           9462   finld	sei
     B9FC   86 38        9463   	stx  tmp	; save error
     B9FE   A2 02        9464   	ldx  #2		; file not found
     BA00   20 01FC      9465   	jsr  jhandsk	; give it to him
     BA03   A5 38        9466   	lda  tmp	; get error back
     BA05   60           9467   	rts
                         9468   
                         9469   ;
                         9470   ; burst load filename parser
                         9471   ;
     BA06   A0 03        9472   set_fil ldy  #3		; default .y
     BA08   A5 29        9473   	lda  cmdsiz	; delete burst load command
     BA0A   38           9474   	sec
     BA0B   E9 03        9475   	sbc  #3
     BA0D   85 29        9476   	sta  cmdsiz	; new command size
                         9477   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 124-4
"fastld"   FASTLD.SRC

Error Addr  Code          Seq   Source statement

     BA0F   AD 0204      9478   	lda  cmdbuf+4   ; drv # given ?
     BA12   C9 3A        9479   	cmp  #':
     BA14   D0 0E        9480   	bne  1$
                         9481   
     BA16   AD 0203      9482   	lda  cmdbuf+3
     BA19   AA           9483   	tax		; save
     BA1A   29 30        9484   	and  #'0
     BA1C   C9 30        9485   	cmp  #'0        ; 0:file ?
     BA1E   D0 04        9486   	bne  1$
                         9487   
     BA20   E0 31        9488   	cpx  #'1	; chk for error
     BA22   F0 1A        9489   	beq  4$
                         9490   
     BA24   AD 0203      9491   1$	lda  cmdbuf+3   ; drv # given ?
     BA27   C9 3A        9492   	cmp  #':
     BA29   D0 03        9493   	bne  2$
                         9494   
     BA2B   C6 29        9495   	dec  cmdsiz
     BA2D   C8           9496   	iny
                         9497   
     BA2E   A2 00        9498   2$	ldx  #0		; start at cmdbuf+0
     BA30   B9 0200      9499   3$      lda  cmdbuf,y	; extract file-name
     BA33   9D 0200      9500   	sta  cmdbuf,x
     BA36   C8           9501   	iny
     BA37   E8           9502   	inx
     BA38   E4 29        9503   	cpx  cmdsiz	; done ?
     BA3A   D0 F4        9504   	bne  3$		; delete cmd from buffer
                         9505   
     BA3C   18           9506   	clc
     BA3D   24           9507   	.byte skip1
     BA3E   38           9508   4$	sec		; error
     BA3F   60           9509   	rts
                         9510   
                         9511   ;
                         9512   ; burst handshake routine
                         9513   ;
     BA40                9514   handsk			; .x contains data
     BA40   AD 4001      9515   1$	lda  pb		; debounce
     BA43   CD 4001      9516           cmp  pb
     BA46   D0 F8        9517           bne  1$
                         9518   
     BA48   29 FF        9519   	and  #$ff	; set/clr neg flag
     BA4A   30 15        9520           bmi  3$		; br, attn low
                         9521   
     BA4C   45 76        9522           eor  fsflag	; wait for state chg
     BA4E   29 04        9523           and  #4
     BA50   F0 EE        9524           beq  1$
                         9525   
     BA52   8E 400C      9526           stx  sdr	; send it
     BA55   45 76        9527           eor  fsflag
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 124-5
"fastld"   FASTLD.SRC

Error Addr  Code          Seq   Source statement

     BA57   85 76        9528           sta  fsflag	; change state of clk
                         9529   
     BA59   A9 08        9530           lda  #8
     BA5B   2C 400D      9531   2$	bit  icr	; wait transmission time
     BA5E   F0 FB        9532           beq  2$
                         9533   
     BA60   60           9534           rts
                         9535   
U    BA61   4C 0000 "    9536   3$	jmp  jatnsrv	; bye-bye the host wants us
                         9537   
                         9538   ;
                         9539   ; save/set vector routine
                         9540   ;
     BA64                9541   setvectors
     BA64   20 BA7C      9542   	jsr  savectors
     BA67   A9 D3        9543   	lda  #<flderror	; setup new vectors
     BA69   8D 01AE      9544   	sta  verror
     BA6C   A9 B9        9545   	lda  #>flderror
     BA6E   8D 01AF      9546   	sta  verror+1
     BA71   A9 DF        9547   	lda  #<fldcmderr
     BA73   8D 01BA      9548   	sta  vcmder2
     BA76   A9 DF        9549   	lda  #<fldcmderr
     BA78   8D 01BB      9550   	sta  vcmder2+1
     BA7B   60           9551   	rts
                         9552   
                         9553   
     BA7C                9554   savectors
     BA7C   AD 01AE      9555   	lda  verror	; save error vectors
     BA7F   8D 01E6      9556   	sta  savects
     BA82   AD 01AF      9557   	lda  verror+1
     BA85   8D 01E7      9558   	sta  savects+1
     BA88   AD 01BA      9559   	lda  vcmder2
     BA8B   8D 01E8      9560   	sta  savects+2
     BA8E   AD 01BB      9561   	lda  vcmder2+1
     BA91   8D 01E9      9562   	sta  savects+3
     BA94   60           9563   	rts
                         9564   ;
                         9565   ; restore vector routine
                         9566   ;
     BA95                9567   resvectors
     BA95   AD 01E6      9568   	lda  savects
     BA98   8D 01AE      9569   	sta  verror
     BA9B   AD 01E7      9570   	lda  savects+1
     BA9E   8D 01AF      9571   	sta  verror+1
     BAA1   AD 01E8      9572   	lda  savects+2
     BAA4   8D 01BA      9573   	sta  vcmder2
     BAA7   AD 01E9      9574   	lda  savects+3
     BAAA   8D 01BB      9575   	sta  vcmder2+1
     BAAD   60           9576   	rts
                         9577   	.INCLUDE burstc
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 124-6
"fastld"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                         9578   	.messg "burstc"
                         9579   	.subttl "burstc"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 125
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BAAE                9581   logical_err
     BAAE   A9 8D        9582   	lda  #%10001101
     BAB0   4C BAFC      9583   	jmp  fail
                         9584   
     BAB3                9585   logical_rd
     BAB3   A5 8A        9586   	lda  dkoramask
     BAB5   30 F7        9587   	bmi  logical_err
                         9588   
     BAB7   A2 00        9589   	ldx  #0         ; job #0
     BAB9   AD 0203      9590   	lda  cmdbuf+3   ; get track
     BABC   95 0B        9591   	sta  hdrs,x
     BABE   AD 0204      9592   	lda  cmdbuf+4   ; get sector
     BAC1   95 0C        9593   	sta  hdrs+1,x
                         9594   
     BAC3   A9 80        9595   	lda  #read_dv   ; read
     BAC5   20 BFB0      9596   	jsr  stbctl
     BAC8   20 BF66      9597   	jsr  upinst     ; update controller status
                         9598   
     BACB   24 7C        9599   	bit  switch     ; check E
     BACD   70 07        9600   	bvs  lerror_sw
                         9601   
     BACF   C9 02        9602   	cmp  #2         ; error
     BAD1   90 03        9603   	bcc  lerror_sw
                         9604   
     BAD3   4C BAFC      9605   	jmp  fail
                         9606   
     BAD6                9607   lerror_sw
     BAD6   20 BFAB      9608   	jsr  hskstat    ; handshake on state of clkin
                         9609   
     BAD9   A0 00        9610   	ldy  #0         ; even page
     BADB   84 7E        9611   	sty  bufpnt
     BADD   A9 03        9612   	lda  #>buff0
     BADF   85 7F        9613   	sta  bufpnt+1   ; pointer to data
     BAE1   B1 7E        9614   1$      lda  (bufpnt),y ; get data
     BAE3   20 BF86      9615   	jsr  hskrd      ; handshake on state
     BAE6   C8           9616   	iny
     BAE7   D0 F8        9617   	bne  1$
                         9618   
     BAE9   CE 0205      9619   	dec  cmdbuf+5   ; any more sectors
     BAEC   F0 06        9620   	beq  2$
                         9621   
     BAEE   20 C07A      9622   	jsr  lsectnx    ; next sector
     BAF1   4C BAB3      9623   	jmp  logical_rd ; read next
                         9624   
     BAF4   4C BF44      9625   2$      jmp  lchksee    ; next track
                         9626   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 126
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BAF7   A9 0B        9628   nchnl   lda  #%00001011 ; no channel
     BAF9   2C           9629   	.byte skip2
     BAFA   A9 4F        9630   ndkrd   lda  #%01001111 ; no drive
                         9631   
     BAFC   20 BF66      9632   fail    jsr  upinst     ; update dkmode
     BAFF   20 BEBF      9633   	jsr  statqy     ; wait for state handshake
     BB02   AD 01EA      9634   final   lda  burst_stat
     BB05   C9 02        9635   	cmp  #2
     BB07   B0 01        9636   	bcs  exbad
                         9637   
     BB09   60           9638   	rts
                         9639   
     BB0A   29 0F        9640   exbad   and  #15        ; bits 0-3 only
     BB0C   A2 00        9641   	ldx  #0         ; jobnum
U    BB0E   4C 0000 "    9642   	jmp  error      ; controller error entry
                         9643   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 127
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                         9645   ; (1) FAST READ
                         9646   
     BB11   A5 25        9647   fstrd   lda  wpsw       ; disk change?
     BB13   D0 E2        9648   	bne  nchnl      ; br, bad
                         9649   
     BB15   20 ACD4      9650   fstread jsr  spout      ; output mode
     BB18   A5 7C        9651   	lda  switch     ; check for L
     BB1A   30 97        9652   	bmi  logical_rd
                         9653   
     BB1C   A2 00        9654   	ldx  #0         ; job #0
     BB1E   AD 0203      9655   	lda  cmdbuf+3   ; get track
     BB21   95 0B        9656   	sta  hdrs,x
     BB23   AD 0204      9657   	lda  cmdbuf+4   ; get sector
     BB26   95 0C        9658   	sta  hdrs+1,x
                         9659   
     BB28   A5 7C        9660   	lda  switch
     BB2A   29 10        9661   	and  #bit4
     BB2C   9D 01CE      9662   	sta  sids,x
     BB2F   A9 B2        9663   	lda  #tpread_dv ; read
     BB31   20 BFB0      9664   	jsr  stbctl
     BB34   20 BF66      9665   	jsr  upinst     ; update controller status
                         9666   
     BB37   24 7C        9667   	bit  switch     ; check E
     BB39   70 04        9668   	bvs  error_sw
                         9669   
     BB3B   C9 02        9670   	cmp  #2         ; error
     BB3D   B0 BD        9671   	bcs  fail
                         9672   
     BB3F                9673   error_sw
     BB3F   20 BFAB      9674   	jsr  hskstat    ; handshake on state of clkin
                         9675   
     BB42                9676   buffer_sw
     BB42   A0 00        9677   	ldy  #0         ; even page
     BB44   84 7E        9678   	sty  bufpnt
     BB46   B9 009F      9679   	lda  cacheoff,y
     BB49   29 7F        9680   	and  #all-bit7
     BB4B   18           9681   	clc
     BB4C   65 8C        9682   	adc  cache+1
     BB4E   85 7F        9683   	sta  bufpnt+1   ; pointer to data
     BB50   A6 91        9684   	ldx  psectorsiz
     BB52   E0 03        9685   	cpx  #3
     BB54   D0 01        9686   	bne  1$
                         9687   
     BB56   E8           9688   	inx
     BB57   B1 7E        9689   1$      lda  (bufpnt),y ; get data
     BB59   20 BF86      9690   	jsr  hskrd      ; handshake on state
     BB5C   C8           9691   	iny
     BB5D   D0 F8        9692   	bne  1$
                         9693   
     BB5F   CA           9694   	dex
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 127-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BB60   F0 04        9695   	beq  trans_sw
                         9696   
     BB62   E6 7F        9697   	inc  bufpnt+1
     BB64   D0 F1        9698   	bne  1$         ; bra
                         9699   
     BB66                9700   trans_sw
     BB66   CE 0205      9701   	dec  cmdbuf+5   ; any more sectors ?
     BB69   F0 06        9702   	beq  1$
                         9703   
     BB6B   20 C040      9704   	jsr  sectnx     ; next sector
     BB6E   4C BB15      9705   	jmp  fstread    ; more to do
                         9706   
     BB71   4C BF47      9707   1$      jmp  chksee     ; next track ?
                         9708   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 128
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                         9710   ; (2) FAST WRITE
                         9711   
     BB74                9712   logical_werr
     BB74   A9 8D        9713   	lda  #%10001101
     BB76   8D 01EA      9714   	sta  burst_stat
     BB79   A5 7C        9715   	lda  switch     ; set internal abort switch
     BB7B   09 08        9716   	ora  #%00001000
     BB7D   85 7C        9717   	sta  switch
     BB7F   D0 04        9718   	bne  lfstwrite  ; bra
                         9719   
     BB81                9720   logical_wrt
     BB81   A5 8A        9721   	lda  dkoramask
     BB83   30 EF        9722   	bmi  logical_werr
                         9723   
     BB85                9724   lfstwrite
     BB85   A0 00        9725   	ldy  #0
     BB87   84 7E        9726   	sty  bufpnt
     BB89   A9 03        9727   	lda  #>buff0
     BB8B   85 7F        9728   	sta  bufpnt+1
     BB8D   AD 4001      9729   1$      lda  pb         ; debounce
     BB90   49 08        9730   	eor  #clkout    ; toggle state of clock
     BB92   2C 400D      9731   	bit  icr        ; clear pending
     BB95   8D 4001      9732   	sta  pb
     BB98   A9 08        9733   	lda  #8
     BB9A   2C 4001      9734   2$      bit  pb
     BB9D   30 0F        9735   	bmi  3$         ; br, attn low
                         9736   
     BB9F   2C 400D      9737   	bit  icr        ; wait for byte
     BBA2   F0 F6        9738   	beq  2$
                         9739   
     BBA4   AD 400C      9740   	lda  sdr        ; get data
     BBA7   91 7E        9741   	sta  (bufpnt),y ; put away data
     BBA9   C8           9742   	iny
     BBAA   D0 E1        9743   	bne  1$         ; more ?
                         9744   
     BBAC   F0 0C        9745   	beq  ltrans_sw1 ; bra
                         9746   
     BBAE   20 AD15      9747   3$      jsr  tstatn
     BBB1   4C BB9A      9748   	jmp  2$         ; if it comes back then ok
                         9749   
     BBB4                9750   labort_sw
     BBB4   AD 01EA      9751   	lda  burst_stat
     BBB7   4C BAFC      9752   	jmp  fail       ; abort
                         9753   
     BBBA                9754   ltrans_sw1
     BBBA   20 AD03      9755   	jsr  clkhi      ; release clock
     BBBD   A5 7C        9756   	lda  switch     ; check internal abort switch
     BBBF   29 08        9757   	and  #%00001000
     BBC1   D0 F1        9758   	bne  labort_sw  ; br, ok...
                         9759   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 128-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BBC3   A2 00        9760   	ldx  #0         ; job #0
     BBC5   AD 0203      9761   	lda  cmdbuf+3   ; get track
     BBC8   95 0B        9762   	sta  hdrs,x
     BBCA   AD 0204      9763   	lda  cmdbuf+4   ; get sector
     BBCD   95 0C        9764   	sta  hdrs+1,x
     BBCF   A9 90        9765   	lda  #wrtsd_dv  ; get write job
     BBD1   20 BFB0      9766   	jsr  stbctl
     BBD4   20 BF66      9767   	jsr  upinst     ; update status
     BBD7   20 BF5A      9768   	jsr  statqb     ; send status
     BBDA   24 7C        9769   	bit  switch     ; check error ignore switch
     BBDC   70 0A        9770   	bvs  1$
                         9771   
     BBDE   AD 01EA      9772   	lda  burst_stat
     BBE1   C9 02        9773   	cmp  #2         ; error on job ?
     BBE3   90 03        9774   	bcc  1$
                         9775   
     BBE5   4C BB0A      9776   	jmp  exbad
                         9777   
     BBE8   CE 0205      9778   1$      dec  cmdbuf+5   ; any more sectors
     BBEB   F0 06        9779   	beq  2$
                         9780   	
     BBED   20 C07A      9781   	jsr  lsectnx    ; next sector
     BBF0   4C BB81      9782   	jmp  logical_wrt
                         9783   
     BBF3   4C BF44      9784   2$      jmp  lchksee    ; next track
                         9785   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 129
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BBF6   A9 0B        9787   wnochnl lda  #%00001011 ; no channel
     BBF8   2C           9788   	.byte  skip2
     BBF9   A9 4F        9789   ndkwrt  lda  #%01001111 ; no drv 1
     BBFB   8D 01EA      9790   	sta  burst_stat
     BBFE   4C BC2F      9791   	jmp  fstwrt1    ; bra
                         9792   
     BC01   A5 25        9793   fstwrt  lda  wpsw       ; disk change
     BC03   D0 F1        9794   	bne  wnochnl
                         9795   
     BC05   A5 7C        9796   	lda  switch     ; check for logical
     BC07   10 03        9797   	bpl  1$
                         9798   	
     BC09   4C BB81      9799   	jmp  logical_wrt
                         9800   
     BC0C   A2 00        9801   1$      ldx  #0         ; job #0
     BC0E   A5 7C        9802   	lda  switch
     BC10   29 10        9803   	and  #bit4
     BC12   9D 01CE      9804   	sta  sids,x
     BC15   AD 0203      9805   	lda  cmdbuf+3   ; get track
     BC18   95 0B        9806   	sta  hdrs,x
     BC1A   AD 0204      9807   	lda  cmdbuf+4   ; get sector
     BC1D   95 0C        9808   	sta  hdrs+1,x
     BC1F   A9 B4        9809   	lda  #tpwrt_dv  ; get write job
     BC21   20 BFB0      9810   	jsr  stbctl
     BC24   20 BF66      9811   	jsr  upinst     ; update status
     BC27   C9 02        9812   	cmp  #2
     BC29   90 0A        9813   	bcc  fstwrite
                         9814   
     BC2B   A9 00        9815   	lda  #0
     BC2D   85 87        9816   	sta  dirty      ; clear dirty flag
                         9817   
     BC2F   A5 7C        9818   fstwrt1 lda  switch     ; set internal abort switch
     BC31   09 08        9819   	ora  #%00001000
     BC33   85 7C        9820   	sta  switch
     BC35                9821   fstwrite
     BC35   20 BC99      9822   	jsr  cachepoint ; set pointer to cache buffer
     BC38   A6 91        9823   	ldx  psectorsiz
     BC3A   E0 03        9824   	cpx  #3
     BC3C   D0 01        9825   	bne  1$
                         9826   
     BC3E   E8           9827   	inx
     BC3F   AD 4001      9828   1$      lda  pb         ; debounce
     BC42   49 08        9829   	eor  #clkout    ; toggle state of clock
     BC44   2C 400D      9830   	bit  icr        ; clear pending
     BC47   8D 4001      9831   	sta  pb
     BC4A   A9 08        9832   	lda  #8
     BC4C   2C 4001      9833   2$      bit  pb
     BC4F   30 14        9834   	bmi  3$         ; br, attn low
                         9835   
     BC51   2C 400D      9836   	bit  icr        ; wait for byte
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 129-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BC54   F0 F6        9837   	beq  2$
                         9838   
     BC56   AD 400C      9839   	lda  sdr        ; get data
     BC59   91 7E        9840   	sta  (bufpnt),y ; put away data
     BC5B   C8           9841   	iny
     BC5C   D0 E1        9842   	bne  1$         ; more ?
                         9843   
     BC5E   E6 7F        9844   	inc  bufpnt+1
                         9845   
     BC60   CA           9846   	dex
     BC61   D0 DC        9847   	bne  1$
                         9848   	
     BC63   F0 0C        9849   	beq  trans_sw1  ; bra
                         9850   
     BC65   20 AD15      9851   3$      jsr  tstatn
     BC68   4C BC4C      9852   	jmp  2$         ; if it comes back then ok
                         9853   
     BC6B                9854   abort_sw
     BC6B   AD 01EA      9855   	lda  burst_stat
     BC6E   4C BAFC      9856   	jmp  fail       ; abort
                         9857   
     BC71                9858   trans_sw1
     BC71   20 AD03      9859   	jsr  clkhi      ; release clock
     BC74   A5 7C        9860   	lda  switch     ; check internal abort switch
     BC76   29 08        9861   	and  #%00001000
     BC78   D0 F1        9862   	bne  abort_sw   ; br, ok...
                         9863   
     BC7A   20 BF5A      9864   	jsr  statqb     ; send status
                         9865   	
     BC7D   24 7C        9866   	bit  switch     ; check error ignore switch
     BC7F   70 0A        9867   	bvs  buffer_sw1
                         9868   
     BC81   AD 01EA      9869   	lda  burst_stat
     BC84   C9 02        9870   	cmp  #2         ; error on job ?
     BC86   90 03        9871   	bcc  buffer_sw1
                         9872   
     BC88   4C BB0A      9873   	jmp  exbad
                         9874   
     BC8B                9875   buffer_sw1
     BC8B   CE 0205      9876   	dec  cmdbuf+5   ; more sectors ?
     BC8E   F0 06        9877   	beq  1$
                         9878   
     BC90   20 C040      9879   	jsr  sectnx     ; increment sector
     BC93   4C BC01      9880   	jmp  fstwrt
                         9881   
     BC96   4C BF47      9882   1$      jmp  chksee     ; next track ?
                         9883   
                         9884   
     BC99                9885   cachepoint
                         9886   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 129-2
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BC99   A0 00        9887   	ldy  #0         ; even page
     BC9B   84 7E        9888   	sty  bufpnt
     BC9D   AD 0204      9889   	lda  cmdbuf+4   ; sector
     BCA0   38           9890   	sec
     BCA1   E5 94        9891   	sbc  pstartsec
     BCA3   A6 91        9892   	ldx  psectorsiz ; multiply by sector size
     BCA5   CA           9893   1$      dex
     BCA6   F0 04        9894   	beq  2$
                         9895   	
     BCA8   0A           9896   	asl  a
     BCA9   4C BCA5      9897   	jmp  1$
                         9898   
     BCAC   18           9899   2$      clc
     BCAD   65 8C        9900   	adc  cache+1    ; add offset
     BCAF   85 7F        9901   	sta  bufpnt+1
     BCB1   60           9902   	rts
                         9903   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 130
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                         9905   ; (3) FAST SEEK
                         9906   
     BCB2   AD 0202      9907   fstsek  lda  cmdbuf+2   ; check drive number
     BCB5   29 01        9908   	and  #1
     BCB7   D0 2E        9909   	bne  1$         ; drive 1 - error
                         9910   
     BCB9   A2 00        9911   	ldx  #0
     BCBB   86 80        9912   	stx  dkmode
                         9913   
     BCBD   A9 C0        9914   	lda  #restore_dv
     BCBF   20 BFB0      9915   	jsr  stbctl     ; restore head
                         9916   
     BCC2   08           9917   	php
     BCC3   58           9918   	cli
     BCC4   A9 80        9919   	lda  #bit7
     BCC6   85 81        9920   	sta  xjobrtn    ; return
     BCC8   20 BEF1      9921   	jsr  fintdsk    ; init new dsk
     BCCB   20 8F03      9922   	jsr  initdr     ; read in appropiate info
     BCCE   06 81        9923   	asl  xjobrtn    ; clear
     BCD0   28           9924   	plp
     BCD1   A5 7C        9925   	lda  switch
     BCD3   29 10        9926   	and  #bit4
     BCD5   4A           9927   	lsr  a
     BCD6   4A           9928   	lsr  a
     BCD7   4A           9929   	lsr  a
     BCD8   4A           9930   	lsr  a
     BCD9   9D 01CE      9931   	sta  sids,x
     BCDC   A9 9C        9932   	lda  #side_dv   ; select side
     BCDE   20 959D      9933   	jsr  strobe_controller
                         9934   
     BCE1   A9 B0        9935   	lda  #seekhd_dv ; seek
     BCE3   20 BFB0      9936   	jsr  stbctl
     BCE6   2C           9937   	.byte  skip2    ; return status
     BCE7   A9 4F        9938   1$      lda  #%01001111 ; no drv 1
     BCE9   20 BAFC      9939   2$      jsr  fail       ; update status
     BCEC   A9 01        9940   	lda  #1
     BCEE   8D 01EF      9941   	sta  minsek
     BCF1   85 94        9942   	sta  pstartsec
     BCF3   A6 22        9943   	ldx  header+3
     BCF5   BD BD06      9944   	lda  nsecks,x   ; get max #
     BCF8   F0 08        9945   	beq  3$         ; br, error
                         9946   
     BCFA   85 92        9947   	sta  pnumsec
     BCFC   85 93        9948   	sta  pendsec
     BCFE   8D 01F0      9949   	sta  maxsek
     BD01   60           9950   	rts
                         9951   
     BD02   A9 0E        9952   3$      lda  #$0e
     BD04   D0 E3        9953   	bne  2$         ; bra, not supported
                         9954   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 130-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BD06   00 10 0A     9955   nsecks  .byte 0,16,10,5
     BD09   05 
                         9956   	
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 131
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BD0A   A9 4F        9958   nonedr  lda  #%01001111 ; no drive one
     BD0C   20 BF66      9959   	jsr  upinst     ; update status
     BD0F   4C BB02      9960   	jmp  final      ; finish up ...
                         9961   
                         9962   ; (4) BURST FORMAT MFM/GCR
                         9963   
     BD12   AD 0202      9964   fstfmt  lda  cmdbuf+2   ; check drive number
     BD15   29 01        9965   	and  #1
     BD17   D0 F1        9966   	bne  nonedr
                         9967   
     BD19   AD 0202      9968   	lda  cmdbuf+2   ; format gcr or mfm ?
     BD1C   10 40        9969   	bpl  usenew
                         9970   
                         9971   ; (4) FORMAT DISK
                         9972   
                         9973   ;  0     1    2    3    4    5    6    7   8     9 + cmdbuf
                         9974   ;  ^     ^    ^    ^    ^    ^    ^    ^   ^     ^
                         9975   ; "U" + "0" + N + SZ + LT + NS + ST + FL + SS + GP
                         9976   
     BD1E   A5 29        9977   	lda  cmdsiz     ; setup default parms
     BD20   38           9978   	sec
     BD21   E9 03        9979   	sbc  #3         ; less mandatory + 1
     BD23   A8           9980   	tay
     BD24   F0 56        9981   	beq  sz00       ; not sz
                         9982   
     BD26   AD 0203      9983   	lda  cmdbuf+3
     BD29   85 91        9984   	sta  psectorsiz
                         9985   	
     BD2B   88           9986   	dey
     BD2C   F0 52        9987   	beq  lt00       ; sz only, not lt
                         9988   
     BD2E   88           9989   	dey
     BD2F   F0 54        9990   	beq  ns00       ; sz, lt only, not ns
                         9991   	
     BD31   88           9992   	dey
     BD32   F0 59        9993   	beq  st00       ; sz, lt, ns only, not st
                         9994   
     BD34   88           9995   	dey
     BD35   F0 5B        9996   	beq  fl00       ; sz, lt, ns, st only, not fl
                         9997   
     BD37   88           9998   	dey
     BD38   F0 5D        9999   	beq  ss00       ; sz, lt, ns, st ,fl only, not ss
                        10000   
     BD3A   AD 0208     10001   	lda  cmdbuf+8
     BD3D   85 94       10002   	sta  pstartsec
                        10003   
     BD3F   88          10004   	dey
     BD40   F0 59       10005   	beq  gap00      ; sz, lt, ns, st ,fl,ss only, not gp
                        10006   
     BD42   AD 0209     10007   	lda  cmdbuf+9
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 131-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BD45   85 9A       10008   	sta  gap3
                        10009   
     BD47   4C BDA2     10010   	jmp  startfmt
                        10011   
     BD4A   4E 30 3A    10012   fmtfil  .byte 'N0:COPYRIGHT CBM,86',$0D
     BD4D   43 4F 50 
     BD50   59 52 49 
     BD53   47 48 54 
     BD56   20 43 42 
     BD59   4D 2C 38 
     BD5C   36 0D 
            =0014       10013   flenf=*-fmtfil
                        10014   
     BD5E               10015   usenew
                        10016   
     BD5E   A0 13       10017   	ldy  #flenf-1
     BD60   B9 BD4A     10018   1$      lda  fmtfil,y
     BD63   99 0200     10019   	sta  cmdbuf,y   ; transfer filename to cmd buffer
     BD66   88          10020   	dey
     BD67   10 F7       10021   	bpl  1$
                        10022   
     BD69   A9 14       10023   	lda  #20
     BD6B   85 29       10024   	sta  cmdsiz
     BD6D   A9 11       10025   	lda  #17
     BD6F   8D 0292     10026   	sta  filtbl+1   ; set dskid
     BD72   A9 01       10027   	lda  #1
     BD74   8D 0291     10028   	sta  filtbl
     BD77   A2 00       10029   	ldx  #0
U    BD79   4C 0000 "   10030   	jmp  jnew       ; new it
                        10031   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 132
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BD7C               10033   cp00
     BD7C   A9 02       10034   sz00    lda  #sysiz     ; 512 byte sectors
     BD7E   85 91       10035   	sta  psectorsiz
                        10036   
     BD80   A9 4F       10037   lt00    lda  #79        ; last track is #79, 80 tracks total
     BD82   8D 0204     10038   	sta  cmdbuf+4   ; *** pmaxtrk ***
                        10039   
     BD85   A6 91       10040   ns00    ldx  psectorsiz
     BD87   BD BD06     10041   	lda  nsecks,x   ; x=sector size index for # of sectors per track
     BD8A   8D 0205     10042   	sta  cmdbuf+5   ; *** pnumsec ***
                        10043   
     BD8D   A9 00       10044   st00    lda  #0         ; default track #0 start
     BD8F   8D 0206     10045   	sta  cmdbuf+6   ; *** startrk - 1 ***
                        10046   
     BD92   A9 E5       10047   fl00    lda  #$e5       ; default block fill
     BD94   8D 0207     10048   	sta  cmdbuf+7   ; *** fillbyte ***
     BD97   A9 01       10049   ss00    lda  #1
     BD99   85 94       10050   	sta  pstartsec
     BD9B   A6 91       10051   gap00   ldx  psectorsiz
     BD9D   BD BDF8     10052   	lda  gp3,x      ; get gap
     BDA0   85 9A       10053   	sta  gap3
                        10054   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 133
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BDA2               10056   startfmt
     BDA2   A5 90       10057   	lda  startrk
     BDA4   48          10058   	pha
     BDA5   A5 9B       10059   	lda  fillbyte
     BDA7   48          10060   	pha
     BDA8   A5 8F       10061   	lda  pmaxtrk
     BDAA   48          10062   	pha
     BDAB   AD 0204     10063   	lda  cmdbuf+4
     BDAE   85 8F       10064   	sta  pmaxtrk    ; maximum track
     BDB0   AD 0205     10065   	lda  cmdbuf+5   ; # of sectors
     BDB3   85 92       10066   	sta  pnumsec
     BDB5   18          10067   	clc
     BDB6   65 94       10068   	adc  pstartsec
     BDB8   38          10069   	sec
     BDB9   E9 01       10070   	sbc  #1         ; get ending sector and maximum sector
     BDBB   85 93       10071   	sta  pendsec
     BDBD   8D 01F0     10072   	sta  maxsek
     BDC0   AC 0206     10073   	ldy  cmdbuf+6   ; store logical
     BDC3   C8          10074   	iny
     BDC4   84 90       10075   	sty  startrk
                        10076   
     BDC6   AD 0207     10077   	lda  cmdbuf+7
     BDC9   85 9B       10078   	sta  fillbyte
     BDCB   A5 90       10079   	lda  startrk
     BDCD   85 4D       10080   	sta  track
     BDCF   A9 00       10081   	lda  #0
     BDD1   85 4E       10082   	sta  sector
     BDD3   20 9588     10083   	jsr  seth       ; set header
     BDD6   A9 C0       10084   	lda  #restore_dv
     BDD8   20 959D     10085   	jsr  strobe_controller
     BDDB   A9 F0       10086   	lda  #formatdk_dv
     BDDD   20 959D     10087   	jsr  strobe_controller
     BDE0   C9 02       10088   	cmp  #2
     BDE2   B0 03       10089   	bcs  c_801
                        10090   
     BDE4   A9 00       10091   c_802   lda  #0
     BDE6   2C          10092   	.byte  skip2
     BDE7   A9 06       10093   c_801   lda  #6
     BDE9   20 BF66     10094   	jsr  upinst
     BDEC   68          10095   	pla
     BDED   85 8F       10096   	sta  pmaxtrk
     BDEF   68          10097   	pla
     BDF0   85 9B       10098   	sta  fillbyte
     BDF2   68          10099   	pla
     BDF3   85 90       10100   	sta  startrk
     BDF5   4C BB02     10101   	jmp  final
                        10102   
     BDF8   0E 16 26    10103   gp3  .byte 14,22,38,68
     BDFB   44 
                        10104   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 133-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 134
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10106   ; (5) SOFT INTERLEAVE NOT SUPPORTED
                        10107   
     BDFC               10108   cpmint
     BDFC   A9 0E       10109   	lda  #%00001110 ; syntax error
     BDFE   20 BF66     10110   	jsr  upinst     ; update dkmode
                        10111   
     BE01   A9 31       10112   	lda  #badcmd
     BE03   4C 807C     10113   	jmp  cmderr
                        10114   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 135
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10116   ; (6) QUERY DISK FORMAT
                        10117   
     BE06   20 BCB2     10118   querdk  jsr  fstsek     ; send initial
     BE09   A2 00       10119   	ldx  #0
     BE0B   86 3D       10120   	stx  tmp+5
     BE0D   A9 C0       10121   	lda  #restore_dv
U    BE0F   20 0000 "   10122   	jsr  query_patch ; do restore & seek any header
     BE12   C9 02       10123   	cmp  #2
     BE14   B0 59       10124   	bcs  2$
                        10125   
     BE16   A5 1F       10126   	lda  header
     BE18   85 8E       10127   	sta  pstartrk   ; set physical starting track
     BE1A   24 7C       10128   	bit  switch     ; seek to n-track ?
     BE1C   10 0F       10129   	bpl  1$
                        10130   
     BE1E   AD 0203     10131   	lda  cmdbuf+3
     BE21   8D 01BC     10132   	sta  hdrs2      ; goto this track
     BE24   A9 8C       10133   	lda  #seek_dv
     BE26   20 959D     10134   	jsr  strobe_controller
     BE29   C9 02       10135   	cmp  #2
     BE2B   B0 42       10136   	bcs  2$
                        10137   
     BE2D   A5 7C       10138   1$      lda  switch
     BE2F   29 10       10139   	and  #bit4
     BE31   4A          10140   	lsr  a
     BE32   4A          10141   	lsr  a
     BE33   4A          10142   	lsr  a
     BE34   4A          10143   	lsr  a
     BE35   9D 01CE     10144   	sta  sids,x
     BE38   A9 9C       10145   	lda  #side_dv
     BE3A   20 959D     10146   	jsr  strobe_controller
                        10147   
     BE3D   A9 B0       10148   	lda  #seekhd_dv ; read a header
     BE3F   20 959D     10149   	jsr  strobe_controller
     BE42   C9 02       10150   	cmp  #2
     BE44   B0 29       10151   	bcs  2$
                        10152   
     BE46   A5 21       10153   	lda  header+2   ; sector is?
     BE48   85 3E       10154   	sta  tmp+6      ; this is where we stop
                        10155   
     BE4A   A2 00       10156   3$      ldx  #0
     BE4C   A9 B0       10157   	lda  #seekhd_dv
     BE4E   20 959D     10158   	jsr  strobe_controller
     BE51   C9 02       10159   	cmp  #2
     BE53   B0 1A       10160   	bcs  2$
                        10161   
     BE55   A5 21       10162   	lda  header+2   ; get next sector
     BE57   A4 3D       10163   	ldy  tmp+5
     BE59   99 020B     10164   	sta  cmdbuf+11,y
     BE5C   E6 3D       10165   	inc  tmp+5      ; inc sector count
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 135-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BE5E   C0 1F       10166   	cpy  #31        ; went too far ?
     BE60   B0 0B       10167   	bcs  5$
                        10168   
     BE62   C5 3E       10169   	cmp  tmp+6      ; done yet ?
     BE64   D0 E4       10170   	bne  3$         ; wait for rap...
                        10171   
     BE66   A5 3D       10172   	lda  tmp+5
     BE68   85 92       10173   	sta  pnumsec    ; physical
                        10174   
     BE6A   A9 00       10175   	lda  #0
     BE6C   2C          10176   	.byte  skip2
     BE6D   A9 02       10177   5$      lda  #2
     BE6F   20 BF66     10178   2$      jsr  upinst
     BE72   C9 02       10179   	cmp  #2
     BE74   90 03       10180   	bcc  4$
                        10181   
     BE76   4C BAFC     10182   	jmp  fail
                        10183   	
     BE79   20 C097     10184   4$      jsr  maxmin     ; determine low/high sector
     BE7C   20 ACD4     10185   	jsr  spout      ; serial port output
     BE7F   AD 01EF     10186   	lda  minsek
     BE82   85 94       10187   	sta  pstartsec
     BE84   AD 01F0     10188   	lda  maxsek     ; send max.
     BE87   85 93       10189   	sta  pendsec
     BE89   20 BFAB     10190   	jsr  hskstat    ; send status
                        10191   
     BE8C   A5 92       10192   	lda  pnumsec    ; get number of sectors
     BE8E   20 BF86     10193   	jsr  hskrd      ; send it
                        10194   
     BE91   A5 1F       10195   	lda  header     ; get logical track number
     BE93   20 BF86     10196   	jsr  hskrd      ; send track
                        10197   
     BE96   AD 01EF     10198   	lda  minsek
     BE99   20 BF86     10199   	jsr  hskrd      ; wait for handshake
                        10200   
     BE9C   AD 01F0     10201   	lda  maxsek     ; send max.
     BE9F   20 BF86     10202   	jsr  hskrd      ; wait for handshake
                        10203   
     BEA2   A9 01       10204   	lda  #1
     BEA4   20 BF86     10205   	jsr  hskrd      ; interleave
     BEA7   A9 20       10206   	lda  #bit5
     BEA9   24 7C       10207   	bit  switch
     BEAB   F0 0D       10208   	beq  7$
                        10209   
     BEAD   A0 00       10210   	ldy  #0
     BEAF   B9 020B     10211   6$      lda  cmdbuf+11,y
     BEB2   20 BF86     10212   	jsr  hskrd      ; send back sector table
     BEB5   C8          10213   	iny
     BEB6   C4 92       10214   	cpy  pnumsec    ; done?
     BEB8   D0 F5       10215   	bne  6$
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 135-2
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10216   
     BEBA   60          10217   7$      rts
                        10218   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 136
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10220   ; (7) QUERY/INIT STATUS
                        10221   
     BEBB   24 7C       10222   inqst   bit  switch     ; read/write op ?
     BEBD   10 09       10223   	bpl  wrstat
                        10224   	
     BEBF   20 ACD4     10225   statqy  jsr  spout      ; serial port out
     BEC2   20 BFAB     10226   	jsr  hskstat    ; send status
     BEC5   4C ACBB     10227   	jmp  spinp      ; serial port input
                        10228   
     BEC8   AD 0203     10229   wrstat  lda  cmdbuf+3   ; new value
     BECB   85 80       10230   	sta  dkmode
                        10231   	
     BECD   A9 20       10232   	lda  #bit5
     BECF   24 7C       10233   	bit  switch     ; M mask?
     BED1   F0 0A       10234   	beq  1$
                        10235   
     BED3   AD 0204     10236   	lda  cmdbuf+4   ; new value
     BED6   85 8A       10237   	sta  dkoramask
     BED8   AD 0205     10238   	lda  cmdbuf+5   ; new value
     BEDB   85 89       10239   	sta  dkandmask
     BEDD   24 7C       10240   1$      bit  switch     ; clear wp-latch the hard way
     BEDF   50 10       10241   	bvc  fintdsk
                        10242   
     BEE1   08          10243   	php
     BEE2   58          10244   	cli
     BEE3   A9 80       10245   	lda  #bit7
     BEE5   85 81       10246   	sta  xjobrtn    ; return
U    BEE7   20 0000 "   10247   	jsr  jintdsk    ; init new disk
     BEEA   20 8F03     10248   	jsr  initdr     ; read in appropiate info
     BEED   06 81       10249   	asl  xjobrtn    ; clear
     BEEF   28          10250   	plp
     BEF0   60          10251   	rts
                        10252   
                        10253   
     BEF1   A9 01       10254   fintdsk lda  #bit0
     BEF3   85 25       10255   	sta  wpsw
U    BEF5   4C 0000 "   10256   	jmp  jintdsk    ; clear it default
                        10257   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 137
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10259   ; (8) BACKUP DISK
                        10260   
     BEF8   A2 0E       10261   duplc1  ldx  #%00001110
     BEFA   20 BF66     10262   	jsr  upinst     ; update dkmode
                        10263   	
     BEFD   A9 31       10264   	lda  #badcmd
     BEFF   4C 807C     10265   	jmp  cmderr
                        10266   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 138
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10268   ; (9) DUMP BUFFER
                        10269   
     BF02   AD 0202     10270   dumpbuf lda  cmdbuf+2   ; check drive number
     BF05   A8          10271   	tay             ; save it
     BF06   29 01       10272   	and  #1
     BF08   D0 32       10273   	bne  2$         ; drive 1 - error
                        10274   
     BF0A   A2 00       10275   	ldx  #0         ; job 0
                        10276   
     BF0C   98          10277   	tya             ; retrieve
     BF0D   10 15       10278   	bpl  1$         ; force bit on?
                        10279   
     BF0F   29 40       10280   	and  #bit6      ; extract side
     BF11   4A          10281   	lsr  a
     BF12   4A          10282   	lsr  a
     BF13   4A          10283   	lsr  a
     BF14   4A          10284   	lsr  a
     BF15   4A          10285   	lsr  a
     BF16   4A          10286   	lsr  a
     BF17   29 01       10287   	and  #bit0      ; got this bit correct!!!
     BF19   85 97       10288   	sta  cacheside
     BF1B   AD 0203     10289   	lda  cmdbuf+3
     BF1E   85 95       10290   	sta  cachetrk
     BF20   A9 80       10291   	lda  #bit7
     BF22   85 87       10292   	sta  dirty
                        10293   
     BF24   A5 87       10294   1$      lda  dirty      ; dirty?
     BF26   10 17       10295   	bpl  3$
                        10296   
     BF28   A9 B6       10297   	lda  #detwp_dv  ; wp?
     BF2A   20 959D     10298   	jsr  strobe_controller
     BF2D   8D 01FA     10299   	sta  wpstat
     BF30   D0 0F       10300   	bne  4$         ; br, wp
                        10301   
     BF32   A9 80       10302   	lda  #bit7
     BF34   85 81       10303   	sta  xjobrtn
U    BF36   20 0000 "   10304   	jsr  jdumptrk   ; dump it now!!!
     BF39   06 81       10305   	asl  xjobrtn
     BF3B   2C          10306   	.byte  skip2    ; return status
     BF3C   A9 4F       10307   2$      lda  #%01001111 ; no drv 1
     BF3E   2C          10308   	.byte  skip2
     BF3F   A9 00       10309   3$      lda  #0
     BF41   4C BAFC     10310   4$      jmp  fail       ; update status
                        10311   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 139
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10313   ;       SUBROUTINES
                        10314   
     BF44               10315   lchksee
     BF44   CE 0206     10316   	dec  cmdbuf+6
                        10317   
     BF47   A5 29       10318   chksee  lda  cmdsiz     ; chk for next track
     BF49   C9 07       10319   	cmp  #7
     BF4B   90 0C       10320   	bcc  1$
                        10321   
     BF4D   A2 00       10322   	ldx  #0
     BF4F   AD 0206     10323   	lda  cmdbuf+6   ; next track
     BF52   95 0B       10324   	sta  hdrs,x
     BF54   A9 A8       10325   	lda  #pseek_dv
     BF56   4C 959D     10326   	jmp  strobe_controller
                        10327   
     BF59   60          10328   1$      rts
                        10329   
                        10330   ;******************************************************
                        10331   
     BF5A   20 ACD4     10332   statqb  jsr  spout      ; serial port out
     BF5D   20 BFAB     10333   	jsr  hskstat    ; send status
     BF60   20 C029     10334   	jsr  burst      ; other side
     BF63   4C ACBB     10335   	jmp  spinp      ; serial port input
                        10336   
                        10337   ;******************************************************
                        10338   
     BF66   8D 01EA     10339   upinst  sta  burst_stat
     BF69   A6 91       10340   	ldx  psectorsiz
     BF6B   A5 80       10341   	lda  dkmode     ; update main status w/ controller status
     BF6D   29 80       10342   	and  #%10000000 ; clear old controller status
     BF6F   0D 01EA     10343   	ora  burst_stat
     BF72   1D BF7F     10344   	ora  shftsiz,x  ; mask in sector size
     BF75   25 89       10345   	and  dkandmask  ; mask status
     BF77   05 8A       10346   	ora  dkoramask  ; *
     BF79   85 80       10347   	sta  dkmode     ; updated
     BF7B   AD 01EA     10348   	lda  burst_stat
     BF7E   60          10349   	rts
                        10350   
     BF7F   00 10 20    10351   shftsiz .byte $00,$10,$20,$30
     BF82   30 
                        10352   
                        10353   ;******************************************************
                        10354   
     BF83   4C AD15     10355   hsktst  jmp  tstatn     ; test for atn
     BF86   48          10356   hskrd   pha
     BF87   AD 4001     10357   1$      lda  pb         ; debounce
     BF8A   CD 4001     10358   	cmp  pb
     BF8D   D0 F8       10359   	bne  1$
                        10360   
     BF8F   29 FF       10361   	and  #$ff       ; set/clr neg flag
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 139-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BF91   30 F0       10362   	bmi  hsktst     ; br, attn low
                        10363   
     BF93   45 76       10364   	eor  fsflag     ; wait for state chg
     BF95   29 04       10365   	and  #4
     BF97   F0 EE       10366   	beq  1$
                        10367   
     BF99   68          10368   hsksnd  pla             ; retrieve data
     BF9A   8D 400C     10369   	sta  sdr        ; send it
     BF9D   A5 76       10370   	lda  fsflag
     BF9F   49 04       10371   	eor  #clkin     ; change state of clk
     BFA1   85 76       10372   	sta  fsflag
                        10373   
     BFA3   A9 08       10374   	lda  #8
     BFA5   2C 400D     10375   1$      bit  icr        ; wait transmission time
     BFA8   F0 FB       10376   	beq  1$
                        10377   
     BFAA   60          10378   	rts
                        10379   
                        10380   ;******************************************************
                        10381   
     BFAB               10382   hskstat
     BFAB   A5 80       10383   	lda  dkmode     ; get status and send it
     BFAD   4C BF86     10384   	jmp  hskrd      ; transmit status
                        10385   
                        10386   ;******************************************************
                        10387   
     BFB0               10388   stbctl
     BFB0   48          10389   	pha
     BFB1   A9 40       10390   	lda  #bit6
     BFB3   8D 02A8     10391   	sta  jobrtn     ; no check t&s, vernum
     BFB6   68          10392   	pla
     BFB7   08          10393   stbctr  php
     BFB8   58          10394   	cli             ; let controller run free
     BFB9   85 28       10395   	sta  cmd        ; save cmd for later
     BFBB   20 959D     10396   	jsr  strobe_controller
     BFBE   C9 02       10397   	cmp  #2         ; was there an error ?
     BFC0   90 03       10398   	bcc  1$         ; br, nope
                        10399   
     BFC2   20 BFCE     10400   	jsr  stbret     ; let DOS retry
                        10401   
     BFC5   A9 00       10402   1$      lda  #0
     BFC7   8D 02A8     10403   	sta  jobrtn
     BFCA   B5 02       10404   	lda  jobs,x     ; get error
     BFCC   28          10405   	plp             ; restore status
     BFCD   60          10406   	rts
                        10407   
                        10408   ;******************************************************
                        10409   
     BFCE   AD 02A8     10410   stbret  lda  jobrtn
     BFD1   09 80       10411   	ora  #bit7
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 139-2
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     BFD3   8D 02A8     10412   	sta  jobrtn     ; set error recovery on
     BFD6   86 6C       10413   	stx  jobnum     ; set job #
     BFD8   A5 28       10414   	lda  cmd        ; set for dos
     BFDA   9D 0272     10415   	sta  lstjob,x   ; set last job
     BFDD   20 959D     10416   	jsr  strobe_controller
     BFE0   4C 94ED     10417   	jmp  watjob     ; let dos clean it up
                        10418   
                        10419   ;******************************************************
                        10420   
     BFE3   A9 A2       10421   dumptrk lda  #trkwrt_dv
     BFE5   9D 0272     10422   	sta  lstjob,x
     BFE8   A5 95       10423   	lda  cachetrk
     BFEA   85 4D       10424   	sta  track
     BFEC   A5 94       10425   	lda  pstartsec
     BFEE   85 4E       10426   	sta  sector     ; sector
     BFF0   86 6C       10427   	stx  jobnum
     BFF2   8A          10428   	txa
     BFF3   20 9588     10429   	jsr  seth
     BFF6   A6 6C       10430   	ldx  jobnum
                        10431   
     BFF8   A5 30       10432   	lda  revcnt
     BFFA   29 3F       10433   	and  #$3f
     BFFC   85 28       10434   	sta  cmd        ; set retry
     BFFE   20 C01D     10435   	jsr  firstdump  ; first dump
     C001   90 15       10436   	bcc  3$
                        10437   
     C003   20 C019     10438   1$      jsr  retrydump  ; retry dump
     C006   90 10       10439   	bcc  3$
                        10440   
     C008   C6 28       10441   	dec  cmd
     C00A   D0 F7       10442   	bne  1$
                        10443   
     C00C   24 81       10444   	bit  xjobrtn
     C00E   30 08       10445   	bmi  3$         ; ok return
                        10446   
     C010   2C 02A8     10447   	bit  jobrtn
     C013   30 03       10448   	bmi  3$         ; ok return
                        10449   
     C015   4C 952F     10450   	jmp  quit2
                        10451   
     C018   60          10452   3$      rts
                        10453   
                        10454   ;******************************
                        10455   
     C019               10456   retrydump
     C019   A9 80       10457   	lda  #bit7
     C01B   85 87       10458   	sta  dirty
     C01D               10459   firstdump               ; Ah .. Oh .. Eh
     C01D   A5 4D       10460   	lda  track
     C01F   85 95       10461   	sta  cachetrk   ; set track
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 139-3
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     C021   A0 01       10462   	ldy  #1
     C023   4C 9569     10463   	jmp  dorec1     ; go for it
                        10464   	
                        10465   ;******************************************************
                        10466   
     C026   20 AD15     10467   burtst  jsr  tstatn     ; test for atn
     C029               10468   burst
     C029   AD 4001     10469   1$      lda  pb         ; debounce
     C02C   CD 4001     10470   	cmp  pb
     C02F   D0 F8       10471   	bne  1$         ; same ?
                        10472   
     C031   29 FF       10473   	and  #$ff       ; set/clr neg flag
     C033   30 F1       10474   	bmi  burtst     ; br, attn low
                        10475   
     C035   45 76       10476   	eor  fsflag     ; wait for state chg
     C037   29 04       10477   	and  #4
     C039   F0 EE       10478   	beq  1$
                        10479   	
     C03B   45 76       10480   	eor  fsflag
     C03D   85 76       10481   	sta  fsflag     ; state change
     C03F   60          10482   	rts
                        10483   
                        10484   
                        10485   ;******************************************************
                        10486   
     C040   38          10487   sectnx  sec
     C041   AD 01EF     10488   	lda  minsek
     C044   F0 03       10489   	beq  1$
                        10490   	
     C046   E9 02       10491   	sbc  #2
     C048   2C          10492   	.byte skip2
     C049   E9 01       10493   1$      sbc  #1
     C04B   85 3D       10494   	sta  tmp+5      ; save min sector - 1, -2
                        10495   	
     C04D   AD 0204     10496   	lda  cmdbuf+4   ; get original sector
     C050   CD 01F0     10497   	cmp  maxsek
     C053   F0 06       10498   	beq  2$         ; equal to or
                        10499   
     C055   18          10500   	clc
     C056   69 01       10501   	adc  #1         ; next sector
     C058   4C C06E     10502   	jmp  5$
                        10503   
     C05B   A5 7C       10504   2$      lda  switch     ; check side
     C05D   A8          10505   	tay
     C05E   49 10       10506   	eor  #bit4      ; invert side
     C060   85 7C       10507   	sta  switch
     C062   98          10508   	tya
     C063   29 10       10509   	and  #bit4
     C065   F0 03       10510   	beq  4$         ; bra
                        10511   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 139-4
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

     C067   EE 0203     10512   3$      inc  cmdbuf+3   ; next track
     C06A   A5 94       10513   4$      lda  pstartsec
     C06C   B0 08       10514   	bcs  6$         ; bra ... here or there
                        10515   
     C06E   90 06       10516   5$      bcc  6$         ; less than
                        10517   
     C070   ED 01F0     10518   	sbc  maxsek     ; rap around
     C073   18          10519   	clc
     C074   65 3D       10520   	adc  tmp+5      ; add min now
     C076   8D 0204     10521   6$      sta  cmdbuf+4   ; next sector for controller
     C079   60          10522   	rts
                        10523   ;******************************************************
                        10524   
     C07A               10525   lsectnx
     C07A   A5 75       10526   	lda  numsec
     C07C   38          10527   	sec
     C07D   E9 01       10528   	sbc  #1
     C07F   85 3D       10529   	sta  tmp+5      ; last logical sector number
                        10530   
     C081   AD 0204     10531   	lda  cmdbuf+4   ; get original sector
     C084   C5 3D       10532   	cmp  tmp+5
     C086   F0 06       10533   	beq  1$         ; equal to or
                        10534   
     C088   18          10535   	clc
     C089   69 01       10536   	adc  #1         ; next sector
     C08B   4C C093     10537   	jmp  2$
                        10538   
     C08E   EE 0203     10539   1$      inc  cmdbuf+3   ; next track
     C091   A9 00       10540   	lda  #0
     C093   8D 0204     10541   2$      sta  cmdbuf+4
     C096   60          10542   	rts
                        10543   
                        10544   ;******************************************************
                        10545   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 140
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10547   
                        10548   ;******************************************************
                        10549   
     C097   A4 92       10550   maxmin  ldy  pnumsec    ; get ns
     C099   88          10551   	dey             ; one less
     C09A   A9 FF       10552   	lda  #255       ; as small as min can get
     C09C   D9 020B     10553   minim   cmp  cmdbuf+11,y
     C09F   90 03       10554   	bcc  no_min     ; br, no change
                        10555   
     C0A1   B9 020B     10556   	lda  cmdbuf+11,y
     C0A4   88          10557   no_min  dey
     C0A5   10 F5       10558   	bpl  minim
                        10559   
     C0A7   8D 01EF     10560   	sta  minsek     ; save min
                        10561   
     C0AA   A4 92       10562   	ldy  pnumsec
     C0AC   88          10563   	dey             ; one less
     C0AD   A9 00       10564   	lda  #0         ; as small as max can get
     C0AF   D9 020B     10565   maxim   cmp  cmdbuf+11,y
     C0B2   B0 03       10566   	bcs  no_max     ; br, no change
                        10567   
     C0B4   B9 020B     10568   	lda  cmdbuf+11,y
     C0B7   88          10569   no_max  dey
     C0B8   10 F5       10570   	bpl  maxim
                        10571   
     C0BA   8D 01F0     10572   	sta  maxsek     ; save max
     C0BD   60          10573   	rts
                        10574   
                        10575   ;******************************************************
                        10576   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 141
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10578   ;
                        10579   ;BURST CMD ONE - READ
                        10580   ;
                        10581   ;      BYTE BIT 7       6       5       4       3       2       1       0
                        10582   ;============================================================================
                        10583   ;       00      0       1       0       1       0       1       0       1
                        10584   ;----------------------------------------------------------------------------
                        10585   ;       01      0       0       1       1       0       0       0       0
                        10586   ;----------------------------------------------------------------------------
                        10587   ;       02      L       E       X       S       0       0       0       N
                        10588   ;----------------------------------------------------------------------------
                        10589   ;       03                     DESTINATION TRACK
                        10590   ;----------------------------------------------------------------------------
                        10591   ;       04                     DESTINATION SECTOR
                        10592   ;----------------------------------------------------------------------------
                        10593   ;       05                     NUMBER OF SECTORS
                        10594   ;----------------------------------------------------------------------------
                        10595   ;       06                     NEXT TRACK (OPTIONAL)
                        10596   ;----------------------------------------------------------------------------
                        10597   ;
                        10598   ;
                        10599   ;   RANGE:
                        10600   ;
                        10601   ;       VALUES ARE DETERMINED UPON THE PARTICULAR DISK FORMAT.
                        10602   ;
                        10603   ;SWITCHES:
                        10604   ;
                        10605   ;       L - LOGICAL SECTOR (1=LOGICAL)
                        10606   ;       E - IGNORE ERROR (1=IGNORE)
                        10607   ;       S - SIDE SELECT
                        10608   ;       N - DRIVE NUMBER
                        10609   ;
                        10610   ;
                        10611   ;
                        10612   ;PROTOCOL:
                        10613   ;
                        10614   ;       BURST HANDSHAKE.
                        10615   ;
                        10616   ;
                        10617   ;
                        10618   ;CONVENTIONS:
                        10619   ;
                        10620   ;       CMD ONE MUST BE PROCEEDED WITH CMD 3 OR CMD 6  ONCE TO LOG
                        10621   ;       THE DISK IN,  THEN READS  OR WRITES CAN BE PERFORMED UNTIL
                        10622   ;       THE DISK IS CHANGED.
                        10623   ;
                        10624   ;
                        10625   ;OUTPUT:
                        10626   ;       ONE  BURST  STATUS  BYTE PRECEDING BURST DATA WILL BE SENT
                        10627   ;       FOR  EVERY  SECTOR  TRANSFERRED.    ON  AN  ERROR  CONDITION
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 141-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10628   ;       DATA  WILL NOT BE SENT UNLESS THE E BIT IS SET.
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 142
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10630   ;BURST CMD TWO - WRITE
                        10631   ;
                        10632   ;      BYTE BIT 7       6       5       4       3       2       1       0
                        10633   ;============================================================================
                        10634   ;       00      0       1       0       1       0       1       0       1
                        10635   ;----------------------------------------------------------------------------
                        10636   ;       01      0       0       1       1       0       0       0       0
                        10637   ;----------------------------------------------------------------------------
                        10638   ;       02      L       E       X       S       0       0       1       N
                        10639   ;----------------------------------------------------------------------------
                        10640   ;       03                     DESTINATION TRACK
                        10641   ;----------------------------------------------------------------------------
                        10642   ;       04                     DESTINATION SECTOR
                        10643   ;----------------------------------------------------------------------------
                        10644   ;       05                     NUMBER OF SECTORS
                        10645   ;----------------------------------------------------------------------------
                        10646   ;       06                     NEXT TRACK (OPTIONAL)
                        10647   ;----------------------------------------------------------------------------
                        10648   ;
                        10649   ;
                        10650   ;   RANGE:
                        10651   ;
                        10652   ;       VALUES ARE DETERMINED UPON THE PARTICULAR DISK FORMAT.
                        10653   ;
                        10654   ;
                        10655   ;SWITCHES:
                        10656   ;
                        10657   ;       L - LOGICAL (1=LOGICAL)
                        10658   ;       E - IGNORE ERROR (1=IGNORE)
                        10659   ;       S - SIDE SELECT
                        10660   ;       N - DRIVE NUMBER
                        10661   ;
                        10662   ;
                        10663   ;
                        10664   ;PROTOCOL:
                        10665   ;
                        10666   ;       BURST DATA TO THE DRIVE, THEN HOST MUST PERFORM THE FO-
                        10667   ;       LLOWING: FAST SERIAL INPUT, PULL THE CLOCK LOW AND WAIT
                        10668   ;       FOR THE BURST STATUS BYTE, PULL CLOCK HIGH, GO OUTPUT
                        10669   ;       FOR MULTI-SECTOR TRANSFERS AND CONTINUE.
                        10670   ;
                        10671   ;
                        10672   ;
                        10673   ;CONVENTIONS:
                        10674   ;
                        10675   ;       CMD TWO MUST BE PROCEEDED WITH CMD 3 OR CMD 6  ONCE TO LOG
                        10676   ;       THE DISK IN,   THEN WRITES CAN BE PERFORMED UNTIL THE DISK
                        10677   ;       IS CHANGED.
                        10678   ;
                        10679   ;
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 142-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10680   ;INPUT:
                        10681   ;       HOST MUST TRANSFER BURST DATA.
                        10682   ;
                        10683   ;
                        10684   ;OUTPUT:
                        10685   ;       ONE BURST STATUS BYTE FOLLOWING EACH WRITE OPERATION.
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 143
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10687   ;BURST CMD THREE - INQUIRE DISK
                        10688   ;
                        10689   ;
                        10690   ;      BYTE BIT 7       6       5       4       3       2       1       0
                        10691   ;============================================================================
                        10692   ;       00      0       1       0       1       0       1       0       1
                        10693   ;----------------------------------------------------------------------------
                        10694   ;       01      0       0       1       1       0       0       0       0
                        10695   ;----------------------------------------------------------------------------
                        10696   ;       02      X       X       X       S       0       1       0       N
                        10697   ;----------------------------------------------------------------------------
                        10698   ;
                        10699   ;
                        10700   ;
                        10701   ;SWITCHES:
                        10702   ;
                        10703   ;       N - DRIVE NUMBER
                        10704   ;
                        10705   ;
                        10706   ;OUTPUT:
                        10707   ;       ONE BURST STATUS  BYTE FOLLOWING THE INQUIRE OPERATION.
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 144
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10709   ;BURST CMD FOUR - FORMAT
                        10710   ;
                        10711   ;
                        10712   ;      BYTE  BIT 7       6       5       4       3       2       1       0
                        10713   ;============================================================================
                        10714   ;       00      0       1       0       1       0       1       0       1
                        10715   ;----------------------------------------------------------------------------
                        10716   ;       01      0       0       1       1       0       0       0       0
                        10717   ;----------------------------------------------------------------------------
                        10718   ;       02      M       X       X       X       0       1       1       N
                        10719   ;----------------------------------------------------------------------------
                        10720   ;       03           SECTOR SIZE          * (OPTIONAL DEF-02,512 BYTE SECTORS)
                        10721   ;----------------------------------------------------------------------------
                        10722   ;       04           LAST TRACK NUMBER      (OPTIONAL DEF-79)
                        10723   ;----------------------------------------------------------------------------
                        10724   ;       05           NUMBER OF SECTORS   ** (OPTIONAL DEPENDS ON BYTE 05)
                        10725   ;----------------------------------------------------------------------------
                        10726   ;       06           STARTING TRACK         (OPTIONAL DEF-0)
                        10727   ;----------------------------------------------------------------------------
                        10728   ;       07           FILL BYTE              (OPTIONAL DEF-$E5)
                        10729   ;----------------------------------------------------------------------------
                        10730   ;       08           START SECTOR           (OPTIONAL DEF-1)
                        10731   ;----------------------------------------------------------------------------
                        10732   ;       09           GAP BYTE           *** (OPTIONAL)
                        10733   ;----------------------------------------------------------------------------
                        10734   ;
                        10735   ;*  01 - 256 BYTE SECTORS            ** 16 - 256 BYTE SECTORS
                        10736   ;   02 - 512 BYTE SECTORS                9 - 512 BYTE SECTORS
                        10737   ;   03 - 1024 BYTE SECTORS               5 - 1024 BYTE SECTORS
                        10738   ;
                        10739   ; *** 22 - 256 BYTE SECTORS
                        10740   ;     38 - 512 BYTE SECTORS
                        10741   ;     68 - 1024 BYTE SECTORS
                        10742   ;
                        10743   ;SWITCHES:
                        10744   ;
                        10745   ;       M - MODE (0=CREATE DIRECTORY & BAM , IGNORE OTHER PARMS)
                        10746   ;       N - DRIVE NUMBER
                        10747   ;
                        10748   ;
                        10749   ;PROTOCOL:
                        10750   ;
                        10751   ;       CONVENTIONAL.
                        10752   ;
                        10753   ;
                        10754   ;CONVENTIONS:
                        10755   ;
                        10756   ;       CMD FOUR MUST BE FOLLOWED WITH CMD 3 OR CMD 6 ONCE TO LOG
                        10757   ;       THE DISK IN.
                        10758   ;
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 144-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10759   ;
                        10760   ;OUTPUT:
                        10761   ;        NONE.  STATUS WILL BE UPDATED WITHIN THE DRIVE.
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 145
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10763   ;BURST CMD FIVE - SECTOR INTERLEAVE NOT SUPPORTED
                        10764   ;
                        10765   ;
                        10766   ;      BYTE BIT 7       6       5       4       3       2       1       0
                        10767   ;============================================================================
                        10768   ;       00      0       1       0       1       0       1       0       1
                        10769   ;----------------------------------------------------------------------------
                        10770   ;       01      0       0       1       1       0       0       0       0
                        10771   ;----------------------------------------------------------------------------
                        10772   ;       02      W       X       X       0       1       0       0       N
                        10773   ;----------------------------------------------------------------------------
                        10774   ;       04                     INTERLEAVE
                        10775   ;----------------------------------------------------------------------------
                        10776   ;
                        10777   ;
                        10778   ;SWITCHES:
                        10779   ;
                        10780   ;       W - WRITE SWITCH
                        10781   ;       N - DRIVE NUMBER
                        10782   ;       X - DON'T CARE
                        10783   ;
                        10784   ;PROTOCOL:
                        10785   ;
                        10786   ;       BURST HANDSHAKE (W=1), CONVENTIONAL (W=0).
                        10787   ;
                        10788   ;
                        10789   ;CONVENTIONS:
                        10790   ;
                        10791   ;       THIS IS A SOFT INTERLEAVE USED FOR MULTI-SECTOR BURST
                        10792   ;       READ AND WRITE.
                        10793   ;
                        10794   ;OUTPUT:
                        10795   ;        NONE (W=0), INTERLEAVE BURST BYTE (W=1).
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 146
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10797   ;BURST CMD SIX - QUERY DISK FORMAT
                        10798   ;
                        10799   ;
                        10800   ;      BYTE BIT 7       6       5       4       3       2       1       0
                        10801   ;============================================================================
                        10802   ;       00      0       1       0       1       0       1       0       1
                        10803   ;----------------------------------------------------------------------------
                        10804   ;       01      0       0       1       1       0       0       0       0
                        10805   ;----------------------------------------------------------------------------
                        10806   ;       02      F       X       T       S       1       0       1       N
                        10807   ;----------------------------------------------------------------------------
                        10808   ;       03                  OFFSET      (OPTIONAL F-BIT SET)
                        10809   ;----------------------------------------------------------------------------
                        10810   ;
                        10811   ;
                        10812   ;SWITCHES:
                        10813   ;
                        10814   ;       F - FORCE FLAG (F=1, WILL STEP THE HEAD WITH THE
                        10815   ;           OFFSET SPECIFIED IN BYTE 03)
                        10816   ;       T - SECTOR TABLE (T=1, SEND SECTOR TABLE).
                        10817   ;       N - DRIVE NUMBER
                        10818   ;       X - DON'T CARE.
                        10819   ;
                        10820   ;PROTOCOL:
                        10821   ;
                        10822   ;       BURST HANDSHAKE.
                        10823   ;
                        10824   ;
                        10825   ;CONVENTIONS:
                        10826   ;
                        10827   ;       THIS IS A METHOD OF DETERMINING THE FORMAT OF THE DISK ON
                        10828   ;       ANY PARTICULAR TRACK, IT ALSO LOGS NON-STANDARD DISKS
                        10829   ;       (IE. MINIMUM SECTOR ADDRESSES OTHER THAN ZERO).
                        10830   ;
                        10831   ;OUTPUT:
                        10832   ;      * BURST STATUS BYTE (IF THERE WAS AN ERROR THEN NO BYTES WILL FOLLOW)
                        10833   ;     **        BURST STATUS BYTE (IF THERE WAS AN ERROR IN COMPILING
                        10834   ;                          MFM FORMAT INFORMATION NO BYTES
                        10835   ;                          WILL FOLLOW)
                        10836   ;       NUMBER OF SECTORS (THE NUMBER OF SECTORS ON A PARTICULAR
                        10837   ;                          TRACK)
                        10838   ;       LOGICAL TRACK     (THE LOGICAL TRACK NUMBER FOUND IN THE
                        10839   ;                          DISK HEADER)
                        10840   ;       MINIMUM SECTOR    (THE LOGICAL SECTOR WITH THE LOWEST
                        10841   ;                          VALUE ADDRESS)
                        10842   ;       MAXIMUM SECTOR    (THE LOGICAL SECTOR WITH THE HIGHEST
                        10843   ;                          VALUE ADDRESS)
                        10844   ;       INTERLEAVE        (THE HARD INTERLEAVE FOUND ON A PARTICULAR
                        10845   ;                          TRACK) ALWAYS RETURNS A 1
                        10846   ;       SECTOR TABLE      (WITH T BIT SET SECTOR TABLE IS SENT)
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 146-1
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10847   ;
                        10848   ; * STATUS FROM TRACK OFFSET ZERO.
                        10849   ;** IF F BIT IS SET STATUS IS FROM OFFSET TRACK.
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 147
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10851   ;BURST CMD SEVEN - INQUIRE STATUS
                        10852   ;
                        10853   ;
                        10854   ;     BYTE  BIT 7       6       5       4       3       2       1       0
                        10855   ;============================================================================
                        10856   ;       00      0       1       0       1       0       1       0       1
                        10857   ;----------------------------------------------------------------------------
                        10858   ;       01      0       0       1       1       0       0       0       0
                        10859   ;----------------------------------------------------------------------------
                        10860   ;       02      W       X       M       0       1       1       0       N
                        10861   ;----------------------------------------------------------------------------
                        10862   ;       03                      NEW STATUS (W-BIT CLEAR)
                        10863   ;----------------------------------------------------------------------------
                        10864   ;       04                      NEW ORA MASK (M-BIT SET)
                        10865   ;----------------------------------------------------------------------------
                        10866   ;       05                      NEW AND MASK (M-BIT SET)
                        10867   ;----------------------------------------------------------------------------
                        10868   ;
                        10869   ;SWITCHES:
                        10870   ;
                        10871   ;       W - WRITE SWITCH
                        10872   ;       M - MODIFY ORA/AND MASK
                        10873   ;       N - DRIVE NUMBER
                        10874   ;       X - DON'T CARE
                        10875   ;
                        10876   ;PROTOCOL:
                        10877   ;
                        10878   ;       BURST HANDSHAKE (W=1), CONVENTIONAL (W=0).
                        10879   ;
                        10880   ;
                        10881   ;CONVENTIONS:
                        10882   ;
                        10883   ;       THIS IS A METHOD OF READING OR WRITING CURRENT STATUS.
                        10884   ;
                        10885   ;
                        10886   ;OUTPUT:
                        10887   ;        NONE (W=0), BURST STATUS BYTE (W=1)
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 148
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10889   ;BURST CMD EIGHT - DUMP TRACK CACHE BUFFER
                        10890   ;
                        10891   ;
                        10892   ;      BYTE  BIT 7      6       5       4       3       2       1       0
                        10893   ;============================================================================
                        10894   ;       00      0       1       0       1       0       1       0       1
                        10895   ;----------------------------------------------------------------------------
                        10896   ;       01      0       0       1       1       0       0       0       0
                        10897   ;----------------------------------------------------------------------------
                        10898   ;       02      F       S       X       1       1       1       0       1
                        10899   ;----------------------------------------------------------------------------
                        10900   ;       03                      PHYSICAL TRACK
                        10901   ;----------------------------------------------------------------------------
                        10902   ;
                        10903   ;SWITCHES:
                        10904   ;       F - FORCE FLAG WILL SET DIRTY FLAG, (S MUST BE SET AND PARM 03 MUST BE
                        10905   ;           INCLUDED)
                        10906   ;       S - SIDE
                        10907   ;
                        10908   ;PROTOCOL:
                        10909   ;
                        10910   ;       BURST HANDSHAKE
                        10911   ;
                        10912   ;CONVENTIONS:
                        10913   ;
                        10914   ;       THIS IS A METHOD OF WRITING CURRENT TRACK BUFFER CONTENTS
                        10915   ;       TO DISK IF THE DIRTY FLAG IS SET.  IF THE F FLAG IS SPECIFIED
                        10916   ;       THEN THE S FLAG MUST BE INCLUDED ALONG WITH PARM 03.
                        10917   ;
                        10918   ;OUTPUT:
                        10919   ;        BURST STATUS BYTE
                        10920   ;
                        10921   ;
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 149
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10923   ;BURST CMD NINE - CHGUTL UTILITY
                        10924   ;
                        10925   ;
                        10926   ;      BYTE  BIT 7       6       5       4       3       2       1       0
                        10927   ;============================================================================
                        10928   ;       00      0       1       0       1       0       1       0       1
                        10929   ;----------------------------------------------------------------------------
                        10930   ;       01      0       0       1       1       0       0       0       0
                        10931   ;----------------------------------------------------------------------------
                        10932   ;       02      X       X       X       1       1       1       1       0
                        10933   ;----------------------------------------------------------------------------
                        10934   ;       03     UTILITY COMMANDS: 'S', 'F', 'R', 'T', 'I', 'V', 'MR', 'MW', #DEV
                        10935   ;----------------------------------------------------------------------------
                        10936   ;       04         COMMAND PARAMETER
                        10937   ;----------------------------------------------------------------------------
                        10938   ;SWITCHES:
                        10939   ;
                        10940   ;       X - DON'T CARE.
                        10941   ;
                        10942   ;
                        10943   ;
                        10944   ;UTILITY COMMANDS:
                        10945   ;
                        10946   ;       'S' - DOS SECTOR INTERLEAVE.
                        10947   ;       'F' - FAST SERIAL.
                        10948   ;       'R' - DOS RETRIES.
                        10949   ;       'T' - ROM SIGNATURE ANALYSIS.
                        10950   ;       'I' - IEEE CACHE TIMEOUT
                        10951   ;       'MR/W' - BURST MEMORY READ/WRITE
                        10952   ;       'V' - VERIFY SELECT.
                        10953   ;       #DEV - DEVICE #.
                        10954   ;
                        10955   ;
                        10956   ;NOTE: BYTE 02 IS EQUIVALENT TO A '>'
                        10957   ;
                        10958   ;EXAMPLES:
                        10959   ;       "U0>S"+CHR$(SECTOR-INTERLEAVE)
                        10960   ;       "U0>I"+CHR$(IEEE_TIMEOUT_VALUE)
                        10961   ;       "U0>R"+CHR$(RETRIES)
                        10962   ;       "U0>T"
                        10963   ;       "U0>B0"=SLOW SERIAL, "U0>B1"=FAST SERIAL
                        10964   ;       "U0>V1"=VERIFY ON, "U0>V0"=VERIFY OFF
                        10965   ;       "U0>MR"=BURST MEM READ, "U0>MW"=BURST MEM WRITE
                        10966   ;       "U0>"+CHR$(#DEV), WHERE #DEV = 4-30
                        10967   ;
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 150
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        10969   ;BURST CMD TEN - FASTLOAD UTILITY
                        10970   ;
                        10971   ;
                        10972   ;      BYTE  BIT 7       6       5       4       3       2       1       0
                        10973   ;============================================================================
                        10974   ;       00      0       1       0       1       0       1       0       1
                        10975   ;----------------------------------------------------------------------------
                        10976   ;       01      0       0       1       1       0       0       0       0
                        10977   ;----------------------------------------------------------------------------
                        10978   ;       02      P       X       X       1       1       1       1       1
                        10979   ;----------------------------------------------------------------------------
                        10980   ;       03                    FILE NAME
                        10981   ;----------------------------------------------------------------------------
                        10982   ;
                        10983   ;SWITCHES:
                        10984   ;
                        10985   ;       P - SEQUENTIAL FILE BIT (P=1, DOES NOT HAVE TO BE A PROGRAM
                        10986   ;                                     FILE)
                        10987   ;       X - DON'T CARE.
                        10988   ;
                        10989   ;PROTOCOL:
                        10990   ;
                        10991   ;       BURST HANDSHAKE.
                        10992   ;
                        10993   ;
                        10994   ;OUTPUT:
                        10995   ;        BURST STATUS BYTE PRECEDING EACH SECTOR TRANSFERRED.
                        10996   ;
                        10997   ;STATUS IS AS FOLLOWS:
                        10998   ;
                        10999   ;       0000000X ............. OK
                        11000   ;     * 00000010 ............. FILE NOT FOUND
                        11001   ;    ** 00011111 ............. EOI
                        11002   ;
                        11003   ; * VALUES BETWEEN THE RANGE 3-15 SHOULD BE CONSIDERED A FILE READ ERROR.
                        11004   ;
                        11005   ;** FOLLOWING THE EOI STATUS BYTE THE NEXT BYTE IS THE NUMBER OF DATA
                        11006   ;   BYTES TO FOLLOW.
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 151
"burstc"   BURSTC.SRC

Error Addr  Code          Seq   Source statement

                        11008   ;STATUS BYTE BREAK DOWN
                        11009   ;
                        11010   ;
                        11011   ;       BIT 7       6       5       4       3       2       1       0
                        11012   ;============================================================================
                        11013   ;        MODE      DN     SECTOR SIZE      [  CONTROLLER  STATUS   ]
                        11014   ;----------------------------------------------------------------------------
                        11015   ;
                        11016   ;
                        11017   ;       MODE - DISK FORMAT 0=RESIDENT, 1= ALIEN
                        11018   ;         DN - DRIVE NUMBER
                        11019   ;
                        11020   ; SECTOR SIZE - (MFM ONLY)
                        11021   ;              00 .... 128 BYTE SECTORS (NOT SUPPORTED)
                        11022   ;              01 .... 256 BYTE SECTORS
                        11023   ;              10 .... 512 BYTE SECTORS (DEFAULT)
                        11024   ;              11 .... 1024 BYTE SECTORS
                        11025   ;
                        11026   ; CONTROLLER STATUS
                        11027   ;            000X .... OK
                        11028   ;            0010 .... SECTOR NOT FOUND
                        11029   ;            0011 .... NO ADDRESS MARK
                        11030   ;            0100 .... DATA BLOCK NOT PRESENT
                        11031   ;            0101 .... DATA CRC ERROR
                        11032   ;            0110 .... FORMAT ERROR
                        11033   ;            0111 .... VERIFY ERROR
                        11034   ;            1000 .... WRITE PROTECT ERROR
                        11035   ;            1001 .... HEADER BLOCK CHECKSUM ERROR
                        11036   ;            1010 ....
                        11037   ;            1011 .... DISK CHANGE
                        11038   ;            1100 .... DRIVE ELECTRONICS NOT READY
                        11039   ;            1101 .... NOT LOGICAL FORMAT
                        11040   ;            1110 .... SYNTAX ERROR
                        11041   ;            1111 .... NO DRIVE PRESENT
                        11042   ;
                        11043   	.INCLUDE mcntl
                        11044   	.messg "mcntl"
                        11045   	.subttl "mcntl"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 152
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

                        11047   
                        11048   ; Controller command in .a and job # in .y
                        11049   
     C0BE   BA          11050   lcc     tsx     	; save current stk pntr
     C0BF   86 2C       11051           stx  savsp
     C0C1   A9 80       11052   	lda  #bit7
     C0C3   85 83       11053   	sta  nextjob	; set no job flag
     C0C5   A0 08       11054   	ldy  #numjob	; include bam jobs
     C0C7   B9 0002     11055   lcc0	lda  jobs,y     ; find a job
     C0CA   30 12       11056           bmi  prcmd	; ... a real job
                        11057   
     C0CC   B9 009F     11058   	lda  cacheoff,y
     C0CF   29 7F       11059   	and  #all-bit7	; leave offset into track cache
     C0D1   99 009F     11060   	sta  cacheoff,y	; clear translation flag
                        11061   	
     C0D4   88          11062   top     dey     	; try next one
     C0D5   10 F0       11063           bpl  lcc0	; next if no job's now
                        11064   	
     C0D7   A4 83       11065   	ldy  nextjob
     C0D9   10 29       11066   	bpl  start_ctl	; start job
                        11067   	
U    C0DB   4C 0000 "   11068   	jmp  end_ctl	; do timing
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 153
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

     C0DE   84 83       11070   prcmd	sty  nextjob
     C0E0   AA          11071   	tax		; job index
     C0E1   98          11072   	tya
     C0E2   0A          11073   	asl  a		; x2
     C0E3   85 99       11074   	sta  hdrjob	; shifted nextjob
     C0E5   BD C1E7     11075   	lda  cmdindex,x	; translate for internal use
     C0E8   85 84       11076   	sta  cindex	; save index
     C0EA   AA          11077   	tax
     C0EB   BD C163     11078           lda  ctl_cmd_info,x
     C0EE   85 85       11079           sta  info       ; get information and save it
     C0F0   BD C184     11080           lda  ctl_cmd_info1,x
     C0F3   85 86       11081           sta  info+1     ; get information and save it
                        11082   
U    C0F5   20 0000 "   11083   	jsr  jtrans_ts	; translate logical track and sector to physical
                        11084   	
     C0F8   06 85       11085   1$	asl  info       ; cache operation ?
     C0FA   90 03       11086           bcc  2$
                        11087   
U    C0FC   20 0000 "   11088   	jsr  trk_in_mem	; is trk in memory ?, don't come back if it is...
                        11089   
     C0FF   A4 83       11090   2$	ldy  nextjob
     C101   4C C0D4     11091   	jmp  top
                        11092   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 154
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

                        11094   
     C104               11095   start_ctl
     C104   06 85       11096   	asl  info       ; start motor ?
     C106   90 03       11097           bcc  1$
                        11098   	
U    C108   20 0000 "   11099   	jsr  start_mtr  ; start motor
                        11100   
     C10B   06 85       11101   1$	asl  info       ; wait for motor up to speed ?
     C10D   90 03       11102           bcc  2$
                        11103   
U    C10F   20 0000 "   11104           jsr  wait_mtr   ; check mtr don't come back if drv not ready
                        11105   
     C112   06 85       11106   2$      asl  info	; logical seek required ?
     C114   90 03       11107   	bcc  3$
                        11108   
U    C116   20 0000 "   11109   	jsr  seek	; seek - won't come back on an error
                        11110   
     C119   06 85       11111   3$	asl  info       ; check dirty track cache flag ?
     C11B   90 14       11112           bcc  4$
                        11113   
     C11D   A5 87       11114   	lda  dirty
     C11F   10 10       11115   	bpl  4$		; br, not dirty
                        11116   
     C121   A5 95       11117   	lda  cachetrk
     C123   85 88       11118   	sta  cmdtrk	; want to go here
     C125   C5 27       11119   	cmp  drvtrk	; where are we?
     C127   D0 17       11120   	bne  5$		; br, step there first
                        11121   
     C129   A5 97       11122   	lda  cacheside
U    C12B   20 0000 "   11123   	jsr  sid_select ; select side
     C12E   4C C600     11124   	jmp  wrtold_ctl	; handle dirty condition & write out old track
                        11125   
     C131   06 85       11126   4$      asl  info       ; step?
     C133   90 14       11127   	bcc  6$
                        11128   
     C135   A4 99       11129   	ldy  hdrjob
     C137   B9 01BC     11130   	lda  hdrs2,y	; get address
     C13A   85 88       11131   	sta  cmdtrk	; want to go here
     C13C   C5 27       11132   	cmp  drvtrk
     C13E   F0 09       11133   	beq  6$
                        11134   
     C140   A5 26       11135   5$      lda  drvst	; set stepping mode
     C142   09 40       11136   	ora  #bit6
     C144   85 26       11137   	sta  drvst
U    C146   4C 0000 "   11138   	jmp  end_ctl	; do stepper stuff
                        11139   
     C149   06 85       11140   6$	asl  info       ; select side
     C14B   90 05       11141   	bcc  7$
                        11142   
     C14D   A5 96       11143   	lda  tcacheside	; get translated side
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 154-1
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

U    C14F   20 0000 "   11144   	jsr  sid_select ; select side
                        11145   
     C152   A5 84       11146   7$	lda  cindex	; get index
     C154   0A          11147   	asl  a		; x2
     C155   AA          11148   	tax
     C156   BD C1A5     11149   	lda  ctl_cmd,x
     C159   85 48       11150   	sta  ip+2
     C15B   BD C1A6     11151           lda  ctl_cmd+1,x
     C15E   85 49       11152           sta  ip+3
     C160   6C 0048     11153   	jmp  (ip+2)	; go do the command
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 155
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

                        11155   
                        11156   ; Command Table Information
                        11157   
     C163               11158   ctl_cmd_info
                        11159   
                        11160   ;bit   7   -  Translate T & S ?
                        11161   ;bit   6   -  Cache Op ?
                        11162   ;bit   5   -  Start Motor ?
                        11163   ;bit   4   -  Wait Motor ?
                        11164   ;bit   3   -  Seek?
                        11165   ;bit   2   -  Check Dirty Flag ?
                        11166   ;bit   1   -  Step Required ?
                        11167   ;bit   0   -  Select side?
                        11168   
            =00B8       11169   bit7543=bit7+bit5+bit4+bit3
            =0038       11170   bit543=bit5+bit4+bit3
                        11171   
     C163   FF          11172     .byte    all			; read sector* 1
     C164   00          11173     .byte    0			; reset disk controller 2
     C165   30          11174     .byte    bit5+bit4		; motor on with spinup sequence 3
     C166   00          11175     .byte    0			; motor off with spin down sequence 4
     C167   20          11176     .byte    bit5			; motor on 5
     C168   00          11177     .byte    0			; motor off 6
     C169   32          11178     .byte    bit5+bit4+bit1	; move physical 7
     C16A   30          11179     .byte    bit5+bit4		; format side 8
     C16B   FF          11180     .byte    all			; write sector* 9
     C16C   30          11181     .byte    bit5+bit4		; disk present? 10
     C16D   00          11182     .byte    0			; turn activity led on 11
     C16E   00          11183     .byte    0			; turn activity led off 12
     C16F   00          11184     .byte    0			; blink power led 13
     C170   00          11185     .byte    0			; disable power led blink 14
     C171   00          11186     .byte    0			; select side 15
     C172   00          11187     .byte    0			; buffer move 16
     C173   BB          11188     .byte    bit7543+bit1+bit0	; verify sector* 17
     C174   3C          11189     .byte    bit5+bit4+bit3+bit2	; dump track cache buffer 18
     C175   3B          11190     .byte    all-bit7-bit6-bit2	; read physical into buffer 19
     C176   3B          11191     .byte    all-bit7-bit6-bit2	; write physical from buffer 20
     C177   3F          11192     .byte    all-bit7-bit6	; move head to physical track 21
     C178   30          11193     .byte    bit5+bit4		; seek any header* 22
     C179   BB          11194     .byte    all-bit6-bit2	; seek a particular header* 23
     C17A   30          11195     .byte    bit5+bit4		; restore head* 24
     C17B   00          11196     .byte    0			; execute buffer* 25
     C17C   3A          11197     .byte    bit543+bit1		; execute buffer w/ mtr on speed & on track* 26
     C17D   B2          11198     .byte    bit7+bit5+bit4+bit1	; format disk 27
     C17E   FF          11199     .byte    all			; read sector notransfer 28
     C17F   FF          11200     .byte    all			; write sector notransfer 29
     C180   7F          11201     .byte    all-bit7		; read sector notranslate, notransfer 30
     C181   7F          11202     .byte    all-bit7		; write sector notranslate, notransfer 31
     C182   30          11203     .byte    bit5+bit4		; check write protect status 32
     C183   00          11204     .byte    0			; syntax error 33
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 155-1
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

                        11205    
     C184               11206   ctl_cmd_info1
                        11207   
                        11208   ;bit   7   -  Bypass translate routine?
                        11209   ;bit   6   -  Logical/Physical?
                        11210   ;bit   5   -  Write/Read Operation?
                        11211   ;bit   4   -  *** reserved ***
                        11212   ;bit   3   -  *** reserved ***
                        11213   ;bit   2   -  *** reserved ***
                        11214   ;bit   1   -  *** reserved ***
                        11215   ;bit   0   -  *** reserved ***
                        11216   
     C184   00          11217     .byte    0			; read sector* 1
     C185   80          11218     .byte    bit7			; reset disk controller 2
     C186   80          11219     .byte    bit7			; motor on with spinup sequence 3
     C187   80          11220     .byte    bit7			; motor off with spin down sequence 4
     C188   80          11221     .byte    bit7			; motor on 5
     C189   80          11222     .byte    bit7			; motor off 6
     C18A   80          11223     .byte    bit7			; move physical 7
     C18B   00          11224     .byte    0			; format side 8
     C18C   20          11225     .byte    bit5			; write sector* 9
     C18D   80          11226     .byte    bit7			; disk present? 10
     C18E   80          11227     .byte    bit7			; turn activity led on 11
     C18F   80          11228     .byte    bit7			; turn activity led off 12
     C190   80          11229     .byte    bit7			; blink power led 13
     C191   80          11230     .byte    bit7			; disable power led blink 14
     C192   80          11231     .byte    bit7			; select side 15
     C193   80          11232     .byte    bit7			; buffer move 16
     C194   00          11233     .byte    0			; verify sector* 17
     C195   00          11234     .byte    0			; dump track cache buffer 18
     C196   40          11235     .byte    bit6			; read physical into buffer 19
     C197   60          11236     .byte    bit6+bit5		; write physical from buffer 20
     C198   00          11237     .byte    0			; move head to physical track 21
     C199   00          11238     .byte    0			; seek any header* 22
     C19A   00          11239     .byte    0			; seek a particular header* 23
     C19B   00          11240     .byte    0			; restore head* 24
     C19C   00          11241     .byte    0			; execute buffer* 25
     C19D   00          11242     .byte    0			; execute buffer w/ mtr on speed & on track* 26
     C19E   00          11243     .byte    0			; format disk 27
     C19F   40          11244     .byte    bit6			; read sector notransfer 28
     C1A0   60          11245     .byte    bit6+bit5		; write sector notransfer 29
     C1A1   40          11246     .byte    bit6			; read sector notranslation, notransfer 30
     C1A2   60          11247     .byte    bit6+bit5		; write sector notranslation, notransfer 31
     C1A3   80          11248     .byte    bit7			; check write protect status 32
     C1A4   80          11249     .byte    bit7			; syntax error 33
                        11250   
                        11251   
                        11252   ; Command Indirects
                        11253   
     C1A5               11254   ctl_cmd
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 155-2
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

     C1A5   C900        11255     .word    read_ctl		; read from track cache buffer* 1
     C1A7   C2E7        11256     .word    reset_ctl		; reset disk controller 2
     C1A9   C390        11257     .word    moton_ctl		; motor on with spinup sequence 3
     C1AB   C393        11258     .word    motoff_ctl		; motor off with spin down sequence 4
     C1AD   C396        11259     .word    motoni_ctl		; motor on 5
     C1AF   C3A9        11260     .word    motoffi_ctl		; motor off 6
     C1B1   C3AF        11261     .word    seek_ctl		; move physical 7
     C1B3   C3BB        11262     .word    format_ctl		; format side 8
     C1B5   C900        11263     .word    wrtsd_ctl		; write to track cache buffer* 9
     C1B7   C6D7        11264     .word    diskin_ctl		; disk present? 10
     C1B9   C546        11265     .word    ledacton_ctl		; turn activity led on 11
     C1BB   C54F        11266     .word    ledactoff_ctl	; turn activity led off 12
     C1BD   C558        11267     .word    errledon_ctl		; blink power led 13
     C1BF   C561        11268     .word    errledoff_ctl	; disable power led blink 14
     C1C1   C56A        11269     .word    side_ctl		; select side 15
     C1C3   C589        11270     .word    bufmove_ctl		; buffer move 16
     C1C5   C9E1        11271     .word    wrtver_ctl		; verify track cache buffer 17
     C1C7   C5AC        11272     .word    trkwrt_ctl		; track cache dump 18
     C1C9   C800        11273     .word    spread_ctl		; read notrx in buffer 19
     C1CB   C700        11274     .word    spwrt_ctl		; wrt notrx in buffer 20
     C1CD   C6D7        11275     .word    pseek_ctl		; move head to physical track 21
     C1CF   CB09        11276     .word    seekhd_ctl		; seek any header* 22
     C1D1   CAE4        11277     .word    seekphd_ctl		; seek a particular header 23
     C1D3   CB0F        11278     .word    restore_ctl		; restore head* 24
     C1D5   CB26        11279     .word    jumpc_ctl		; execute buffer* 25
     C1D7   CB26        11280     .word    exbuf_ctl		; execute buffer w/ mtr on speed & on track* 26
     C1D9   CB35        11281     .word    formatdk_ctl		; format disk 27
     C1DB   C900        11282     .word    read_ctl		; read from track 28
     C1DD   C900        11283     .word    wrtsd_ctl		; write to track 29
     C1DF   C900        11284     .word    pread_ctl		; read physical address 30
     C1E1   C900        11285     .word    pwrt_ctl		; write physical address 31
     C1E3   CB76        11286     .word    detwp_ctl		; check write protect status 32
     C1E5   CB85        11287     .word    syntaxer		; syntax error 33
                        11288   
            =0042       11289   ctllen=  *-ctl_cmd
                        11290   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 156
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

                        11292   
                        11293   ; Index for Jobs
                        11294   
     C1E7               11295   cmdindex
                        11296   
     C1E7   20          11297   	.byte    $20    ; 0
     C1E8   20          11298   	.byte    $20    ; 1
     C1E9   20          11299   	.byte    $20    ; 2
     C1EA   20          11300   	.byte    $20    ; 3
     C1EB   20          11301   	.byte    $20    ; 4
     C1EC   20          11302   	.byte    $20    ; 5
     C1ED   20          11303   	.byte    $20    ; 6
     C1EE   20          11304   	.byte    $20    ; 7
     C1EF   20          11305   	.byte    $20    ; 8
     C1F0   20          11306   	.byte    $20    ; 9
     C1F1   20          11307   	.byte    $20    ; a
     C1F2   20          11308   	.byte    $20    ; b
     C1F3   20          11309   	.byte    $20    ; c
     C1F4   20          11310   	.byte    $20    ; d
     C1F5   20          11311   	.byte    $20    ; e
     C1F6   20          11312   	.byte    $20    ; f
     C1F7   20          11313   	.byte    $20    ; 10
     C1F8   20          11314   	.byte    $20    ; 11
     C1F9   20          11315   	.byte    $20    ; 12
     C1FA   20          11316   	.byte    $20    ; 13
     C1FB   20          11317   	.byte    $20    ; 14
     C1FC   20          11318   	.byte    $20    ; 15
     C1FD   20          11319   	.byte    $20    ; 16
     C1FE   20          11320   	.byte    $20    ; 17
     C1FF   20          11321   	.byte    $20    ; 18
     C200   20          11322   	.byte    $20    ; 19
     C201   20          11323   	.byte    $20    ; 1a
     C202   20          11324   	.byte    $20    ; 1b
     C203   20          11325   	.byte    $20    ; 1c
     C204   20          11326   	.byte    $20    ; 1d
     C205   20          11327   	.byte    $20    ; 1e
     C206   20          11328   	.byte    $20    ; 1f
     C207   20          11329   	.byte    $20    ; 20
     C208   20          11330   	.byte    $20    ; 21
     C209   20          11331   	.byte    $20    ; 22
     C20A   20          11332   	.byte    $20    ; 23
     C20B   20          11333   	.byte    $20    ; 24
     C20C   20          11334   	.byte    $20    ; 25
     C20D   20          11335   	.byte    $20    ; 26
     C20E   20          11336   	.byte    $20    ; 27
     C20F   20          11337   	.byte    $20    ; 28
     C210   20          11338           .byte    $20    ; 29
     C211   20          11339   	.byte    $20    ; 2a
     C212   20          11340   	.byte    $20    ; 2b
     C213   20          11341   	.byte    $20    ; 2c
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 156-1
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

     C214   20          11342   	.byte    $20    ; 2d
     C215   20          11343   	.byte    $20    ; 2e
     C216   20          11344   	.byte    $20    ; 2f
     C217   20          11345   	.byte    $20    ; 30
     C218   20          11346   	.byte    $20    ; 31
     C219   20          11347   	.byte    $20    ; 32
     C21A   20          11348   	.byte    $20    ; 33
     C21B   20          11349   	.byte    $20    ; 34
     C21C   20          11350   	.byte    $20    ; 35
     C21D   20          11351   	.byte    $20    ; 36
     C21E   20          11352   	.byte    $20    ; 37
     C21F   20          11353   	.byte    $20    ; 38
     C220   20          11354   	.byte    $20    ; 39
     C221   20          11355   	.byte    $20    ; 3a
     C222   20          11356   	.byte    $20    ; 3b
     C223   20          11357   	.byte    $20    ; 3c
     C224   20          11358   	.byte    $20    ; 3d
     C225   20          11359   	.byte    $20    ; 3e
     C226   20          11360   	.byte    $20    ; 3f
     C227   20          11361   	.byte    $20    ; 40
     C228   20          11362   	.byte    $20    ; 41
     C229   20          11363   	.byte    $20    ; 42
     C22A   20          11364   	.byte    $20    ; 43
     C22B   20          11365   	.byte    $20    ; 44
     C22C   20          11366   	.byte    $20    ; 45
     C22D   20          11367   	.byte    $20    ; 46
     C22E   20          11368   	.byte    $20    ; 47
     C22F   20          11369   	.byte    $20    ; 48
     C230   20          11370   	.byte    $20    ; 49
     C231   20          11371   	.byte    $20    ; 4a
     C232   20          11372   	.byte    $20    ; 4b
     C233   20          11373   	.byte    $20    ; 4c
     C234   20          11374   	.byte    $20    ; 4d
     C235   20          11375   	.byte    $20    ; 4e
     C236   20          11376   	.byte    $20    ; 4f
     C237   20          11377   	.byte    $20    ; 50
     C238   20          11378   	.byte    $20    ; 51
     C239   20          11379   	.byte    $20    ; 52
     C23A   20          11380   	.byte    $20    ; 53
     C23B   20          11381   	.byte    $20    ; 54
     C23C   20          11382   	.byte    $20    ; 55
     C23D   20          11383   	.byte    $20    ; 56
     C23E   20          11384   	.byte    $20    ; 57
     C23F   20          11385   	.byte    $20    ; 58
     C240   20          11386   	.byte    $20    ; 59
     C241   20          11387   	.byte    $20    ; 5a
     C242   20          11388   	.byte    $20    ; 5b
     C243   20          11389   	.byte    $20    ; 5c
     C244   20          11390   	.byte    $20    ; 5d
     C245   20          11391   	.byte    $20    ; 5e
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 156-2
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

     C246   20          11392   	.byte    $20    ; 5f
     C247   20          11393   	.byte    $20    ; 60
     C248   20          11394   	.byte    $20    ; 61
     C249   20          11395   	.byte    $20    ; 62
     C24A   20          11396   	.byte    $20    ; 63
     C24B   20          11397   	.byte    $20    ; 64
     C24C   20          11398   	.byte    $20    ; 65
     C24D   20          11399   	.byte    $20    ; 66
     C24E   20          11400   	.byte    $20    ; 67
     C24F   20          11401   	.byte    $20    ; 68
     C250   20          11402   	.byte    $20    ; 69
     C251   20          11403   	.byte    $20    ; 6a
     C252   20          11404   	.byte    $20    ; 6b
     C253   20          11405   	.byte    $20    ; 6c
     C254   20          11406   	.byte    $20    ; 6d
     C255   20          11407   	.byte    $20    ; 6e
     C256   20          11408   	.byte    $20    ; 6f
     C257   20          11409   	.byte    $20    ; 70
     C258   20          11410   	.byte    $20    ; 71
     C259   20          11411   	.byte    $20    ; 72
     C25A   20          11412   	.byte    $20    ; 73
     C25B   20          11413   	.byte    $20    ; 74
     C25C   20          11414   	.byte    $20    ; 75
     C25D   20          11415   	.byte    $20    ; 76
     C25E   20          11416   	.byte    $20    ; 77
     C25F   20          11417   	.byte    $20    ; 78
     C260   20          11418   	.byte    $20    ; 79
     C261   20          11419   	.byte    $20    ; 7a
     C262   20          11420   	.byte    $20    ; 7b
     C263   20          11421   	.byte    $20    ; 7c
     C264   20          11422   	.byte    $20    ; 7d
     C265   20          11423   	.byte    $20    ; 7e
     C266   20          11424   	.byte    $20    ; 7f
     C267   00          11425   	.byte    $00    ; 80  read*
     C268   20          11426   	.byte    $20    ; 81
     C269   01          11427   	.byte    $01    ; 82  reset
     C26A   20          11428   	.byte    $20    ; 83
     C26B   02          11429   	.byte    $02    ; 84  moton
     C26C   20          11430   	.byte    $20    ; 85
     C26D   03          11431   	.byte    $03    ; 86  motoff
     C26E   20          11432   	.byte    $20    ; 87
     C26F   04          11433   	.byte    $04    ; 88  motoni
     C270   20          11434   	.byte    $20    ; 89
     C271   05          11435   	.byte    $05    ; 8a  motoffi
     C272   20          11436   	.byte    $20    ; 8b
     C273   06          11437   	.byte    $06    ; 8c  seek
     C274   20          11438   	.byte    $20    ; 8d
     C275   07          11439   	.byte    $07    ; 8e  format side
     C276   20          11440   	.byte    $20    ; 8f
     C277   08          11441   	.byte    $08    ; 90  write*
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 156-3
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

     C278   20          11442   	.byte    $20    ; 91
     C279   09          11443   	.byte    $09    ; 92  diskin
     C27A   20          11444   	.byte    $20    ; 93
     C27B   0A          11445   	.byte    $0a    ; 94  ledacton
     C27C   20          11446   	.byte    $20    ; 95
     C27D   0B          11447   	.byte    $0b    ; 96  ledactoff
     C27E   20          11448   	.byte    $20    ; 97
     C27F   0C          11449   	.byte    $0c    ; 98  errledon
     C280   20          11450   	.byte    $20    ; 99
     C281   0D          11451   	.byte    $0d    ; 9a  errledoff
     C282   20          11452   	.byte    $20    ; 9b
     C283   0E          11453   	.byte    $0e    ; 9c  sidesel
     C284   20          11454   	.byte    $20    ; 9d
     C285   0F          11455   	.byte    $0f    ; 9e  bufmove
     C286   20          11456   	.byte    $20    ; 9f
     C287   10          11457   	.byte    $10    ; a0  verify*
     C288   20          11458   	.byte    $20    ; a1
     C289   11          11459   	.byte    $11    ; a2  trkwrt
     C28A   20          11460   	.byte    $20    ; a3
     C28B   12          11461   	.byte    $12    ; a4  spread
     C28C   20          11462   	.byte    $20    ; a5
     C28D   13          11463   	.byte    $13    ; a6  spwrt
     C28E   20          11464   	.byte    $20    ; a7
     C28F   14          11465   	.byte    $14    ; a8  pseek
     C290   20          11466   	.byte    $20    ; a9
     C291   1B          11467   	.byte    $1b    ; aa  read notrx
     C292   20          11468   	.byte    $20    ; ab
     C293   1C          11469   	.byte    $1c    ; ac  write notrx
     C294   20          11470   	.byte    $20    ; ad
     C295   20          11471   	.byte    $20    ; ae
     C296   20          11472   	.byte    $20    ; af
     C297   15          11473   	.byte    $15	; b0  seek*
     C298   20          11474   	.byte    $20    ; b1
     C299   1D          11475   	.byte    $1d    ; b2  read notransl, notrx
     C29A   20          11476   	.byte    $20    ; b3
     C29B   1E          11477   	.byte    $1e    ; b4  write notransl, notrx
     C29C   20          11478   	.byte    $20    ; b5
     C29D   1F          11479   	.byte    $1f    ; b6  check write protect status
     C29E   20          11480   	.byte    $20    ; b7
     C29F   16          11481   	.byte    $16	; b8  seekparticular*
     C2A0   20          11482   	.byte    $20    ; b9
     C2A1   20          11483   	.byte    $20    ; ba
     C2A2   20          11484   	.byte    $20    ; bb
     C2A3   20          11485   	.byte    $20    ; bc
     C2A4   20          11486   	.byte    $20    ; bd
     C2A5   20          11487   	.byte    $20    ; be
     C2A6   20          11488   	.byte    $20    ; bf
     C2A7   17          11489   	.byte    $17    ; c0  bump*
     C2A8   20          11490   	.byte    $20    ; c1
     C2A9   20          11491   	.byte    $20    ; c2
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 156-4
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

     C2AA   20          11492   	.byte    $20    ; c3
     C2AB   20          11493   	.byte    $20    ; c4
     C2AC   20          11494   	.byte    $20    ; c5
     C2AD   20          11495   	.byte    $20    ; c6
     C2AE   20          11496   	.byte    $20    ; c7
     C2AF   20          11497   	.byte    $20    ; c8
     C2B0   20          11498   	.byte    $20    ; c9
     C2B1   20          11499   	.byte    $20    ; ca
     C2B2   20          11500   	.byte    $20    ; cb
     C2B3   20          11501   	.byte    $20    ; cc
     C2B4   20          11502   	.byte    $20    ; cd
     C2B5   20          11503   	.byte    $20    ; ce
     C2B6   20          11504   	.byte    $20    ; cf
     C2B7   18          11505   	.byte    $18	; d0  jumpc*
     C2B8   20          11506   	.byte    $20    ; d1
     C2B9   20          11507   	.byte    $20    ; d2
     C2BA   20          11508   	.byte    $20    ; d3
     C2BB   20          11509   	.byte    $20    ; d4
     C2BC   20          11510   	.byte    $20    ; d5
     C2BD   20          11511   	.byte    $20    ; d6
     C2BE   20          11512   	.byte    $20    ; d7
     C2BF   20          11513   	.byte    $20    ; d8
     C2C0   20          11514   	.byte    $20    ; d9
     C2C1   20          11515   	.byte    $20    ; da
     C2C2   20          11516   	.byte    $20    ; db
     C2C3   20          11517   	.byte    $20    ; dc
     C2C4   20          11518   	.byte    $20    ; dd
     C2C5   20          11519   	.byte    $20    ; de
     C2C6   20          11520   	.byte    $20    ; df
     C2C7   19          11521   	.byte    $19	; e0  exbuf*
     C2C8   20          11522   	.byte    $20    ; e1
     C2C9   20          11523   	.byte    $20    ; e2
     C2CA   20          11524   	.byte    $20    ; e3
     C2CB   20          11525   	.byte    $20    ; e4
     C2CC   20          11526   	.byte    $20    ; e5
     C2CD   20          11527   	.byte    $20    ; e6
     C2CE   20          11528   	.byte    $20    ; e7
     C2CF   20          11529   	.byte    $20    ; e8
     C2D0   20          11530   	.byte    $20    ; e9
     C2D1   20          11531   	.byte    $20    ; ea
     C2D2   20          11532   	.byte    $20    ; eb
     C2D3   20          11533   	.byte    $20    ; ec
     C2D4   20          11534   	.byte    $20    ; ed
     C2D5   20          11535   	.byte    $20    ; ee
     C2D6   20          11536   	.byte    $20    ; ef
     C2D7   1A          11537   	.byte    $1a    ; f0  format
     C2D8   20          11538   	.byte    $20    ; f1
     C2D9   20          11539   	.byte    $20    ; f2
     C2DA   20          11540   	.byte    $20    ; f3
     C2DB   20          11541   	.byte    $20    ; f4
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 156-5
"mcntl"   MCNTL.SRC

Error Addr  Code          Seq   Source statement

     C2DC   20          11542   	.byte    $20    ; f5
     C2DD   20          11543   	.byte    $20    ; f6
     C2DE   20          11544   	.byte    $20    ; f7
     C2DF   20          11545   	.byte    $20    ; f8
     C2E0   20          11546   	.byte    $20    ; f9
     C2E1   20          11547   	.byte    $20    ; fa
     C2E2   20          11548   	.byte    $20    ; fb
     C2E3   20          11549   	.byte    $20    ; fc
     C2E4   20          11550   	.byte    $20    ; fd
     C2E5   20          11551    	.byte    $20    ; fe
     C2E6   20          11552   	.byte    $20    ; ff
                        11553   	.INCLUDE mrout
                        11554   	.messg "mrout"
                        11555   	.subttl "mrout"
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 157
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        11557   ;
                        11558   
     C2E7               11559   reset_ctl		; reset disk controller
                        11560   
     C2E7   A0 FF       11561   	ldy  #all
U    C2E9   20 0000 "   11562   	jsr  xms	; no access for 500 mS
     C2EC   A0 FF       11563   	ldy  #all
U    C2EE   20 0000 "   11564   	jsr  xms	; *
                        11565   
     C2F1   A9 80       11566   	lda  #bit7
     C2F3   85 95       11567   	sta  cachetrk	; *
     C2F5   A9 00       11568   	lda  #0
     C2F7   85 87       11569   	sta  dirty
     C2F9   20 B0CF     11570   	jsr  psetdef
     C2FC   20 B0B3     11571   	jsr  setdef
                        11572   
     C2FF   A9 4E       11573   	lda  #$4e
     C301   8D 01D7     11574   	sta  ctltimh
     C304   A9 20       11575   	lda  #$20
     C306   8D 01D8     11576   	sta  ctltiml	; IRQ's
U    C309   20 0000 "   11577   	jsr  resetim	; reset controller timers
     C30C   A9 08       11578   	lda  #$08	; setup wd177x commands
     C30E   8D 01DA     11579   	sta  wdrestore
     C311   A9 18       11580   	lda  #$18
     C313   8D 01DB     11581   	sta  wdseek
     C316   A9 28       11582   	lda  #$28
     C318   8D 01DC     11583   	sta  wdstep
     C31B   A9 48       11584   	lda  #$48
     C31D   8D 01DD     11585   	sta  wdstepin
     C320   A9 68       11586   	lda  #$68
     C322   8D 01DE     11587   	sta  wdstepout
     C325   A9 88       11588   	lda  #$88
     C327   8D 01DF     11589   	sta  wdreadsector
     C32A   A9 AA       11590   	lda  #$aa
     C32C   8D 01E0     11591   	sta  wdwritesector
     C32F   A9 C8       11592   	lda  #$c8
     C331   8D 01E1     11593   	sta  wdreadaddress
     C334   A9 E8       11594   	lda  #$e8
     C336   8D 01E2     11595   	sta  wdreadtrack
     C339   A9 FA       11596   	lda  #$fa
     C33B   8D 01E3     11597   	sta  wdwritetrack
     C33E   A9 D0       11598   	lda  #$d0
     C340   8D 01E4     11599   	sta  wdforceirq
                        11600   
     C343   A9 12       11601   	lda  #18
     C345   85 98       11602   	sta  setval	; 18 mS
     C347   A0 FF       11603   	ldy  #all	; test registers
     C349   8C 6001     11604   1$	sty  wdtrk
     C34C   8C 6002     11605   	sty  wdsec
     C34F   8C 6003     11606   	sty  wddat
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 157-1
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C352   20 AD34     11607   	jsr  delay16
     C355   CC 6001     11608   	cpy  wdtrk
     C358   D0 2E       11609   	bne  3$
                        11610   
     C35A   CC 6002     11611   	cpy  wdsec
     C35D   D0 29       11612   	bne  3$
                        11613   
     C35F   CC 6003     11614   	cpy  wddat
     C362   D0 24       11615   	bne  3$
                        11616   
     C364   88          11617   	dey
     C365   D0 E2       11618   	bne  1$
                        11619   
U    C367   20 0000 "   11620   	jsr  wdabort	; abort the wd17xx
     C36A   A9 00       11621   	lda  #0
     C36C   8D 4008     11622   	sta  todlsb
     C36F   20 AD2F     11623   	jsr  delay40	; wait for 40 uS
     C372   AD 4008     11624   	lda  todlsb
     C375   D0 0F       11625   	bne  2$		; default wd1770
                        11626   
     C377   EE 01DA     11627   	inc  wdrestore
     C37A   EE 01DB     11628   	inc  wdseek
     C37D   EE 01DC     11629   	inc  wdstep
     C380   EE 01DD     11630   	inc  wdstepin
     C383   EE 01DE     11631   	inc  wdstepout
                        11632   
     C386   D0 03       11633   2$	bne  okdone	; bra
                        11634   
     C388   A9 0D       11635   3$	lda  #$0d	; controller error
     C38A   2C          11636   	.byte skip2
     C38B   A9 00       11637   okdone	lda  #0		; ok
U    C38D   4C 0000 "   11638   done	jmp  errr
                        11639   
                        11640   ;
                        11641   
     C390               11642   moton_ctl		; motor on with spinup sequence
                        11643   
     C390   4C C399     11644   	jmp  okfin	; done
                        11645   
                        11646   ;
                        11647   
     C393               11648   motoff_ctl		; motor off with spin down sequence
                        11649   
     C393   4C C38B     11650   	jmp  okdone	; turn off the motor
                        11651   
                        11652   ;
                        11653   	
     C396               11654   motoni_ctl		; motor on
                        11655   
U    C396   20 0000 "   11656   	jsr  moton	; turn on the motor
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 157-2
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C399   A9 00       11657   okfin	lda  #0
     C39B   A4 83       11658   fin	ldy  nextjob
     C39D   99 0002     11659   	sta  jobs,y	; mimick errr w/o spindown
     C3A0   A9 80       11660   	lda  #bit7
     C3A2   85 83       11661   	sta  nextjob	; clear job flag
     C3A4   A0 08       11662   	ldy  #numjob
U    C3A6   4C 0000 "   11663   	jmp  erret
                        11664   
                        11665   ;
                        11666   	
     C3A9               11667   motoffi_ctl		; motor off
                        11668   
U    C3A9   20 0000 "   11669   	jsr  motoff	; turn it off
     C3AC   4C C399     11670   	jmp  okfin
                        11671   
                        11672   ;
                        11673   
     C3AF               11674   seek_ctl		; move physical
                        11675   
     C3AF   A5 88       11676   	lda  cmdtrk	; we on track yet?
     C3B1   C5 27       11677   	cmp  drvtrk
     C3B3   F0 03       11678   	beq  1$		; br, yep
                        11679   
U    C3B5   4C 0000 "   11680   	jmp  end_ctl
                        11681   
     C3B8   4C C38B     11682   1$	jmp  okdone
                        11683   
                        11684   ;
                        11685   
     C3BB               11686   format_ctl		; format side
                        11687   
U    C3BB   20 0000 "   11688   	jsr  cacheip	; setup indirects
     C3BE   20 C3D6     11689   	jsr  fmtrk
     C3C1   B0 0E       11690   	bcs  1$
                        11691   	
U    C3C3   20 0000 "   11692   	jsr  getwdstat	; get status
     C3C6   D0 0B       11693   	bne  2$
                        11694   
U    C3C8   20 0000 "   11695   	jsr  cacheip	; setup indirects
     C3CB   20 CA00     11696   	jsr  fmtver_ctl ; won't come back on verify error
                        11697   
     C3CE   A9 01       11698   	lda  #1		; ok
     C3D0   2C          11699   	.byte skip2
     C3D1   A9 06       11700   1$	lda  #6		; format error
U    C3D3   4C 0000 "   11701   2$	jmp  errr
                        11702   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C3D6               11704   fmtrk
     C3D6   A5 88       11705   	lda  cmdtrk	; track
     C3D8   8D 6001     11706   	sta  wdtrk
U    C3DB   20 0000 "   11707   	jsr  precmp	; set precomp
     C3DE   A5 94       11708   	lda  pstartsec	; starting sector
     C3E0   85 39       11709   	sta  tmp+1
     C3E2   A5 92       11710   	lda  pnumsec
     C3E4   85 3A       11711   	sta  tmp+2
                        11712   
     C3E6   AD 01E3     11713   	lda  wdwritetrack
U    C3E9   20 0000 "   11714   	jsr  wdbusy	; send it a 'write track' command
                        11715   
     C3EC   A2 20       11716   	ldx  #32
     C3EE               11717+  	WDTEST		; chk address
            =0002       11718A  	.ife <*!.$03
                        11719A  	nop
                        11720A  	.endif
     C3EE   AD 6000     11721   cmd7    lda  wdstat
     C3F1   29 03       11722   	and  #3
     C3F3   4A          11723   	lsr  a
     C3F4   90 26       11724   v6	bcc  v1
     C3F6   F0 F6       11725   	beq  cmd7
                        11726   
     C3F8   A9 4E       11727   	lda  #$4e
     C3FA   8D 6003     11728   	sta  wddat	; give him the $4E data
     C3FD   CA          11729   	dex
     C3FE   D0 EE       11730   	bne  cmd7
                        11731   
     C400   A2 0C       11732   main7	ldx  #12
     C402               11733+  	WDTEST		; chk address
            =0002       11734A  	.ife <*!.$03
                        11735A  	nop
                        11736A  	.endif
     C402   AD 6000     11737   cmd70   lda  wdstat
     C405   29 03       11738   	and  #3
     C407   4A          11739   	lsr  a
     C408   90 12       11740   	bcc  v1
     C40A   F0 F6       11741   	beq  cmd70
                        11742   
     C40C   A9 00       11743   	lda  #0
     C40E   8D 6003     11744   	sta  wddat
     C411   CA          11745   	dex
     C412   D0 EE       11746   	bne  cmd70
                        11747   
     C414   A2 03       11748   	ldx  #3
     C416               11749+  	WDTEST		; chk address
            =0002       11750A  	.ife <*!.$03
                        11751A  	nop
                        11752A  	.endif
     C416   AD 6000     11753   cmd71   lda  wdstat
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-1
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C419   29 03       11754   	and  #3
     C41B   4A          11755   	lsr  a
     C41C   90 51       11756   v1	bcc  v2
     C41E   F0 F6       11757   	beq  cmd71
                        11758   
     C420   A9 F5       11759   	lda  #$f5
     C422   8D 6003     11760   	sta  wddat
     C425   CA          11761   	dex
     C426   D0 EE       11762   	bne  cmd71
                        11763   
                        11764   
     C428               11765+  	WDTEST		; chk address
            =0000       11766A  	.ife <*!.$03
     C428   EA          11767A  	nop
                        11768A  	.endif
     C429   AD 6000     11769   cmd7n   lda  wdstat
     C42C   29 03       11770   	and  #3
     C42E   4A          11771   	lsr  a
     C42F   90 3E       11772   	bcc  v2
     C431   F0 F6       11773   	beq  cmd7n
                        11774   
     C433   A9 FE       11775   	lda  #$fe   	; id address mark
     C435   8D 6003     11776   	sta  wddat
                        11777   
                        11778   
     C438               11779+  	WDTEST		; chk address
            =0000       11780A  	.ife <*!.$03
     C438   EA          11781A  	nop
                        11782A  	.endif
     C439   AD 6000     11783   cmd7f   lda  wdstat
     C43C   29 03       11784   	and  #3
     C43E   4A          11785   	lsr  a
     C43F   90 2E       11786   	bcc  v2
     C441   F0 F6       11787   	beq  cmd7f
                        11788   
     C443   AD 6001     11789   	lda  wdtrk	; give him the track
     C446   8D 6003     11790   	sta  wddat
                        11791   
     C449               11792+  	WDTEST		; chk address
            =0001       11793A  	.ife <*!.$03
                        11794A  	nop
                        11795A  	.endif
     C449   AD 6000     11796   cmd7e   lda  wdstat
     C44C   29 03       11797   	and  #3
     C44E   4A          11798   	lsr  a
     C44F   90 1E       11799   	bcc  v2
     C451   F0 F6       11800   	beq  cmd7e
                        11801   
     C453   A5 96       11802   	lda  tcacheside
     C455   8D 6003     11803   	sta  wddat	; side number is ...
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-2
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        11804   	
     C458               11805+  	WDTEST		; chk address
            =0000       11806A  	.ife <*!.$03
     C458   EA          11807A  	nop
                        11808A  	.endif
     C459   AD 6000     11809   cmd7d   lda  wdstat
     C45C   29 03       11810   	and  #3
     C45E   4A          11811   	lsr  a
     C45F   90 0E       11812   	bcc  v2
     C461   F0 F6       11813   	beq  cmd7d
                        11814   	
     C463   A5 39       11815   	lda  tmp+1	; sector #
     C465   8D 6003     11816   	sta  wddat
                        11817   
     C468               11818+  	WDTEST		; chk address
            =0000       11819A  	.ife <*!.$03
     C468   EA          11820A  	nop
                        11821A  	.endif
     C469   AD 6000     11822   cmd7c   lda  wdstat
     C46C   29 03       11823   	and  #3
     C46E   4A          11824   	lsr  a
     C46F   90 33       11825   v2	bcc  v3
     C471   F0 F6       11826   	beq  cmd7c
                        11827   
     C473   A5 91       11828   	lda  psectorsiz	; sector size
     C475   8D 6003     11829   	sta  wddat
                        11830   	
     C478               11831+  	WDTEST		; chk address
            =0000       11832A  	.ife <*!.$03
     C478   EA          11833A  	nop
                        11834A  	.endif
     C479   AD 6000     11835   cmd7b   lda  wdstat
     C47C   29 03       11836   	and  #3
     C47E   4A          11837   	lsr  a
     C47F   90 23       11838   	bcc  v3
     C481   F0 F6       11839   	beq  cmd7b
                        11840   
     C483   A9 F7       11841   	lda  #$f7	; crc 2 bytes written
     C485   8D 6003     11842   	sta  wddat
                        11843   
     C488   A2 16       11844   	ldx  #22
     C48A               11845+  	WDTEST		; chk address
            =0002       11846A  	.ife <*!.$03
                        11847A  	nop
                        11848A  	.endif
     C48A   AD 6000     11849   cmd72   lda  wdstat
     C48D   29 03       11850   	and  #3
     C48F   4A          11851   	lsr  a
     C490   90 12       11852   	bcc  v3
     C492   F0 F6       11853   	beq  cmd72
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-3
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        11854   
     C494   A9 4E       11855   	lda  #$4e
     C496   8D 6003     11856   	sta  wddat
     C499   CA          11857   	dex
     C49A   D0 EE       11858   	bne  cmd72
                        11859   
     C49C   A2 0C       11860   	ldx  #12
     C49E               11861+  	WDTEST		; chk address
            =0002       11862A  	.ife <*!.$03
                        11863A  	nop
                        11864A  	.endif
     C49E   AD 6000     11865   cmd73   lda  wdstat
     C4A1   29 03       11866   	and  #3
     C4A3   4A          11867   	lsr  a
     C4A4   90 3B       11868   v3	bcc  v4
     C4A6   F0 F6       11869   	beq  cmd73
                        11870   
     C4A8   A9 00       11871   	lda  #0
     C4AA   8D 6003     11872   	sta  wddat
     C4AD   CA          11873   	dex
     C4AE   D0 EE       11874   	bne  cmd73
                        11875   
     C4B0   A2 03       11876   	ldx  #3		; Counter for 3 F5's.
     C4B2               11877+  	WDTEST		; chk address
            =0002       11878A  	.ife <*!.$03
                        11879A  	nop
                        11880A  	.endif
     C4B2   AD 6000     11881   cmd74   lda  wdstat
     C4B5   29 03       11882   	and  #3
     C4B7   4A          11883   	lsr  a
     C4B8   90 27       11884   	bcc  v4
     C4BA   F0 F6       11885   	beq  cmd74
                        11886   
     C4BC   A9 F5       11887   	lda  #$f5	; (Writes A1 data, 0A clock).
     C4BE   8D 6003     11888   	sta  wddat
     C4C1   CA          11889   	dex
     C4C2   D0 EE       11890   	bne  cmd74
                        11891   
     C4C4               11892+  	WDTEST		; chk address
            =0000       11893A  	.ife <*!.$03
     C4C4   EA          11894A  	nop
                        11895A  	.endif
     C4C5   AD 6000     11896   cmd7a   lda  wdstat
     C4C8   29 03       11897   	and  #3
     C4CA   4A          11898   	lsr  a
     C4CB   90 14       11899   	bcc  v4
     C4CD   F0 F6       11900   	beq  cmd7a
                        11901   
     C4CF   A9 FB       11902   	lda  #$fb	; (writes data address mark)
     C4D1   8D 6003     11903   	sta  wddat
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-4
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        11904   	
     C4D4   A4 91       11905   	ldy  psectorsiz
     C4D6   C0 03       11906   	cpy  #3
     C4D8   D0 01       11907   	bne  cmd750
                        11908   	
     C4DA   C8          11909   	iny
                        11910   	
     C4DB               11911+  	WDTEST		; chk address
            =0003       11912A  	.ife <*!.$03
                        11913A  	nop
                        11914A  	.endif
     C4DB   AD 6000     11915   cmd750  lda  wdstat
     C4DE   29 03       11916   	and  #3
     C4E0   4A          11917   	lsr  a
     C4E1   90 61       11918   v4	bcc  v5
     C4E3   F0 F6       11919   	beq  cmd750
                        11920   
     C4E5   A5 9B       11921   	lda  fillbyte	; fill byte
     C4E7   C9 F5       11922   	cmp  #$f5	; track cache fill ?
     C4E9   D0 08       11923   	bne  1$
                        11924   
     C4EB   84 82       11925   	sty  yreg
     C4ED   A0 00       11926   	ldy  #0
     C4EF   B1 4A       11927   	lda  (ip+4),y	; get data
     C4F1   A4 82       11928   	ldy  yreg       ; restore .y register
     C4F3   8D 6003     11929   1$	sta  wddat
     C4F6   E6 4A       11930   	inc  ip+4	; inc pointer
     C4F8   D0 E1       11931   	bne  cmd750
                        11932   
     C4FA   E6 4B       11933   	inc  ip+5	; inc high address
     C4FC   88          11934   	dey
     C4FD   D0 DC       11935   	bne  cmd750
                        11936   
                        11937   
     C4FF               11938+  	WDTEST		; chk address
            =0003       11939A  	.ife <*!.$03
                        11940A  	nop
                        11941A  	.endif
     C4FF   AD 6000     11942   cmd7ff  lda  wdstat
     C502   29 03       11943   	and  #3
     C504   4A          11944   	lsr  a
     C505   90 3D       11945   	bcc  v5
     C507   F0 F6       11946   	beq  cmd7ff
                        11947   
     C509   A9 F7       11948   	lda  #$f7	; crc
     C50B   8D 6003     11949   	sta  wddat
                        11950   	
     C50E   A6 9A       11951   	ldx  gap3
     C510               11952+  	WDTEST		; chk address
            =0000       11953A  	.ife <*!.$03
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-5
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C510   EA          11954A  	nop
                        11955A  	.endif
     C511   AD 6000     11956   cmd7fe  lda  wdstat
     C514   29 03       11957   	and  #3
     C516   4A          11958   	lsr  a
     C517   90 2B       11959   	bcc  v5
     C519   F0 F6       11960   	beq  cmd7fe
                        11961   
     C51B   A9 4E       11962   	lda  #$4e	; gap 3
     C51D   8D 6003     11963   	sta  wddat
     C520   CA          11964   	dex
     C521   D0 EE       11965   	bne  cmd7fe
                        11966   
     C523   C6 3A       11967   	dec  tmp+2	; number of sectors
     C525   F0 06       11968   	beq  finmfm
                        11969   
     C527   E6 39       11970   	inc  tmp+1
     C529   4C C400     11971   	jmp  main7
                        11972   
     C52C               11973+  	WDTEST		; chk address
            =0000       11974A  	.ife <*!.$03
     C52C   EA          11975A  	nop
                        11976A  	.endif
     C52D   AD 6000     11977   finmfm  lda  wdstat
     C530   29 03       11978   	and  #3
     C532   4A          11979   	lsr  a
     C533   90 0A       11980   	bcc  vfin
     C535   F0 F6       11981   	beq  finmfm
                        11982   
     C537   18          11983   	clc
     C538   A9 4E       11984   	lda  #$4e	; wait for wd to time out
     C53A   8D 6003     11985   	sta  wddat
     C53D   D0 EE       11986   	bne  finmfm	; bra
                        11987   
U    C53F   20 0000 "   11988   vfin    jsr  wdunbusy	; wait for sleepy time
     C542   18          11989   	clc		; good carry
     C543   24          11990           .byte $24
     C544   38          11991   v5     	sec
     C545   60          11992   	rts
                        11993   
                        11994   ;
                        11995   
     C546               11996   ledacton_ctl		; turn activity led on
                        11997   
     C546   A5 79       11998   	lda  ledprint
     C548   09 40       11999   	ora  #act_led
     C54A   85 79       12000   	sta  ledprint
     C54C   4C C399     12001   	jmp  okfin
                        12002   
                        12003   ;
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-6
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        12004   
     C54F               12005   ledactoff_ctl		; turn activity led off
                        12006   
     C54F   A5 79       12007   	lda  ledprint
     C551   29 BF       12008   	and  #all-act_led
     C553   85 79       12009   	sta  ledprint
     C555   4C C399     12010   	jmp  okfin
                        12011   
                        12012   ;
                        12013   
     C558               12014   errledon_ctl		; blink power led
                        12015   	
     C558   A5 79       12016   	lda  ledprint
     C55A   09 20       12017   	ora  #pwr_led
     C55C   85 79       12018   	sta  ledprint
     C55E   4C C399     12019   	jmp  okfin
                        12020   
                        12021   ;
                        12022   
     C561               12023   errledoff_ctl		; disable power led blink
                        12024   
     C561   A5 79       12025   	lda  ledprint
     C563   29 DF       12026   	and  #all-pwr_led
     C565   85 79       12027   	sta  ledprint
     C567   4C C399     12028   	jmp  okfin
                        12029   
                        12030   ;
                        12031   
                        12032   	
     C56A               12033   side_ctl		; select side
                        12034   
     C56A   A4 83       12035   	ldy  nextjob	; get index
     C56C   B9 01CE     12036   	lda  sids,y	; side in track position in header queue
     C56F   29 01       12037   	and  #bit0
     C571   85 97       12038   	sta  cacheside	; select side
     C573   D0 03       12039   	bne  1$
                        12040   
     C575   A9 00       12041   	lda  #0		; side one
     C577   2C          12042   	.byte skip2
     C578   A9 01       12043   1$	lda  #side_sel	; side zero
     C57A   85 36       12044   	sta  ctmp
     C57C   AD 4000     12045   	lda  pa
     C57F   29 FE       12046   	and  #all-side_sel
     C581   05 36       12047   	ora  ctmp
     C583   8D 4000     12048   	sta  pa
     C586   4C C399     12049   	jmp  okfin
                        12050   
                        12051   ;
                        12052   	
     C589               12053   bufmove_ctl		; buffer move
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-7
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        12054   
     C589   A4 99       12055   	ldy  hdrjob 	; get index
     C58B   B9 000C     12056   	lda  hdrs+1,y	; sector position denotes operation
                        12057   ;
                        12058   ; hdrs: position in track cache
                        12059   ;
                        12060   ; hdrs+1:
                        12061   ;
                        12062   ;  bits 7   6   5   4   3   2   1   0
                        12063   ;       d   m   t  [  # of 256 blks  ]
                        12064   ;
                        12065   ; d: direction (1=to track cache buffer)
                        12066   ; m: mark, set the dirty flag (d must be set)
                        12067   ; t: transfer data (1=transfer)
                        12068   ;
                        12069   ; hdrs2: cachetrk update
                        12070   ;
                        12071   ; sids: cacheside update
                        12072   ;
                        12073   ;
     C58E   85 39       12074   	sta  tmp+1	; save command info
     C590   24 39       12075   	bit  tmp+1
     C592   10 12       12076   	bpl  1$		; br, from cache
                        12077   
     C594   B9 01BC     12078   	lda  hdrs2,y
     C597   85 95       12079   	sta  cachetrk	; this track
     C599   A4 83       12080   	ldy  nextjob
     C59B   B9 01CE     12081   	lda  sids,y
     C59E   85 97       12082   	sta  cacheside	; & this side
U    C5A0   20 0000 "   12083   	jsr  bufcache	; transfer to cache
     C5A3   4C C38B     12084   	jmp  okdone
                        12085   
U    C5A6   20 0000 "   12086   1$	jsr  cachebuf	; transfer from cache
     C5A9   4C C38B     12087   	jmp  okdone
                        12088   
                        12089   ;
                        12090   
     C5AC               12091   trkwrt_ctl		; track cache dump
                        12092   
     C5AC   4C C38B     12093   	jmp  okdone	; done by (mfmctl)
                        12094   
                        12095   
                        12096   ;
                        12097   
            =C600       12098   *=*+256-<*
                        12099   
     C600               12100   wrtold_ctl		; old track cache dump
                        12101   
U    C600   20 0000 "   12102   	jsr  seek	; seek any header, on error don't come back
     C603   A5 95       12103   	lda  cachetrk	; this is what is in memory
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-8
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C605   C5 1F       12104   	cmp  header
     C607   F0 03       12105   	beq  1$
                        12106   	
     C609   4C CB88     12107   	jmp  wrongtrk
                        12108   	
     C60C   8D 6001     12109   1$	sta  wdtrk
U    C60F   20 0000 "   12110   	jsr  precmp	; set precomp
U    C612   20 0000 "   12111   	jsr  cacheip	; setup ip
     C615   A5 92       12112   	lda  pnumsec	; number of sectors on a side
     C617   85 3A       12113   	sta  tmp+2
                        12114   
     C619   A5 21       12115   	lda  header+2	; get sector number
     C61B   AA          12116   	tax		; save in .x
     C61C   C5 93       12117   	cmp  pendsec	; pending sector
     C61E   08          12118   	php
     C61F   D0 06       12119   	bne  3$
                        12120   
     C621   A5 94       12121   	lda  pstartsec	; get starting sector
     C623   AA          12122   	tax 		; save in .x
     C624   38          12123   	sec
     C625   E9 01       12124   	sbc  #1		; one less
     C627   38          12125   3$	sec
     C628   E5 94       12126   	sbc  pstartsec	; track cache index=last sector - start sector
     C62A   18          12127   	clc
     C62B   69 01       12128   	adc  #1
                        12129   
     C62D   A4 91       12130   	ldy  psectorsiz
     C62F   88          12131   4$	dey		; for sectors > 256
     C630   F0 03       12132   	beq  5$
                        12133   
     C632   0A          12134   	asl  a		; x2
     C633   90 FA       12135   	bcc  4$		; more ?
                        12136   
     C635   20 CB8D     12137   5$	jsr  chkcache	; check cache address
     C638   8A          12138   	txa		; retrieve sector
     C639   28          12139   	plp
     C63A   F0 05       12140   	beq  6$		; if it was the last sector then start at the beginning
                        12141   
     C63C   18          12142   	clc
     C63D   69 01       12143   	adc  #1		; one more
     C63F   D0 02       12144   	bne  7$		; bra
                        12145   
     C641   A5 94       12146   6$	lda  pstartsec	; get starting sector
     C643   8D 6002     12147   7$	sta  wdsec
     C646   EA          12148   	nop
     C647   EA          12149   	nop
     C648   EA          12150   	nop
     C649   EA          12151   	nop
     C64A   EA          12152   	nop
     C64B   EA          12153   	nop
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-9
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C64C   EA          12154   	nop
     C64D   EA          12155   	nop
     C64E   EA          12156   	nop
     C64F   EA          12157   	nop
     C650   EA          12158   	nop
     C651   EA          12159   	nop
     C652   EA          12160   	nop
     C653   EA          12161   	nop
     C654   EA          12162   	nop
     C655   EA          12163   	nop
     C656   EA          12164   	nop
     C657   EA          12165   	nop
     C658   EA          12166   	nop
     C659   EA          12167   	nop
     C65A   AD 01E0     12168   8$	lda  wdwritesector
U    C65D   20 0000 "   12169   	jsr  wdbusy
                        12170   	
     C660   A4 91       12171   	ldy  psectorsiz	; get sector size
     C662   C0 03       12172   	cpy  #3
     C664   D0 01       12173   	bne  9$
                        12174   	
     C666   C8          12175   	iny
     C667               12176+  	WDTEST
            =0003       12177A  	.ife <*!.$03
                        12178A  	nop
                        12179A  	.endif
     C667   AD 6000     12180   9$	lda  wdstat
     C66A   29 03       12181   	and  #3
     C66C   4A          12182   	lsr  a
     C66D   90 5D       12183   	bcc  10$
                        12184   
     C66F   F0 F6       12185   	beq  9$
                        12186   
     C671   84 82       12187   	sty  yreg       ; save .y register
     C673   A0 00       12188   	ldy  #0
     C675   B1 4A       12189   	lda  (ip+4),y	; get data
     C677   8D 6003     12190   	sta  wddat	; put it
     C67A   A4 82       12191   	ldy  yreg       ; restore .y register
                        12192   
     C67C   E6 4A       12193   	inc  ip+4
     C67E   D0 E7       12194   	bne  9$
                        12195   
     C680   E6 4B       12196   	inc  ip+5
                        12197   
     C682   88          12198   	dey
     C683   D0 E2       12199    	bne  9$
                        12200   	
U    C685   20 0000 "   12201   	jsr  getwdstat
     C688   D0 42       12202   	bne  10$	; error
                        12203   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-10
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C68A   C6 3A       12204   	dec  tmp+2	; done ?
     C68C   F0 3E       12205   	beq  10$
                        12206   
     C68E   AD 6002     12207   	lda  wdsec	; put in .a
     C691   EE 6002     12208   	inc  wdsec	; next
     C694   EA          12209   	nop
     C695   EA          12210   	nop
     C696   EA          12211   	nop
     C697   EA          12212   	nop
     C698   EA          12213   	nop
     C699   EA          12214   	nop
     C69A   EA          12215   	nop
     C69B   EA          12216   	nop
     C69C   EA          12217   	nop
     C69D   EA          12218   	nop
     C69E   EA          12219   	nop
     C69F   EA          12220   	nop
     C6A0   EA          12221   	nop
     C6A1   EA          12222   	nop
     C6A2   EA          12223   	nop
     C6A3   EA          12224   	nop
     C6A4   EA          12225   	nop
     C6A5   EA          12226   	nop
     C6A6   EA          12227   	nop
     C6A7   EA          12228   	nop
     C6A8   C5 93       12229   	cmp  pendsec	; last sector?
     C6AA   D0 AE       12230   	bne  8$
                        12231   
     C6AC   A5 8C       12232   	lda  cache+1
     C6AE   85 4B       12233   	sta  ip+5	; start at beginning of the track cache buffer
     C6B0   A5 94       12234   	lda  pstartsec	; & first sector
     C6B2   8D 6002     12235   	sta  wdsec
     C6B5   EA          12236   	nop
     C6B6   EA          12237   	nop
     C6B7   EA          12238   	nop
     C6B8   EA          12239   	nop
     C6B9   EA          12240   	nop
     C6BA   EA          12241   	nop
     C6BB   EA          12242   	nop
     C6BC   EA          12243   	nop
     C6BD   EA          12244   	nop
     C6BE   EA          12245   	nop
     C6BF   EA          12246   	nop
     C6C0   EA          12247   	nop
     C6C1   EA          12248   	nop
     C6C2   EA          12249   	nop
     C6C3   EA          12250   	nop
     C6C4   EA          12251   	nop
     C6C5   EA          12252   	nop
     C6C6   EA          12253   	nop
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-11
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C6C7   EA          12254   	nop
     C6C8   EA          12255   	nop
     C6C9   4C C65A     12256   	jmp  8$
                        12257   	
U    C6CC   20 0000 "   12258   10$	jsr  getwdstat  ; get status
     C6CF   F0 03       12259   	beq  11$	; ok?
                        12260   
U    C6D1   4C 0000 "   12261   	jmp  errr	; nope
                        12262   
     C6D4   4C C9E1     12263   11$	jmp  wrtver_ctl ; verify job
                        12264   
                        12265   ;
                        12266   
     C6D7               12267   diskin_ctl		; disk present?
                        12268   
                        12269   ;
                        12270   
     C6D7               12271   pseek_ctl		; move head to logical track
                        12272   
U    C6D7   20 0000 "   12273   	jsr  seek	; seek ok...
     C6DA   4C C38B     12274   	jmp  okdone
                        12275   
                        12276   ;
            =C700       12277   *=*+256-<*
                        12278   
     C700               12279   spwrt_ctl		; write physical address
                        12280   
U    C700   20 0000 "   12281   	jsr  seek	; seek any header, on error abort
     C703   A5 88       12282   	lda  cmdtrk	; get address
     C705   C5 1F       12283   	cmp  header
     C707   F0 03       12284   	beq  1$
                        12285   
     C709   4C CB88     12286   	jmp  wrongtrk
                        12287   
     C70C   A6 83       12288   1$	ldx  nextjob	; get job number
     C70E   B5 0B       12289   	lda  hdrs,x	; get track
     C710   8D 6001     12290   	sta  wdtrk
     C713   B5 0C       12291   	lda  hdrs+1,x
     C715   8D 6002     12292   	sta  wdsec	; and sector
     C718   A9 00       12293   	lda  #0
     C71A   85 4A       12294   	sta  ip+4	; zero low
     C71C   A9 03       12295   	lda  #>buff0
     C71E   85 4B       12296   	sta  ip+5	; point to buffer 0
     C720   EA          12297   	nop
     C721   EA          12298   	nop
     C722   EA          12299   	nop
     C723   EA          12300   	nop
     C724   EA          12301   	nop
     C725   EA          12302   	nop
     C726   EA          12303   	nop
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-12
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C727   EA          12304   	nop
     C728   EA          12305   	nop
     C729   EA          12306   	nop
     C72A   EA          12307   	nop
     C72B   EA          12308   	nop
     C72C   EA          12309   	nop
     C72D   EA          12310   	nop
     C72E   EA          12311   	nop
     C72F   EA          12312   	nop
     C730   EA          12313   	nop
     C731   EA          12314   	nop
     C732   EA          12315   	nop
     C733   AD 01E0     12316   	lda  wdwritesector
U    C736   20 0000 "   12317   	jsr  wdbusy
                        12318   	
     C739   A4 91       12319   	ldy  psectorsiz	; get sector size
     C73B   C0 03       12320   	cpy  #3
     C73D   D0 02       12321   	bne  2$
                        12322   	
     C73F   C8          12323   	iny
     C740               12324+  	WDTEST
            =0000       12325A  	.ife <*!.$03
     C740   EA          12326A  	nop
                        12327A  	.endif
     C741   AD 6000     12328   2$	lda  wdstat
     C744   29 03       12329   	and  #3
     C746   4A          12330   	lsr  a
     C747   90 16       12331   	bcc  3$
                        12332   
     C749   F0 F6       12333   	beq  2$
                        12334   
     C74B   84 82       12335   	sty  yreg       ; save .y register
     C74D   A0 00       12336   	ldy  #0
     C74F   B1 4A       12337   	lda  (ip+4),y	; get data
     C751   8D 6003     12338   	sta  wddat	; put it
     C754   A4 82       12339   	ldy  yreg       ; restore .y register
                        12340   
     C756   E6 4A       12341   	inc  ip+4
     C758   D0 E7       12342   	bne  2$
                        12343   
     C75A   E6 4B       12344   	inc  ip+5
                        12345   
     C75C   88          12346   	dey
     C75D   D0 E2       12347    	bne  2$
                        12348   	
U    C75F   20 0000 "   12349   3$	jsr  getwdstat	; get status
U    C762   4C 0000 "   12350   	jmp  errr
                        12351   
                        12352   ;
                        12353   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-13
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

            =C800       12354   *=*+256-<*
                        12355   
     C800               12356   spread_ctl		; read physical address
                        12357   
U    C800   20 0000 "   12358   	jsr  seek	; seek any header, on error abort
     C803   A5 88       12359   	lda  cmdtrk	; get address
     C805   C5 1F       12360   	cmp  header
     C807   F0 03       12361   	beq  1$
                        12362   
     C809   4C CB88     12363   	jmp  wrongtrk
                        12364   
     C80C   A6 83       12365   1$	ldx  nextjob	; get job number
     C80E   B5 0B       12366   	lda  hdrs,x	; get track
     C810   8D 6001     12367   	sta  wdtrk
     C813   B5 0C       12368   	lda  hdrs+1,x
     C815   8D 6002     12369   	sta  wdsec	; and sector
     C818   A9 00       12370   	lda  #0
     C81A   85 4A       12371   	sta  ip+4	; zero low
     C81C   A9 03       12372   	lda  #>buff0
     C81E   85 4B       12373   	sta  ip+5	; point to buffer 0
     C820   EA          12374   	nop
     C821   EA          12375   	nop
     C822   EA          12376   	nop
     C823   EA          12377   	nop
     C824   EA          12378   	nop
     C825   EA          12379   	nop
     C826   EA          12380   	nop
     C827   EA          12381   	nop
     C828   EA          12382   	nop
     C829   EA          12383   	nop
     C82A   EA          12384   	nop
     C82B   EA          12385   	nop
     C82C   EA          12386   	nop
     C82D   EA          12387   	nop
     C82E   EA          12388   	nop
     C82F   EA          12389   	nop
     C830   EA          12390   	nop
     C831   EA          12391   	nop
     C832   EA          12392   	nop
     C833   AD 01DF     12393   	lda  wdreadsector
U    C836   20 0000 "   12394   	jsr  wdbusy
                        12395   	
     C839   A4 91       12396   	ldy  psectorsiz	; get sector size
     C83B   C0 03       12397   	cpy  #3
     C83D   D0 02       12398   	bne  2$
                        12399   	
     C83F   C8          12400   	iny
     C840               12401+  	WDTEST
            =0000       12402A  	.ife <*!.$03
     C840   EA          12403A  	nop
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-14
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        12404A  	.endif
     C841   AD 6000     12405   2$	lda  wdstat
     C844   29 03       12406   	and  #3
     C846   4A          12407   	lsr  a
     C847   90 16       12408   	bcc  3$
                        12409   
     C849   F0 F6       12410   	beq  2$
                        12411   
     C84B   84 82       12412   	sty  yreg       ; save .y register
     C84D   A0 00       12413   	ldy  #0
     C84F   AD 6003     12414   	lda  wddat	; get it
     C852   91 4A       12415   	sta  (ip+4),y	; put data
     C854   A4 82       12416   	ldy  yreg       ; restore .y register
                        12417   
     C856   E6 4A       12418   	inc  ip+4
     C858   D0 E7       12419   	bne  2$
                        12420   
     C85A   E6 4B       12421   	inc  ip+5
                        12422   
     C85C   88          12423   	dey
     C85D   D0 E2       12424    	bne  2$
                        12425   	
U    C85F   20 0000 "   12426   3$	jsr  getwdstat	; get status
U    C862   4C 0000 "   12427   	jmp  errr
                        12428   
                        12429   ;
                        12430   
            =C900       12431   *=*+256-<*
                        12432   
     C900               12433   pread_ctl
     C900               12434   pwrt_ctl
                        12435   
     C900               12436   wrtsd_ctl		; write to track cache buffer
     C900               12437   read_ctl		; read from track cache buffer
                        12438   
U    C900   20 0000 "   12439   	jsr  seek	; seek any header, on error abort
     C903   A5 88       12440   	lda  cmdtrk	; get address
     C905   C5 1F       12441   	cmp  header
     C907   F0 03       12442   	beq  1$
                        12443   
     C909   4C CB88     12444   	jmp  wrongtrk
                        12445   
     C90C   8D 6001     12446   1$	sta  wdtrk
U    C90F   20 0000 "   12447   	jsr  cacheip	; setup ip
     C912   A5 96       12448   	lda  tcacheside	; get translated cache side
     C914   85 39       12449   	sta  tmp+1	; in current
                        12450   
     C916   A5 92       12451   	lda  pnumsec	; number of sectors on a side
     C918   85 3A       12452   	sta  tmp+2
                        12453   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-15
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C91A   A5 21       12454   	lda  header+2	; get sector number
     C91C   AA          12455   	tax		; save in .x
     C91D   C5 93       12456   	cmp  pendsec	; pending sector
     C91F   08          12457   	php
     C920   D0 06       12458   	bne  3$
                        12459   
     C922   A5 94       12460   	lda  pstartsec	; get starting sector
     C924   AA          12461   	tax 		; save in .x
     C925   38          12462   	sec
     C926   E9 01       12463   	sbc  #1		; one less
     C928   38          12464   3$	sec
     C929   E5 94       12465   	sbc  pstartsec	; track cache index=last sector - start sector
     C92B   18          12466   	clc
     C92C   69 01       12467   	adc  #1
                        12468   
     C92E   A4 91       12469   	ldy  psectorsiz
     C930   88          12470   4$	dey		; for sectors > 256
     C931   F0 03       12471   	beq  5$
                        12472   
     C933   0A          12473   	asl  a		; x2
     C934   90 FA       12474   	bcc  4$		; more ?
                        12475   
     C936   20 CB8D     12476   5$	jsr  chkcache	; check cache for valid address
     C939   8A          12477   	txa		; retrieve sector
     C93A   28          12478   	plp
     C93B   F0 05       12479   	beq  6$		; if it was the last sector then start at the beginning
                        12480   
     C93D   18          12481   	clc
     C93E   69 01       12482   	adc  #1		; one more
     C940   D0 02       12483   	bne  7$		; bra
                        12484   
     C942   A5 94       12485   6$	lda  pstartsec	; get starting sector
     C944   8D 6002     12486   7$	sta  wdsec
     C947   EA          12487   	nop
     C948   EA          12488   	nop
     C949   EA          12489   	nop
     C94A   EA          12490   	nop
     C94B   EA          12491   	nop
     C94C   EA          12492   	nop
     C94D   EA          12493   	nop
     C94E   EA          12494   	nop
     C94F   EA          12495   	nop
     C950   EA          12496   	nop
     C951   EA          12497   	nop
     C952   EA          12498   	nop
     C953   EA          12499   	nop
     C954   EA          12500   	nop
     C955   EA          12501   	nop
     C956   EA          12502   	nop
     C957   EA          12503   	nop
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-16
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C958   EA          12504   	nop
     C959   EA          12505   	nop
     C95A   EA          12506   	nop
     C95B   AD 01DF     12507   8$	lda  wdreadsector
U    C95E   20 0000 "   12508   	jsr  wdbusy
                        12509   	
     C961   A4 91       12510   	ldy  psectorsiz	; get sector size
     C963   C0 03       12511   	cpy  #3
     C965   D0 02       12512   	bne  9$
                        12513   	
     C967   C8          12514   	iny
     C968               12515+  	WDTEST
            =0000       12516A  	.ife <*!.$03
     C968   EA          12517A  	nop
                        12518A  	.endif
     C969   AD 6000     12519   9$	lda  wdstat
     C96C   29 03       12520   	and  #3
     C96E   4A          12521   	lsr  a
     C96F   90 5D       12522   	bcc  10$
                        12523   
     C971   F0 F6       12524   	beq  9$
                        12525   
     C973   84 82       12526   	sty  yreg       ; save .y register
     C975   A0 00       12527   	ldy  #0
     C977   AD 6003     12528   	lda  wddat	; get it
     C97A   91 4A       12529   	sta  (ip+4),y	; put data
     C97C   A4 82       12530   	ldy  yreg       ; restore .y register
                        12531   
     C97E   E6 4A       12532   	inc  ip+4
     C980   D0 E7       12533   	bne  9$
                        12534   
     C982   E6 4B       12535   	inc  ip+5
                        12536   
     C984   88          12537   	dey
     C985   D0 E2       12538    	bne  9$
                        12539   	
U    C987   20 0000 "   12540   	jsr  getwdstat	; get status
     C98A   D0 42       12541   	bne  10$	; error
                        12542   
     C98C   C6 3A       12543   	dec  tmp+2	; done ?
     C98E   F0 3E       12544   	beq  10$
                        12545   
     C990   AD 6002     12546   	lda  wdsec	; put in .a
     C993   EE 6002     12547   	inc  wdsec	; next
     C996   EA          12548   	nop
     C997   EA          12549   	nop
     C998   EA          12550   	nop
     C999   EA          12551   	nop
     C99A   EA          12552   	nop
     C99B   EA          12553   	nop
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-17
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     C99C   EA          12554   	nop
     C99D   EA          12555   	nop
     C99E   EA          12556   	nop
     C99F   EA          12557   	nop
     C9A0   EA          12558   	nop
     C9A1   EA          12559   	nop
     C9A2   EA          12560   	nop
     C9A3   EA          12561   	nop
     C9A4   EA          12562   	nop
     C9A5   EA          12563   	nop
     C9A6   EA          12564   	nop
     C9A7   EA          12565   	nop
     C9A8   EA          12566   	nop
     C9A9   EA          12567   	nop
     C9AA   C5 93       12568   	cmp  pendsec	; last sector?
     C9AC   D0 AD       12569   	bne  8$
                        12570   
     C9AE   A5 8C       12571   	lda  cache+1
     C9B0   85 4B       12572   	sta  ip+5	; start at beginning of the track cache buffer
     C9B2   A5 94       12573   	lda  pstartsec	; & first sector
     C9B4   8D 6002     12574   	sta  wdsec
     C9B7   EA          12575   	nop
     C9B8   EA          12576   	nop
     C9B9   EA          12577   	nop
     C9BA   EA          12578   	nop
     C9BB   EA          12579   	nop
     C9BC   EA          12580   	nop
     C9BD   EA          12581   	nop
     C9BE   EA          12582   	nop
     C9BF   EA          12583   	nop
     C9C0   EA          12584   	nop
     C9C1   EA          12585   	nop
     C9C2   EA          12586   	nop
     C9C3   EA          12587   	nop
     C9C4   EA          12588   	nop
     C9C5   EA          12589   	nop
     C9C6   EA          12590   	nop
     C9C7   EA          12591   	nop
     C9C8   EA          12592   	nop
     C9C9   EA          12593   	nop
     C9CA   EA          12594   	nop
     C9CB   4C C95B     12595   	jmp  8$
                        12596   	
U    C9CE   20 0000 "   12597   10$	jsr  getwdstat	; get status
     C9D1   D0 0B       12598   	bne  11$	; bad
                        12599   
     C9D3   A5 96       12600   	lda  tcacheside
     C9D5   85 97       12601   	sta  cacheside	; new current
     C9D7   A5 88       12602   	lda  cmdtrk
     C9D9   85 95       12603   	sta  cachetrk	; track in memory
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-18
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

U    C9DB   4C 0000 "   12604   	jmp  back	; service original
                        12605   
U    C9DE   4C 0000 "   12606   11$	jmp  errr	; nope
                        12607   
                        12608   
                        12609   ;
                        12610   
                        12611   
     C9E1               12612   wrtver_ctl		; write track cache buffer to disk
                        12613   
     C9E1   24 8D       12614   	bit  iobyte
     C9E3   10 0B       12615   	bpl  2$		; verify on/off ?
                        12616   
U    C9E5   20 0000 "   12617   	jsr  one_6	; delay 1.6 mS
     C9E8   20 CA00     12618   	jsr  fmtver_ctl	; verify it
     C9EB   06 87       12619   1$	asl  dirty	; clear dirty flag
U    C9ED   4C 0000 "   12620   	jmp  back	; back to sender
                        12621   
U    C9F0   20 0000 "   12622   2$	jsr  one_6	; delay 1.6 mS
     C9F3   4C C9EB     12623   	jmp  1$
                        12624   
                        12625   ;
                        12626   
            =CA00       12627   *=*+256-<*
                        12628   
     CA00               12629   fmtver_ctl
                        12630   
U    CA00   20 0000 "   12631   	jsr  seek	; seek any header, on error abort
     CA03   A5 88       12632   	lda  cmdtrk	; get track address
     CA05   C5 1F       12633   	cmp  header
     CA07   F0 03       12634   	beq  1$
                        12635   
     CA09   4C CB88     12636   	jmp  wrongtrk
                        12637   
     CA0C   8D 6001     12638   1$	sta  wdtrk
U    CA0F   20 0000 "   12639   	jsr  cacheip	; setup ip
     CA12   A5 96       12640   	lda  tcacheside	; get translated cache side
     CA14   85 39       12641   	sta  tmp+1	; in current
                        12642   
     CA16   A5 92       12643   	lda  pnumsec	; number of sectors
     CA18   85 3A       12644   	sta  tmp+2
                        12645   
     CA1A   A5 21       12646   	lda  header+2	; get sector number
     CA1C   AA          12647   	tax		; save in .x
     CA1D   C5 93       12648   	cmp  pendsec	; pending sector
     CA1F   08          12649   	php
     CA20   D0 06       12650   	bne  3$
                        12651   
     CA22   A5 94       12652   	lda  pstartsec	; get starting sector
     CA24   AA          12653   	tax 		; save in .x
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-19
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     CA25   38          12654   	sec
     CA26   E9 01       12655   	sbc  #1		; one less
     CA28   38          12656   3$	sec
     CA29   E5 94       12657   	sbc  pstartsec	; track cache index=last sector - start sector
     CA2B   18          12658   	clc
     CA2C   69 01       12659   	adc  #1
                        12660   
     CA2E   A4 91       12661   	ldy  psectorsiz
     CA30   88          12662   4$	dey		; for sectors > 256
     CA31   F0 03       12663   	beq  5$
                        12664   
     CA33   0A          12665   	asl  a		; x2
     CA34   90 FA       12666   	bcc  4$		; more ?
                        12667   
     CA36   20 CB8D     12668   5$	jsr  chkcache	; check cache for valid address
     CA39   8A          12669   	txa		; retrieve sector
     CA3A   28          12670   	plp
     CA3B   F0 05       12671   	beq  6$		; if it was the last sector then start at the beginning
                        12672   
     CA3D   18          12673   	clc
     CA3E   69 01       12674   	adc  #1		; one more
     CA40   D0 02       12675   	bne  7$		; bra
                        12676   
     CA42   A5 94       12677   6$	lda  pstartsec	; get starting sector
     CA44   8D 6002     12678   7$	sta  wdsec
     CA47   EA          12679   	nop
     CA48   EA          12680   	nop
     CA49   EA          12681   	nop
     CA4A   EA          12682   	nop
     CA4B   EA          12683   	nop
     CA4C   EA          12684   	nop
     CA4D   EA          12685   	nop
     CA4E   EA          12686   	nop
     CA4F   EA          12687   	nop
     CA50   EA          12688   	nop
     CA51   EA          12689   	nop
     CA52   EA          12690   	nop
     CA53   EA          12691   	nop
     CA54   EA          12692   	nop
     CA55   EA          12693   	nop
     CA56   EA          12694   	nop
     CA57   EA          12695   	nop
     CA58   EA          12696   	nop
     CA59   EA          12697   	nop
     CA5A   EA          12698   	nop
     CA5B   AD 01DF     12699   8$	lda  wdreadsector
U    CA5E   20 0000 "   12700   	jsr  wdbusy
                        12701   	
     CA61   A4 91       12702   	ldy  psectorsiz	; get sector size
     CA63   C0 03       12703   	cpy  #3
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-20
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     CA65   D0 02       12704   	bne  9$
                        12705   	
     CA67   C8          12706   	iny
     CA68               12707+  	WDTEST
            =0000       12708A  	.ife <*!.$03
     CA68   EA          12709A  	nop
                        12710A  	.endif
     CA69   AD 6000     12711   9$	lda  wdstat
     CA6C   29 03       12712   	and  #3
     CA6E   4A          12713   	lsr  a
     CA6F   90 65       12714   	bcc  11$
                        12715   
     CA71   F0 F6       12716   	beq  9$
                        12717   
     CA73   A5 9B       12718   	lda  fillbyte
     CA75   C9 F5       12719   	cmp  #$f5
     CA77   D0 08       12720   	bne  10$
                        12721   
     CA79   84 82       12722   	sty  yreg       ; save .y register
     CA7B   A0 00       12723   	ldy  #0
     CA7D   B1 4A       12724   	lda  (ip+4),y	; get data
     CA7F   A4 82       12725   	ldy  yreg       ; restore .y register
     CA81   CD 6003     12726   10$	cmp  wddat
     CA84   D0 56       12727   	bne  13$
                        12728   
     CA86   E6 4A       12729   	inc  ip+4
     CA88   D0 DF       12730   	bne  9$
                        12731   
     CA8A   E6 4B       12732   	inc  ip+5
                        12733   
     CA8C   88          12734   	dey
     CA8D   D0 DA       12735    	bne  9$
                        12736   	
U    CA8F   20 0000 "   12737   	jsr  getwdstat	; get status
     CA92   D0 47       12738   	bne  12$	; error
                        12739   
     CA94   C6 3A       12740   	dec  tmp+2	; done ?
     CA96   F0 3E       12741   	beq  11$
                        12742   
     CA98   AD 6002     12743   	lda  wdsec	; put in .a
     CA9B   EE 6002     12744   	inc  wdsec	; next
     CA9E   EA          12745   	nop
     CA9F   EA          12746   	nop
     CAA0   EA          12747   	nop
     CAA1   EA          12748   	nop
     CAA2   EA          12749   	nop
     CAA3   EA          12750   	nop
     CAA4   EA          12751   	nop
     CAA5   EA          12752   	nop
     CAA6   EA          12753   	nop
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-21
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

     CAA7   EA          12754   	nop
     CAA8   EA          12755   	nop
     CAA9   EA          12756   	nop
     CAAA   EA          12757   	nop
     CAAB   EA          12758   	nop
     CAAC   EA          12759   	nop
     CAAD   EA          12760   	nop
     CAAE   EA          12761   	nop
     CAAF   EA          12762   	nop
     CAB0   EA          12763   	nop
     CAB1   EA          12764   	nop
     CAB2   C5 93       12765   	cmp  pendsec	; last sector?
     CAB4   D0 A5       12766   	bne  8$
                        12767   
     CAB6   A5 8C       12768   	lda  cache+1
     CAB8   85 4B       12769   	sta  ip+5	; start at beginning of the track cache buffer
     CABA   A5 94       12770   	lda  pstartsec	; & first sector
     CABC   8D 6002     12771   	sta  wdsec
     CABF   EA          12772   	nop
     CAC0   EA          12773   	nop
     CAC1   EA          12774   	nop
     CAC2   EA          12775   	nop
     CAC3   EA          12776   	nop
     CAC4   EA          12777   	nop
     CAC5   EA          12778   	nop
     CAC6   EA          12779   	nop
     CAC7   EA          12780   	nop
     CAC8   EA          12781   	nop
     CAC9   EA          12782   	nop
     CACA   EA          12783   	nop
     CACB   EA          12784   	nop
     CACC   EA          12785   	nop
     CACD   EA          12786   	nop
     CACE   EA          12787   	nop
     CACF   EA          12788   	nop
     CAD0   EA          12789   	nop
     CAD1   EA          12790   	nop
     CAD2   EA          12791   	nop
     CAD3   4C CA5B     12792   	jmp  8$
                        12793   	
U    CAD6   20 0000 "   12794   11$	jsr  getwdstat	; get status
     CAD9   D0 06       12795   	bne  14$	; bad
                        12796   
     CADB   60          12797   12$	rts
                        12798   
U    CADC   20 0000 "   12799   13$	jsr  wdabort	; abort the bugger
     CADF   A9 07       12800   	lda  #7
U    CAE1   4C 0000 "   12801   14$	jmp  errr	; nope
                        12802   
                        12803   ;
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-22
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        12804   
     CAE4               12805   seekphd_ctl		; seek a particular header
                        12806   
U    CAE4   20 0000 "   12807   	jsr  seek	; on an error, don't come back now hear!!!
                        12808   
     CAE7   A5 27       12809   	lda  drvtrk
     CAE9   C5 88       12810   	cmp  cmdtrk	; on track?
     CAEB   D0 19       12811   	bne  1$
                        12812   
     CAED   A0 3C       12813   	ldy  #60	; 60 headers
     CAEF   84 39       12814   	sty  tmp+1	; count
U    CAF1   20 0000 "   12815   2$	jsr  seek	; start looking
     CAF4   A4 99       12816   	ldy  hdrjob	; get index
     CAF6   B9 01BD     12817   	lda  hdrs2+1,y	; get sector address
     CAF9   C5 21       12818   	cmp  header+2	; we there yet?
     CAFB   F0 0C       12819   	beq  seekhd_ctl ; yep
                        12820   
     CAFD   C6 39       12821   	dec  tmp+1
     CAFF   D0 F0       12822   	bne  2$
                        12823   	
     CB01   A9 02       12824   	lda  #2
U    CB03   4C 0000 "   12825   	jmp  errr	; sector not found
                        12826   
U    CB06   4C 0000 "   12827   1$	jmp  end_ctl	; & better step there
                        12828   
                        12829   ;
                        12830   
     CB09               12831   seekhd_ctl		; seek any header
                        12832   
U    CB09   20 0000 "   12833   	jsr  seek	; on an error, don't come back now hear!!!
     CB0C   4C C38B     12834   	jmp  okdone
                        12835   
                        12836   ;
                        12837   
     CB0F               12838   restore_ctl		; restore head
                        12839   
     CB0F   AD 01DA     12840   	lda  wdrestore	; restore head to track zero
U    CB12   20 0000 "   12841   	jsr  wdbusy
U    CB15   20 0000 "   12842   	jsr  wdunbusy	; done?
     CB18   A5 8E       12843   	lda  pstartrk	; physical starting track
     CB1A   85 27       12844   	sta  drvtrk	; init
     CB1C   85 88       12845   	sta  cmdtrk	; *
     CB1E   A4 98       12846   	ldy  setval
U    CB20   20 0000 "   12847   	jsr  xms	; settle
     CB23   4C C38B     12848   	jmp  okdone	; done
                        12849   
                        12850   ;
                        12851   
     CB26               12852   exbuf_ctl		; execute buffer w/ motor upto speed & on track
                        12853   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-23
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        12854   ;
                        12855   
     CB26               12856   jumpc_ctl		; execute buffer
                        12857   
     CB26   A6 83       12858   	ldx  nextjob
     CB28   BD 01F1     12859   	lda  bufind,x
     CB2B   85 49       12860   	sta  ip+3
     CB2D   A0 00       12861   	ldy  #0
     CB2F   84 48       12862   	sty  ip+2
     CB31   8A          12863   	txa
     CB32   6C 0048     12864   	jmp  (ip+2)
                        12865   
                        12866   ;
                        12867   
     CB35               12868   formatdk_ctl		; format disk
                        12869   
     CB35   A9 00       12870   	lda  #0
     CB37   85 96       12871   	sta  tcacheside	; side zero
     CB39   A5 96       12872   1$	lda  tcacheside
U    CB3B   20 0000 "   12873   	jsr  sid_select	; setup side
U    CB3E   20 0000 "   12874   	jsr  cacheip	; setup indirects
     CB41   20 C3D6     12875   	jsr  fmtrk	; format side zero
U    CB44   20 0000 "   12876   	jsr  getwdstat	; get status
     CB47   D0 1C       12877   	bne  3$
                        12878   
U    CB49   20 0000 "   12879   	jsr  one_6	; delay
U    CB4C   20 0000 "   12880   	jsr  cacheip	; setup indirects
     CB4F   20 CA00     12881   	jsr  fmtver_ctl ; won't come back on verify error
     CB52   E6 96       12882   	inc  tcacheside	; side one
     CB54   A5 96       12883   	lda  tcacheside
     CB56   C9 02       12884   	cmp  #2
     CB58   90 DF       12885   	bcc  1$
                        12886   
     CB5A   A5 88       12887   	lda  cmdtrk	; where are we?
     CB5C   C5 8F       12888   	cmp  pmaxtrk	; ...there yet?
     CB5E   D0 08       12889   	bne  4$
                        12890   
     CB60   A9 01       12891   	lda  #1		; ok
     CB62   2C          12892   	.byte skip2
     CB63   A9 06       12893   2$	lda  #6		; format error
U    CB65   4C 0000 "   12894   3$	jmp  errr
                        12895   
     CB68   A4 99       12896   4$	ldy  hdrjob
     CB6A   B9 01BC     12897   	lda  hdrs2,y	; next track
     CB6D   18          12898   	clc
     CB6E   69 01       12899   	adc  #1
     CB70   99 01BC     12900   	sta  hdrs2,y
U    CB73   4C 0000 "   12901   	jmp  erret	; service job
                        12902   	
                        12903   
1581 DOS v10  318045-01  (c)1987 CBM  Commodore 6502ASM B0.0  Jun 10 13:44:52 1991  Page 158-24
"mrout"   MROUT.SRC

Error Addr  Code          Seq   Source statement

                        12904   ;
                        12905   
     CB76               12906   detwp_ctl
                        12907   
     CB76   A9 40       12908   	lda  #wpin
     CB78   2C 4001     12909   	bit  pb		; write protected
     CB7B   D0 03       12910   	bne  1$
                        12911   
     CB7D   A9 08       12912   	lda  #8		; it's protected
     CB7F   2C          12913   	.byte skip2
     CB80   A9 00       12914   1$	lda  #0
U    CB82   4C 0000 "   12915   	jmp  errr
                        12916   	
                        12917   ;
                        12918   
     CB85               12919   syntaxer
                        12920   
     CB85   A9 0E       12921   	lda  #$0e	; syntax error
     CB87   2C          12922   	.byte skip2
     CB88               12923   wrongfmt
     CB88               12924   wrongtrk
     CB88   A9 02       12925   	lda  #2
U    CB8A   4C 0000 "   12926   	jmp  errr
                        12927   
                        12928   ;
     CB8D               12929   chkcache
     CB8D   18          12930   	clc
     CB8E   65 8C       12931   	adc  cache+1
     CB90   85 4B       12932   	sta  ip+5	; high address
     CB92   C9 20       12933   	cmp  #cache_high
     CB94   B0 01       12934   	bcs  1$
                        12935   	
     CB96   60          12936   	rts
     CB97               12937   1$
     CB97   68          12938   	pla
     CB98   68          12939   	pla		; restore stack
U    CB99   20 0000 "   12940   	jsr  getwdstat
     CB9C   4C CB88     12941   	jmp  wrongfmt
                        12942   
                        12943   ;

Errors detected in 150 lines.

 value name                            cross reference

S 0000 A                               
  AC3A A10                               7312#  7304?
  AC91 A11                               7372#  7315?
  AC7B A12                               7358#  7347?
  AC8E A13                               7368#  7359?
  AC75 A14                               7355#  7351?
  AC5A A2                                7475   7377   7338#  7270?
  AC01 A3                                7334   7275#
  AC11 A4                                7285#  7278?
  AC1E A5                                7294#  7286?
  AC1B A6                                7292#  7283?
  AC2C A7                                7303#  7295?
  AC55 A8                                7333#  7310?  7301?
  AC96 A9                                7379   7376#  7325?  7292?
  BC6B ABORT_SW                          9862   9854#
  B766 AC10                              9064   9054#
  B76A AC20                              9061   9056#
  B76F AC30                              9060#  9057?
  B77C AC40                              9072#  9068?
  8D45 ACC200                            2630#
  005F ACCUM                             5332$  5331$  5328$  5327$  5326$  2644   2632$  2631$  2630$  2609$  2608$  2604   2600 
                                         2599$  2598$  2592$  2591$  2555$  2553$  2550   2548   2546$  2544$  2541$  2527   2521 
                                         2514   2504    323#
  8D44 ACCX2                             2629#  2624?  2562?
  8D41 ACCX4                             2624#
  002A ACLTIM                             288#
  AE42 ACPTR                             7743   7651#  7275?
= 0040 ACT_LED                          12008  11999   8137   8132   7789   7777    868    217#
  820D AD10                               891    882#
  8D4F ADD100                            2647   2643#
  A351 ADDBI1                            6063#  6059?
  A367 ADDBI2                            6077#  6074?
  A344 ADDBIG                            6054#  6031?
  95AB ADDFIL                            9254   4447   4041#  1803?
  9ECC ADDLIT                            5330#  5323?  5317?  5307?  4658?
  A2BC ADDNR                             5961#  5949?  5943?  5469?
  A2DC ADDR1                             5985#  1905?
  A2D6 ADDREL                            5983#  5601?
  8D4C ADDRES                            5333   2641#  2561?
  9E96 ADDRTS                            5293#  5290?
  AA07 ADDSUM                            6909#  6871?  6866?  6854?  6851?
  9E8D ADDT12                            5287#  5285?  5279?
  A44A ADREL1                            6197#  6192?
  A438 ADRELS                            6188#  5983?  1893?
  95D7 AF08                              4067#  4058?
  95E7 AF09                              4088   4077#
  95EC AF10                              4080#  4068?
  95F5 AF15                              4085#  4063?
  9604 AF20                              4093#  4083?  4075?  4071?  4065?
  9613 AF25                              4102#  4098?
  9635 AF30                              4120   4117#
  9656 AF50                              4135#  4124?
  8ADA AH10                              2249   2232#
  8AF8 AH20                              2251#  2237?  2234?
  8AFE AH30                              2260   2254#
  8B05 AH35                              2267   2263   2259#
  8B12 AH40                              2269#  2256?
= 00FF ALL                              12046  12026  12008  11603  11563  11561  11202  11201  11200  11199  11194  11192  11191 
                                        11190  11180  11172  11059   9680   9362   8153   8132   8019   7789   7751   7588   7508 
                                         7425   7404   7339   7308   7299   7289   7281   7266   7247   7042   7030   7018   6449 
                                         6440   6397   6389   6374   6343   6290   5924   5030   4996   4982   4848   4001   3288 
                                         2978   2932   2058    861     53#
  820B ALLDRS                            4539   1911   1738   1597    881#
  8C5C ALLOCBUF                          2449#
  B33C ALLOCPART                         8439   8434#  8355?
  A2D2 AN05                              5976#  5970?  5964?
  A2D5 AN10                              5978#  5968?
  98E4 AP30                              4493#  4488?
= 0002 APMODE                            4407   4388    107#
  98CC APPEND                            4482   4479#  4410?  1793?
  A2F7 AR10                              6002#  5997?  5993?
  A311 AR20                              6089   6085   6017#  6012?
  A316 AR25                              6021#  6016?  6009?
  A320 AR30                              6028#  6024?
  A36A AR34                              6080#  6050?
  A36C AR35                              6082#  6079?  6071?  6048?  6044?
  A37A AR40                              6091#  6083?
  A394 AR45                              6157   6153   6149   6103#
  A3A6 AR50                              6159   6111#  6100?
  A3B2 AR55                              6115#  6109?
  A3D7 AR60                              6134#  6128?
  A3F3 AR61                              6150#  6145?
  A402 AR65                              6161#  6142?
  A42E AR70                              6183#  6179?
  8AD0 ASCHEX                            2227#  2215?
= 0010 ATNA                              8095   7755   7343   7266    228#
= 0080 ATNRD                              231#
  ABCF ATNSRV                            7243#
  84D6 AUTO1                             1334#  1331?  1328?  1325?
  84E3 AUTO2                             1341#  1336?  1316?  1312?
  002D AUTOFG                            1311    290#
  84AE AUTOI                             9288   9087   6818   2283   2278   2092   1548   1311#   996?
  B75E AVCK                              9050#  9036?  8707?
  9DF2 B02                               5195   5192#
  9DDE B0TOB0                            6231   5181#
  8B48 BA15                              2296#  2288?
  8B49 BA20                              2305   2297#
  8B5B BA30                              2307#  2292?
  8B60 BA40                              2310#  2302?
? 0000 BACK                             12620? 12604?
= 0031 BADCMD                           10264  10112   7014   6483#  2160?  2019?   603?
= 0033 BADFN                             8454   6485#  4322?
= 0030 BADSYN                            9107   6482#  4225?  2163?  1748?   726?
= 0066 BADTS                             6497#  3853?
= 0A00 BAM1                              8877   8849   8837   8834   8612$  8609$  8606$  8603$  8600$  8597$  8593$  8589$  8575$
                                         8175   2961$  1729$    62#
= 0B00 BAM2                              8853   8841   8717   8671   8613$  8610$  8607$  8604$  8601$  8598$  8595$  8591$  8576$
                                         7953     63#
  B5D8 BAMBIT                            9041   8814#  8756?  8732?
  B62A BAMEND                            8857#  8845?  8835?
  B612 BAMOUT                            8847#  8723?  8564?
? 0000 BAMSIZ                            9052?
  B5BD BAMTRK                            8797#  8792?  3015?
  A85A BCD2                              6665#  6663?
  A851 BCDDEC                            6681   6658#
  802D BCERR                             1446    927    603#
  8C6B BCJMP                             2457#  2188?  2186?
  8C61 BCTAB                             2456   2455#  2171?
  8BF7 BE10                              2397#  2394?
= 0007 BFCNT                             7995   7993   7969   2109    535     93     93     90#
  A27F BH10                              5914#  5910?
  A273 BHERE                             5906#  5885?  5876?
= 0052 BIGFIL                            6490#  6018?
= 0010 BINDX                             8809   8705   8615     89#
= 0001 BIT0                             12037  11188  10287  10254   8107   7247   7107   5030   3811   3807    224    211     45#
                                       
= 0002 BIT1                             11198  11197  11188  11178   7501   7460   7339   7259    225    212     46#
= 0004 BIT2                             11194  11191  11190  11189    226    213     47#
= 0008 BIT3                             11189  11170  11169   9280   8027   7018    227    214     48#
= 0010 BIT4                             11203  11198  11195  11193  11189  11181  11179  11178  11174  11170  11169  10509  10506 
                                        10139   9926   9803   9661   7624   7616   7508   5926   5924   5920   5649   5560    228 
                                          215     49#
= 0020 BIT5                             11247  11245  11236  11225  11203  11198  11195  11193  11189  11181  11179  11178  11176 
                                        11174  11170  11169  10232  10206   7751   7565   7349   7289   7281   6366   2990    229 
                                          216     50#
= 0038 BIT543                           11197  11170#
= 0040 BIT6                             11247  11246  11245  11244  11236  11235  11194  11192  11191  11190  11136  10390  10280 
                                         8167   7307   7299   7281   7247   2997   2932   2445    230    217     51#
= 0080 BIT7                             11660  11566  11249  11248  11232  11231  11230  11229  11228  11227  11226  11223  11222 
                                        11221  11220  11219  11218  11202  11201  11198  11192  11191  11190  11169  11059  11052 
                                        10457  10411  10302  10291  10245   9919   9680   9362   9292   7920   7308   7298   7289 
                                         7247   7030   3288   2978   2935   1338   1320    231    218     52#
= 00B8 BIT7543                          11188  11169#
  AB09 BITIT                             7098#  7032?  7020?
  8C2F BKOTST                            2429#  2382?  2354?  2314?
  009E BLINK                              407#
  8A68 BLK10                             2177   2160#
  8A6D BLK30                             2221   2167   2163#
  8A72 BLK40                             2166#  2158?
  8A7A BLK50                             2175   2171#
  8A84 BLK60                             2179#  2172?
  8B2F BLKALC                            2458   2283#
  8BE3 BLKEXC                            2462   2388#
  8B23 BLKFRE                            2459   2278#
  8C7F BLKME                             2470#  2466?
  861C BLKNB                             1580   1550   1540#  1476?
  8620 BLKNB1                            1544   1542#
  8C09 BLKP4                             2406#  2372?
  8A9F BLKPAR                            2381   2344   2192#  2182?
  8BFA BLKPTR                            2463   2399#
  8B85 BLKRD                             2460   2332#
  8B65 BLKRD2                            2388   2323   2314#
  8B71 BLKRD3                            2345   2332   2323#
  8B74 BLKRD4                            2341   2324#
  8C32 BLKTST                            2430#  2284?  2279?
  8C84 BLKWIF                            2473#  2467?
  8BAE BLKWT                             2461   2354#
  8A5D BLOCK                             2154#
  B5EA BMASK                             8827#  8824?  8760?  8736?  3454?  3445?
  0031 BMPNT                             9066   9055   9020   9005   8904   8880$  8878$  8823   8810$  8808   8805$  8803$  8768$
                                         8765   8761$  8759   8744$  8742   8737$  8735   8720$  8716   8712   8706$  8674$  8670 
                                         8661$  8645$  3016   2993   2988   2985   2982   2972   2967    294#
  AA0F BOOTVECTOR                        6915#  6799?
  8AAC BP05                              2211   2199#  2196?  2107?
  8ABB BP10                              2219   2209#  2204?  2201?
  8AC1 BP20                              2215#  2207?
  A19C BREAK                             5858   5783#  5774?  5757?
  95A1 BRK_CONTROLLER                    4027#  4020?
  8C1D BT15                              2423   2418#
  8C22 BT20                              2421#  2416?
  00D1 BUF0                              7996$  7994$  7987$  6277$  5630$  5624$  5431$  5428   5419   5405   5394   4867   3564$
                                         3531   3521   3472$  3461   3382$  3376   3333$  3320$  3229   3222   3201   3155   2825$
                                         2823   2778$  2776   2752   2739   2729$  2726   2712   2698$  2696   2689   2144   2130$
                                          413#
  00D8 BUF1                              7988$  5434$  5422   5412   5397   4876$  4874   3464   3392$  3386   3340$  3321$  3232 
                                         3225   3204   3158   2828$  2826   2781$  2779   2755   2742   2732$  2715   2702$  2700 
                                         2692    414#
? 0000 BUFCACHE                         12083?
= 0300 BUFF0                            12372  12295   9727   9612   8853   8849   8841   8837   8175     55#
= 0400 BUFF1                               56#
= 0500 BUFF2                               57#
= 0600 BUFF3                               58#
= 0700 BUFF4                               59#
= 0800 BUFF5                               60#
= 0900 BUFF6                               61#
= 0C00 BUFFCACHE                         8024   8022     64#
  BB42 BUFFER_SW                         9676#
  BC8B BUFFER_SW1                        9875#  9871?  9867?
  01F1 BUFIND                           12859   7965   7954$  5221   5200   5187   5185   4722   3793   2758   2745   2392   1557 
                                          498#
  C589 BUFMOVE_CTL                      12053# 11270?
= 009E BUFMOVE_DV                         146#
  007E BUFPNT                            9901$  9888$  9844$  9840$  9741$  9728$  9726$  9697$  9689   9683$  9678$  9614   9613$
                                         9611$  9424   9417   9410   9405   9397   9384   9381   9374   9366   9365$  9360$   366#
                                       
  00BB BUFTAB                            8489$  8265   8257$  8256$  8239$  8217$  8216$  7979$  7977$  7975$  7973$  7966$  7963$
                                         6608$  5657   5653   5645$  5641   5556$  5539   5538$  5484   5465   5234$  5232$  5115 
                                         4882$  4873$  4550$  3786   3784   3767$  3764   3701$  3698   3697$  3686$  3643   3641 
                                         3640$  3639$  3634   3432$  3280$  3211$  3208   3179$  3178   3175$  3173$  3168   3166 
                                         3078$  2958   2957$  2954   2953$  2897$  2896$  2404$  2318   2149$  1377   1375    833$
                                          785    412    411#
  8C0F BUFTST                            2438   2429   2409#  2399?
  006D BUFUSE                            8008$  3478$  3455$  3453   3444   2451$  2450   2125$  2124   2120    332#
  C029 BURST                            10468# 10334?
  89C0 BURST_DOIT                        2063#  2060?
  01EA BURST_STAT                       10348  10343  10339$  9869   9855   9790$  9772   9751   9714$  9634    490#
  C026 BURTST                           10474  10467#
  AA88 BUSS                              7017#  6974?
  8BBC BW10                              2362#  2359?
  008B CACHE                            12931  12768  12571  12232   9900   9682   9364   8025$  8023$   379#
? 0000 CACHEBUF                         12086?
? 0000 CACHEIP                          12880? 12874? 12639? 12447? 12111? 11695? 11688?
  009F CACHEOFF                         11060$ 11058   9679   9361    408#
  BC99 CACHEPOINT                        9885#  9822?
  0097 CACHESIDE                        12601$ 12082$ 12038$ 11122  10288$   399#
  0095 CACHETRK                         12603$ 12103  12079$ 11567$ 11117  10461$ 10423  10290$   395#
= 0020 CACHE_HIGH                       12933     65#
  B2EF CALCPAR                           9259   9188   9129   8438   8381#  1635?
= 00CD CB                                6771$  6765$  6704$  6695$  6690$  6683$  6680$  6678$  6667$  3675$  2013$  2011$   963 
                                          937    743    629$   593    412#
  9E05 CB10                              5207   5205#
  A938 CBMBOOT                           7935   6798#  2908?
  A94C CBMBOOTRTN                        6923   6921   6919   6917   6811#
  A926 CBMFIL                            6804   6796   6795#
= 0073 CBMV2                             6502#  3883?
= 0012 CBPTR                             6608$  4550$   833$   785    412    411     93#
  83E2 CC10                              1198   1188#  1090?
  83E8 CC15                              1193#  1189?
  83F4 CC20                              1200#  1195?
  8002 CCHKSM                             571#
  A09C CDIRTY                            5627#  5165?
  028F CHAR                               745    739$   597    594$   541#
  AA3C CHGUTL                            6963#
  CB8D CHKCACHE                         12929# 12668? 12476? 12137?
  8903 CHKIN                             1957   1941#  1774?
  891E CHKIO                             1957#  1921?  1801?
  BF47 CHKSEE                           10318#  9882?  9707?
  023B CHNDAT                            7606$  7604   7577   6686$  5674$  5654$  4861$  4546$  3690$  3653$  3642$  3597   2347$
                                         2145$   520#
  0234 CHNRDY                            8291$  8244$  8006$  8004$  7732   7543   7522   6706$  5815$  5676$  5664$  5656$  4906$
                                         4863$  4496$  3688$  3648$  3623$  3619$  3610   3360$  3194$  2329$  2143$  1867    519#
                                       
  0084 CINDEX                           11146  11076$   371#
? 0000 CJUMPH                             614?
? 0000 CJUMPL                             612?
  890D CK10                              1950   1945#
  891D CK20                              1955#  1947?
  8921 CK25                              1965   1958#
  892B CK30                              1964#  1959?
  98B3 CKM1                              4466   4462#
  98BE CKM2                              4469#  4463?
  98C0 CKT1                              4474   4470#
  98CB CKT2                              4477#  4471?
  98AB CKTM                              4459#  4256?  4248?
  928C CLD2                              3512#  3509?  3501?
  926E CLDCHN                            8143   3496#  2937?
  AD03 CLKHI                             9859   9755   7621   7533   7445#  7262?
= 0004 CLKIN                            10371   7717   7686   7672   7657   7384   7272   7042   2058    226#
  ACFA CLKLO                             7629   7557   7438#  7362?
= 0008 CLKOUT                            9829   9730   7446   7439   7071    227#
  995C CLOSE                             7328   4558#
  A08C CLR10                             5617#  5610?
  8075 CLRB2                              641    639#
  B43D CLRBAM                            8573#  8473?
  9DFA CLRBUF                            6219   5199#  4976?  4923?
  9266 CLRC1                             3492   3490#
  8071 CLRCB                             6602    637#   634?
  9262 CLRCHN                            9157   8470   3488#
  A07B CLREC                             5615   5608#  5582?
  9CE1 CLRF10                            5020#  5015?
  9CDB CLRFLG                            5802   5605   5468   5441   5017#  5012?  2839?
  9968 CLS05                             4572   4564#
  996B CLS10                             4566#  4559?
  9983 CLS15                             4580#  4575?
  998A CLS20                             4586   4584#
  999C CLS25                             4594#  4589?
  9986 CLSALL                            4582#  4567?
  9A05 CLSBIG                            4649#  4625?
  99A8 CLSC28                            4602#  4598?
  99C2 CLSC30                            4616#  4606?
  99C5 CLSC31                            4617#  4612?
  999F CLSCHN                            9272   4595#  4584?  4569?  1836?
  9272 CLSD                              3513   3498#
  9ACD CLSD4                             4755#  4747?
  9AE8 CLSD5                             4771#  4728?
  9AF0 CLSD6                             4775#  4769?  4732?
  9A72 CLSDIR                            4707#  4646?  4615?
  9A02 CLSR1                             4647#  4644?
  99F8 CLSRE1                            4664   4641#
  99C8 CLSREL                            4619#  4609?
  9A40 CLSW10                            4680#  4676?  4672?
  9A54 CLSW15                            4690#  4687?
  9A59 CLSW20                            4692#  4682?
  9A2A CLSWRT                            4668#  4614?
  0028 CMD                              10441$ 10434$ 10414  10395$  8954$  5263$  5154$  5150$  5146$  5142$  5138$  5134$  3901 
                                         3900$  3888$  3847   3830$  3820   3710$  3069$   286#
  C3EE CMD7                             11730  11725  11721#
  C402 CMD70                            11746  11741  11737#
  C416 CMD71                            11762  11757  11753#
  C48A CMD72                            11858  11853  11849#
  C49E CMD73                            11874  11869  11865#
  C4B2 CMD74                            11890  11885  11881#
  C4DB CMD750                           11935  11931  11919  11915# 11907?
  C4C5 CMD7A                            11900  11896#
  C479 CMD7B                            11839  11835#
  C469 CMD7C                            11826  11822#
  C459 CMD7D                            11813  11809#
  C449 CMD7E                            11800  11796#
  C439 CMD7F                            11787  11783#
  C511 CMD7FE                           11965  11960  11956#
  C4FF CMD7FF                           11946  11942#
  C429 CMD7N                            11773  11769#
  0200 CMDBUF                           10568  10565  10556  10553  10541$ 10539$ 10531  10521$ 10512$ 10496  10323  10316$ 10289 
                                        10270  10238  10236  10229  10211  10164$ 10131  10077  10073  10065  10063  10048$ 10045$
                                        10042$ 10038$ 10019$ 10007  10001   9983   9968   9964   9907   9889   9876$  9807   9805 
                                         9778$  9763   9761   9701$  9657   9655   9619$  9592   9590   9500$  9499   9491   9482 
                                         9478   9296   9233   9230   9227   9224   9116   8468   8466   7974   7972   7493   7098 
                                         7088$  7065$  7050   7047   6972   6968   6957   6953   6949   6805$  5816   5811   5809 
                                         5793   4526$  4525$  4514   4460   4312   4287   4167   2871   2232   2199   2170   2044 
                                         2035   2025   2022   2001   1983   1980   1978   1974   1744   1395   1380   1216   1127 
                                         1111    918    908    905    814    810    806    799    795    791    639$   508#
= 0005 CMDCHN                            8004$  7999   7994$  2868   2668   2660   2657    101#
? 0000 CMDER2                            9206?  9073?  9033?  9017?  8795?  8411?  6905?  6889?  5784?  4753?  3884?  3854?  2308?
                                          648?
  A7F4 CMDER3                            6602#  6599?
  807C CMDERR                           10265  10113   9460   9242   9110   8930   8455   7015   6837   6186   6019   5870   5807 
                                         5799   5678   5587   4430   4383   4375   4364   4323   4320   4226   4078   3580   3331 
                                         2891   2803   2722   2419   2311   2164   2161   2104   2020   1962   1953   1785   1749 
                                         1000    829    727    669    645#   623?   604?
  C1E7 CMDINDEX                         11295# 11075?
= 0029 CMDLEN                            2871    823    637    508    182#
  022A CMDNUM                            6595$  6591   4505$  4166$  2183   2181$   827$   719    611    606$   509#
  AA2D CMDRET                            6980   6953#
  81AF CMDRST                            4532    831#   825?
= 000F CMDSA                             8000$  3096    106#
  AA27 CMDSEC                            6977   6949#
  8165 CMDSET                            5792   4165    785#   592?
  0029 CMDSIZ                           10318  10024$  9977   9503   9495$  9476$  9473   9212   9088   8463   6964   6803$  4507 
                                         2248   2210   2095   2039   1997   1408    945    942    822$   772    740    287#
? 0000 CMDTBB                            2052?  2050?
? 0000 CMDTBL                             596?
  0088 CMDTRK                           12887  12845$ 12810  12632  12602  12440  12359  12282  11705  11676  11131$ 11118$   374#
                                       
  007B CMDWAT                            8102$  8098   2880$   362#
  897E CMER                              2019#  1991?  1976?  1735?
  83D7 CMPCHK                            1184#  1176?  1086?
= 0076 CNTRER                            8053   6505#
  8327 COMPAR                            1082#  1060?  1018?
  0066 CONT                              8708$  8703$  7720$  7653$  7632$  7596$   325#
  007D CONTROLLER_STAT                    364#
  87D2 COP01                             1784#  1779?
  87D7 COP05                             1787#  1782?
  87EE COP10                             1798#  1772?  1768?  1764?  1760?
  87A2 COPY                              1757#
  BD7C CP00                             10033#
  8335 CP02                              1091   1089#
  8336 CP05                              1229   1138   1120   1116   1103   1099   1090#
  833B CP10                              1093#  1087?
  834D CP20                              1105#  1096?
  8359 CP30                              1129   1111#
  836A CP32                              1122#  1113?
  836C CP33                              1124#  1109?
  837B CP34                              1133#  1125?
  8385 CP40                              1228   1140#  1134?
  83AC CP42                              1160#  1157?
  83FA CP99                              1204#  1131?
  BDFC CPMINT                           10108#
= 000D CR                                5673   5486   4678   3670    817    802     88#
  AF8D CR20                              7879#
  AF8F CR30                              7880#
  400E CRA                               7823$  7586$  7584   7574$  7572   7416   7400    249#
  400F CRB                                250#
  B88D CREATPART                         9245#  9120?
  819E CS07                               821#   789?
  819F CS08                               822#   818?   803?   786?
  81D0 CS10                               852    844#
  B9D7 CTLERR                            9440#  9356?
= 0042 CTLLEN                           11289#
  01D7 CTLTIMH                          11574$   462#
  01D8 CTLTIML                          11576$   463#
  C1A5 CTL_CMD                          11289  11254# 11151? 11149?
  C163 CTL_CMD_INFO                     11158# 11078?
  C184 CTL_CMD_INFO1                    11206# 11080?
  0036 CTMP                             12047  12044$   297#
  9D79 CURBLK                            5122#  4401?  4356?  4051?  3733?  1302?  1266?
  87F4 CY                                1801#  1798?
  8800 CY10                              1832   1805#  1795?
  8815 CY10A                             1815#  1811?
  881C CY15                              1823   1819#
  881F CY20                              1820#  1817?
  8831 CY30                              1829#  1826?
  8895 CYEXT                             1879#  1813?
  88A1 CYEXT1                            1885#  1881?
  88C2 CYEXT2                            1904#  1900?
  BDE7 C_801                            10093# 10089?
  BDE4 C_802                            10091#
  0054 DATA                              8292   8285$  8245   7724   7713$  7703$  6906   6883   5669   5613$  5603$  5599   5569 
                                         5537   5487$  5466$  3689   3680$  3671$  3247   3242   3195   3189$  2874   2863   2856 
                                         1996$  1865$   315#
  ACE8 DATHI                             7682   7660   7630   7613   7424#  7361?
= 0001 DATIN                             7662   7637   7600   7560   7554   7549   7539   7531    224#
  ACF1 DATLOW                            7723   7676   7610   7431#  7263?
= 0002 DATOUT                            7432   7425    225#
  8DA4 DBL00                             2711#  2694?
  8DB7 DBL01                             2724#  2719?
  8E0D DBL05                             2774#  2769?  2766?
  8E1E DBL08                             2783#  2772?
  8E27 DBL10                             2789#  2763?
  8E2D DBL15                             2794#
  8E30 DBL20                             2795#  2788?
  8E37 DBL30                             2813   2801#
  8D7D DBLBUF                            6335   6299   6215   6177   6111   6104   5894   5892   5884   5709   5707   5701   5527 
                                         5525   5515   5506   4702   4684   4620   3267   3241   3220   3197   3063   3060   2686#
                                       
  8DED DBLDR1                            2756#  2753?
  8DD5 DBLDRD                            2743#  2740?
  8DAA DBLDRV                            2716#  2713?
  8D88 DBLGET                            2693#  2690?
  8D9E DBLJMP                            2708#  2705?
  8DC5 DBLPT1                            2733#  2730?
  8DC3 DBLPUT                            2732#  2727?
  8E4C DBS10                             2816#  2810?
  8E3C DBSET                             2807#
  4002 DDPA                              7812$   236#
  4003 DDPB                              7817$   237#
  AD0C DEBNC                             7716   7685   7671   7656   7636   7599   7559   7553   7548   7538   7530   7454   7452#
                                         7383?
  8B20 DECTAB                            2277#  2262?
  01FB DEJAVU                            7932   7921$  3293$  3292   3289$  3287   2998$  2996   2933$  2931   2905    500#
  8719 DEL1                              1685   1671#
  8732 DEL2                              1683#  1678?
  AD34 DELAY16                          11607   7622   7614   7483#  7481?
  AD2F DELAY40                          11623   7628   7620   7479#  7366?  7364?
  873B DELDIR                            8358   4305   1687#  1613?
  8713 DELFIL                            4768   1669#  1658?  1648?
  0073 DELIND                            8311$  4144   4093   4092$  4081$  4061$  1276   1271$  1270   1044$  1006$   338#
  0072 DELSEC                            4141   4090$  4067   1268$  1263   1238$   337#
  B741 DERR                              9032#  9028?  8978?
  CB76 DETWP_CTL                        12906# 11286?
= 00B6 DETWP_DV                         10297   2925    166#
= 0008 DEV_SEL1                          7943    214#
= 0010 DEV_SEL2                          7943    215#
  AFCA DIAGOK                            7926#  7922?
  AFDE DIAGRTN                           7937#  7933?  6816?
  0284 DIND                              5067   4713   4443$  4355$  4146$   537#
  B1C8 DIR1                              8296   8233   8220#
  B1EB DIR10                             8269   8235#
  B201 DIR3                              8248#  8224?
  0064 DIRBUF                            9147   9141   9135   8546$  8540$  8538$  8530$  8527$  8525$  8522$  8519$  8516$  8513$
                                         8510$  8507$  8504$  8500$  8496$  8494$  8427   8424   8421   8418   8347   8335   8330 
                                         8327   8324   6445   6437   6352$  6348$  6328$  6325$  6285$  6282$  6263$  6260$  6257$
                                         6253$  6242$  6235   6172$  6167$  5948$  5939$  5874   5872   5777   5773   5772$  5759 
                                         5751$  5722   5381   5380$  5364   5267   5264   5222$  5217$  5214   5118$  5116$  5109$
                                         5102$  5096   5093   5089$  5086$  4420   4417   4414   4396$  4394   4350$  4347$  4344$
                                         4342   4134$  4131$  4128$  4117$  3787$  3785$  3768$  3765$  3666   3281$  3212$  3209$
                                         1689$  1646   1641   1630   1627   1624   1621   1608   1562   1560$  1558$  1505   1477 
                                         1463   1457   1381$  1378$  1376$  1365$  1300   1269   1260   1217   1212   1179   1173 
                                         1170   1150   1136   1118   1112    324#
= 0071 DIRERR                            9072   9032   6500#
= 0018 DIRLEN                            1465   1461   1455    180#
  026E DIRLST                            8243$  4562$  3656    531#
  0071 DIRSEC                            1304$  1283    336#
  01E5 DIRST                             8692   8561   8547   8499$  8062$  3031$  2955$  1243    488#
  022B DIRTRK                            9148$  9008   8988   8939   8918   8908   8872   8770   8746   8682   8588   8569   8551 
                                         8495   8398   8317   8068$  4715   4200   3009   2918   1839   1281   1241    510#
  0087 DIRTY                            12619$ 11569$ 11114  10458$ 10294  10292$  9816$  8164   8113    373#
= 0007 DIRTYP                            4605   3615   2150   2150    111#
  C6D7 DISKIN_CTL                       12267# 11264?
= 0092 DISKIN_DV                          138#
= 0080 DISK_CHANGE                        218#
  8D0C DIV006                            2587#  2526?
  8D09 DIV120                            2585#  2506?
  8D06 DIV254                            2583#  2503?
  8D18 DIVID1                            2612   2594#
  8D34 DIVID2                            2610#  2606?
  0089 DKANDMASK                        10345  10239$  8020$   375#
  0080 DKMODE                           10383  10347$ 10341  10230$  9912$   367#
  008A DKORAMASK                        10346  10237$  9721   9586   8018$  2979$  2977   2936$  2934   1342    377#
  94E6 DOIT                              4785   3900#
  94E8 DOIT2                             5272   3901#  3714?
  94E4 DOJOB                             6456   6395   3899#  3896?  2922?
  C38D DONE                             11638#
  94DE DOREAD                            8867   8844   8840   3895#  2948?
  9564 DOREC                             3985#  3974?  3965?  3938?
  9569 DOREC1                           10463   3997   3988#
  957C DOREC3                            3999#  3994?
  01EC DOSVER                            8518   8031$   493#
  94E2 DOWRIT                            8856   8852   3898#
  9450 DRDBYT                            6092   5474   3790#  1255?
  AC9D DRQ                               7385   7382#  7353?
  93C3 DRT                               3710#  3707?
  93BD DRTRD                             4720   4074   3706#  2340?  2315?
  93C1 DRTWRT                            8549   8536   4402   4357   4135   3709#  2383?  2368?
  02A3 DRVCNT                            1102   1052$  1010$   995$   548#
  02A4 DRVFLG                            1450$  1443$  1440    994$   549#
  0026 DRVST                            11137$ 11135    270#
  0027 DRVTRK                           12844$ 12809  11677  11132  11119    285#
  027D DSEC                              5063   4711   4441$  4353$  4143$   536#
  877F DSK10                             1737#  1733?
  8796 DSK20                             1753   1748#
  879B DSK30                             1751#  1746?  1741?
  876E DSKCPY                            1728#
= 0072 DSKFUL                            8929   8785   6501#  4077?
  001D DSKID                             8605   8602   8512   8509   8469$  8467$  3043$  3042$  2986$  2983$   267#
  AFFD DSKIN0                            7958   7954#
  B02E DSKIN1                            7984   7982#
  B035 DSKIN2                            7991   7987#
  AF24 DSKINT                            7807#
? 0000 DSKNAM                            8488?  1559?
  006F DSKVER                            8521   8503$  8478   3842   2959$   334#
= 008F DTOS                              7927     79#
  BF02 DUMPBUF                          10270#
  BFE3 DUMPTRK                          10421#
  BEF8 DUPLC1                           10261#
  8003 DVERSION                           573#
= 0040 DYFILE                            5619   4642     72#
  A8BF E10                               6741   6720#
  A8C9 E20                               6728   6727#
  A8CE E30                               6730#  6725?
  A8DC E40                               6740#  6732?
  A8E0 E45                               6743#  6738?  6734?
  A8E4 E50                               6747   6746#  6721?
  A8E9 E55                               6751   6749#
  A8FB E60                               6760#  6753?  6749?
  A90A E70                               6771#  6761?
  A8F4 E90                               6754#  6744?
  A914 EA10                              6785   6779#  6776?
  A925 EA20                              6790#  6787?
  A90E EADV1                             6775#  6750?  6746?
  A91C EADV2                             6785#  6727?  6724?
  804C ENDCMD                            9431   9278   9273   8566   8321   7091   5845   4592   4578   4411   4189   2910   2407 
                                         2395   2384   2350   2334   2152   2074   2061   1937   1799   1796    618#
  96A8 ENDRD                             4206   4187#
  8050 ENDSAV                            4457   2295   2281    620#
? 0000 END_CTL                          12827? 11680? 11138? 11068?
  B990 END_OF_FILE                       9389#  9367?
  026D ENTFND                            5057   1649   1434   1289$  1240$  1141$  1083$  1061   1024    530#
  00EA ENTIND                            5068   4442   4354   4145$  1926   1845   1767   1766   1146$   846$   417#
  00E5 ENTSEC                            5064   4440   4352   4142$  1922   1841   1771   1770   1148$   845$   416#
= 0008 EOI                               7544    194#
  0051 EOIFLG                            7690$  7256$  6901   6891   5594   5571   2876   1869$  1816$   312#
= 0080 EOIOUT                            8290   3676   3193    203    193#
= 0008 EOISND                            3611   1868   1815    195#
? 0000 ER0                               5367?  5254?
? 0000 ER00                              5973?
? 0000 ER1                               5387?  5249?
? 0000 ER2                               5370?
? 0000 ER3                               5384?  5356?
  A8AD ERMOVE                            6768   6709#  6688?
  A7D1 ERR1                              6584#  6570?
  A83B ERR10                             6641#  6638?  6626?  6615?
  A7D3 ERR2                              6585#  6579?
  A7D9 ERR3                              6590#  6582?
  A7F0 ERR4                              6600#  6593?
  02D0 ERRBUF                            7978   7976   6702   6685   6679   6677   3685   3683   3667   3663    558#
= 0006 ERRCHN                            8006$  7997   7996$  6706$  6703$  6686$  3690$  3688$  2009$    96#
? 0000 ERRET                            12901? 11663?
  C561 ERRLEDOFF_CTL                    12023# 11268?
= 009A ERRLEDOFF_DV                       144#
  C558 ERRLEDON_CTL                     12014# 11267?
= 0098 ERRLEDON_DV                        142#
  A86D ERRMSG                            8786   6676#  6601?  6597?   630?
  81E5 ERROFF                            6671   3672    858#   631?
  81F1 ERRON                             6605    865#
? 0000 ERROR                             9642?  9442?  3953?  1718?
  BB3F ERROR_SW                          9673#  9668?
? 0000 ERRR                             12926? 12915? 12894? 12825? 12801? 12606? 12427? 12350? 12261? 11701? 11638?
= 0010 ERRSA                             7998$  3099     98#
  A602 ERRTAB                            6716   6714   6514#
  A867 ERRTS0                            8054   7938   6673#  3674?  2474?  2471?
  02AB ERWORD                            8144   5827$  5584   5581$  4588   4574    866$   859$   842$   725$   620    556#
= A7AE ETEND                             6736   6731   6556#
  BB0A EXBAD                             9873   9776   9640#  9636?
  CB26 EXBUF_CTL                        12852# 11280?
= 00E0 EXBUF_DV                           172#
  022E F1CNT                             4519$  4250   4245   2270   2216$  1946   1804    955    876$   839$   711    700    686$
                                          513#
  0067 F1PTR                             2439   2430   2410$  2409    885    882$   837$   326#
  022F F2CNT                             9322$  9317$  9314   6840$  6829$  6826   4520$  4236$  1944   1831   1758   1186    960 
                                          959$   956    890    878$   875    840$   705$   687$   514#
  0230 F2PTR                             4439   4432   4386$  2251$  2217   1847   1844   1838   1829   1805$  1776$  1193   1188$
                                         1187$  1140    879$   838$   701$   515#
  BAFC FAIL                             10310  10182   9939   9856   9752   9671   9632#  9605?  9583?
  922A FB1                               3449   3444#
  9235 FB2                               3452#  3446?  2915?
  82F9 FF10                              1058   1049#  1039?
  8309 FF25                              1060#  1046?  1041?
  8318 FF30                              1069#  1062?
  8326 FF40                              1077#  1070?  1067?  1050?
  82E6 FFRE                              1660   1038#
  82ED FFST                              4542   4239   1601   1053   1043#
  0231 FILCNT                            1290   1258$  1253$   516#
  00EF FILDRV                            8451   5058   4518$  4179$  4150$  4055   1919$  1915   1914$  1912   1763   1762   1169$
                                         1167   1094    888$   847$   418#
  009B FILLBYTE                         12718  11921  10098$ 10078$ 10059   8085$  1714$  1710$  1708    404#
= 0061 FILNOP                            6492#  2890?
= 0060 FILOPN                            6491#  4374?
  029C FILSEC                            9344   9305$  6843   4435   4107$  2442   2440   2433   2431   2411   2403   2274$  2129 
                                         2108   1656   1174$   850$   545#
  0291 FILTBL                           10028$ 10026$  9312$  9093$  8490   8462   6824$  4536$  4521$  4459   4286   4232$  4111 
                                         1932   1743   1105    961    936    886$   883    844$   773$   759$   699$   673$   658$
                                          651$   543#
  0297 FILTRK                            9333   9097   6841   6833   4433   4360   4308   4289   4275   4104$  2272$  1958   1949 
                                         1654   1197   1171$   849$   544#
  00F9 FILTYP                            5054   5024   5020$  5019   5014   4900$  4804$  4548$  4188$  3137   2151$   420#
  C39B FIN                              11658#
  BB02 FINAL                            10101   9960   9634#
  B9FB FINLD                             9462#  9453?  9440?
  C52D FINMFM                           11986  11981  11977# 11968?
  BEF1 FINTDSK                          10254# 10241?  9921?
  C01D FIRSTDUMP                        10459# 10435?
  BD92 FL00                             10047#  9996?
  852D FL05                              1409   1395#
  8547 FL10                              1411#  1406?  1400?  1397?
  B9DF FLDCMDERR                         9549   9547   9444#
  B9D3 FLDERROR                          9545   9543   9436#
= 0014 FLENF                            10017  10013#
= 0063 FLEXST                            9103   6494#  4319?  1961?
= 0062 FLNTFD                            9459   9105   6493#  4363?  1952?
= 0075 FMTER                             6504#
  BD4A FMTFIL                           10018  10013  10012#
  C3D6 FMTRK                            12875  11704# 11689?
  CA00 FMTVER_CTL                       12881  12629# 12618? 11696?
  92DF FND10                             3577   3572#
  92EC FND30                             3582#  3573?
  9228 FNDBUF                            3443#  3415?
  902F FNDC20                            3096#  3093?
  9035 FNDC25                            3100#  3097?
  9041 FNDC30                            3109#  3103?
  8304 FNDFIL                            1536   1075   1065   1057#
  A148 FNDL10                            5730   5722#
  A159 FNDL20                            5736#  5723?
  A155 FNDL30                            5732#  5727?
  8526 FNDLMT                            9211   1391#  1354?  1107?
  92DB FNDLNX                            3570#  3309?
  A143 FNDLST                            5720#  5712?  5702?
  B6D9 FNDN0                             8966#  8962?  8956?
  B6DE FNDN1                             8976   8969#
  B6E1 FNDN2                             8972#  8967?
  B6BF FNDNXT                            8949#  8905?
  9027 FNDRCH                            7518   6632   5795   5122   4338   3593   3091#  2422?  2016?  1809?  1432?
  8CAC FNDRE1                            2520#  2510?
  8C89 FNDREL                            6176   5984   5830   2502#
  B732 FNDSEC                            9023#  9006?
  9053 FNDW10                            3131   3124#
  904A FNDW13                            3116#  3113?
  905B FNDW15                            3131#  3120?
  905D FNDW20                            3133#  3122?
  9042 FNDWCH                            7729   6635   4788   4611   3111#  2833?  1892?
  8746 FORMAT                            8472   1697#
  CB35 FORMATDK_CTL                     12868# 11281?
= 00F0 FORMATDK_DV                      10086   1712    176#
  C3BB FORMAT_CTL                       11686# 11262?
= 008E FORMAT_DV                          132#
  02A5 FOUND                             1201$  1185$  1064   1049   1048$  1029   1019    550#
  B571 FRE10                             8753#  8750?  8733?
  91CD FRE25                             3373#  3352?
  9258 FREB1                             3484   3478#
  925E FREB2                             3483#  3480?
  9261 FREB3                             3486#  3468?  3465?
  9252 FREBUF                            3474#  3404?  3394?  3384?
  919E FRECHN                            8374   6640   4647   4617   4563   3779   3776   3511   3490   3343#  3308?  1681?
  91A5 FREEIT                            3349#  3345?
  923E FREIAC                            3459#
  9434 FREICH                            6606   4564   3774#   635?
  867C FREMSG                            1589   1588#  1582?
  B546 FRETS                             9186   8731#  2280?  1683?  1669?  1634?
  9248 FRI10                             3467#  3462?
  AED9 FRMERR                            7750#  7647?
  8288 FS10                               969    965#
  8290 FS15                               971#   966?   957?
  8270 FS1SET                            4538   1596    954#
= 0020 FSDIR                             7588   7570   7414   7404    229#
  0076 FSFLAG                           10481$ 10480  10476  10372$ 10370  10364   9528$  9527   9522   9281   8108   8028$  7752$
                                         7750   7625   7617   7566   7510$  7507   7461   7358   7350   7346   7340$  7338   7309$
                                         7306   7300$  7297   7290$  7288   7282$  7280   7260$  7258   7248$  7246   7043$  7041 
                                         7026$  7025   7019$  7017   6618   2059$  2057    341#
  BD12 FSTFMT                            9964#
  B8D5 FSTLOAD                           9280#
  BB11 FSTRD                             9647#
  BB15 FSTREAD                           9705   9650#
  BCB2 FSTSEK                           10118   9907#
  BC35 FSTWRITE                          9821#  9813?
  BC01 FSTWRT                            9880   9793#
  BC2F FSTWRT1                           9818#  9791?
  ACAF FS_WAIT                           7392#
  002F FTNUM                             9067   9059$  9051$   292#
  9F19 GA1                               5398#  5395?
  9F2C GA3                               5413#  5406?
  9F1C GAFLGS                            6272   5627   5621   5502   5403#  5077?
  BD9B GAP00                            10051# 10005?
  009A GAP3                             11951  10053$ 10008$  8088$   403#
  9186 GBERR                             4919   4825   3338   3329#
  9211 GBF1                              3423   3422#  3416?
  9224 GBF2                              3433#  3420?
  92F4 GBYTE                             3592#  1864?
  887A GCBYTE                            4479   1864#
  B25C GD1                               8295#  8288?
  938F GE10                              3679#  3668?  3664?
  9396 GE15                              3683#  2017?
  939F GE20                              3687#  3681?  2014?
  93A1 GE30                              3688#  3677?
  9303 GET                               7641   3600#  3595?
  9329 GET0                              3622#  3616?
  930D GET00                             3606#  3602?
  932F GET1                              3626#  3612?
  935F GET3                              3660   3652#
  9365 GET6                              3656#  3627?
  9F11 GETACT                            8262   8253   8235   8213   8197   6316   6217   5534   5393#  5166?  5161?  5123?  5112?
                                         5027?  4717?  4109?  4006?  3791?  3781?  3761?  3693?  3505?  3143?  3070?  2886?  2795?
                                         2425?  1930?
  9096 GETB1                             3178#  3164?
  9092 GETB2                             3174#  3170?
  9204 GETBUF                            4916   4822   3413#  3337?  3326?  2912?  2812?  2718?
  9071 GETBYT                            8369   8367   8280   5174   5172   4544   3679   3244   3218   3213   3187   3153#  3051?
                                         3049?
  B24B GETD3                             8285#  8281?
  B245 GETDIR                            8280#  3659?
  9370 GETERC                            3662#  3608?
  9D7C GETHDR                            8897   6903   6887   6121   5906   5123#  4999?  4948?  4857?  4452?
  9F33 GETINA                            5418#  2809?
  9D49 GETLNK                            6116   5888   5880   5092#
  854D GETNAM                            8223   1419#
  9442 GETPNT                            5715   5694   5455   4680   4674   3781#  3662?  3277?  2870?  2355?  1433?  1257?
  9069 GETPRE                            5668   5652   5640   5483   3633   3143#  2405?  2317?
  915B GETR2                             3306#  3303?
  919D GETR4                             3341#  3335?  3324?
  918E GETR5                             3333#  3327?
  916D GETR55                            3316#  3313?
  915A GETRCH                            8191   4799   3305#  2127?  2100?
  B746 GETSEC                            9035#  9027?  8975?  8966?  2304?  2287?
  8B6B GETSIM                            2326   2317#
  9157 GETWCH                            4893   3302#
? 0000 GETWDSTAT                        12940? 12876? 12794? 12737? 12597? 12540? 12426? 12349? 12258? 12201? 11692?
  9F3B GI10                              5423#  5420?
  8894 GIB20                             1877#  1873?  1870?
  8876 GIBYTE                            6900   6882   1862#  1820?
  8571 GN05                              1440#  1435?
  8576 GN050                             1443#
  857E GN051                             1448#  1444?
  858B GN10                              1455#  1441?
  8598 GN12                              1462#  1459?
  85AC GN14                              1476#  1473?  1469?  1466?
  85BA GN15                              1484#  1480?
  85DB GN20                              1501#  1497?
  85E3 GN22                              1510   1505#
  85F3 GN30                              1523   1514#
  8603 GN35                              1525#  1520?  1516?
  8608 GN37                              1534   1527#
  8617 GN40                              1536#  1529?
  855D GNSUB                             1430#  1423?
  9445 GP1                               5276   3782#
  BDF8 GP3                              10103# 10052?
  0100 GRPNUM                            6412   6411$  6405$  6194   6148   6065   6015$  5351   4653   2530$  1903$  1883    423#
                                       
  B74C GS10                              9045   9037#
  B75B GS20                              9047#  9039?
  B75D GS30                              9048#  9042?
  9E75 GSSPNT                            6161   6155   6126   5274#
  AA04 GTABYE                            6906#  6902?
  A9F5 GTABYT                            6900#  6868?  6864?  6852?  6849?
  BA40 HANDSK                            9514#
  0099 HDRJOB                           12896  12816  12055  11129  11074$   402#
  000B HDRS                             12368  12366  12291  12289  12056  10324$  9808$  9806$  9764$  9762$  9658$  9656$  9593$
                                         9591$  9385$  9382$  9346$  9343$  6566   6564   5129   5127   4012$  4010$  3861   3859 
                                         3831   3829   3239$  3237$   266#
  01BC HDRS2                            12900$ 12897  12817  12078  11130  10132$   460#
  001F HEADER                           12818  12646  12633  12454  12441  12360  12283  12115  12104  10195  10162  10153  10126 
                                         9943    268#
  94A8 HED2TS                            3882   3856#  3852?
  A844 HEX0                              6654   6648#
  A84F HEX5                              6656#  6649?
  A83E HEXDEC                            6698   6693   6643#
  01ED HI                                9266   9237   9234$  8428$  8406   8388$  8385   1631$   494#
  BF86 HSKRD                            10384  10356# 10212? 10205? 10202? 10199? 10196? 10193?  9690?  9615?  7059?
  BF99 HSKSND                           10368#
  BFAB HSKSTAT                          10382# 10333? 10226? 10190?  9674?  9608?
  BF83 HSKTST                           10362  10355#
  A56E HUGEREL                           6364#  6286?  6225?  6191?  6144?  6030?  6011?  5743?  5348?  4955?  4830?  4624?  2509?
                                         1899?  1880?
  9E60 IBOP                              5263#  5259?
  9E56 IBRD                              6318   5770   5257#  5244?
  400D ICR                              10375   9836   9830   9737   9731   9531   7825$  7698   7651   7581   7575   7472   7393 
                                         7078   7072    248#
  B0F0 IDLE                              8094#
  B15B IEEEDUMPTRK                       8163#  8160?
  AA33 IEEES                             6970   6957#
  AEDF ILERR                             7755#  7741?  7368?
= 0077 ILLPAR                            9241   9109   6506#
  02A2 IMAGE                             1751   1739    949$   935$   718    717$   716    693$   692    684$   547#
  9138 INCPTR                            3275#  1294?
  0232 INDEX                             4724   4714$  4339   1301$  1286   1145    517#
  0085 INFO                             11140$ 11126$ 11111$ 11106$ 11101$ 11096$ 11085$ 11081$ 11079$   372#
  8F03 INITDR                           10248   9922   9158   8565   8477   8308   6598   4215   2931#  2904?  1340?
  9B9B INITP                             4895   4866#  4800?
  9BA8 INITP0                            4874#  4869?
  9BB7 INITP1                            4883#  4878?
= 0065 INIT_DD_PA                        7811    220#
= 003A INIT_DD_PB                        7816    233#
= 00FE INIT_PRT_PA                       7809    221#
= 00D5 INIT_PRT_PB                       7814    234#
  BEBB INQST                            10222#
  8EC5 INTDRV                            2901#
  9460 INTDSK                            3806#
  B00A INTT1                             7970   7962#
  B6ED INTTS                             8981#  4891?
  008D IOBYTE                           12614   8608   8036$  7034$  7033   7031$  7029   3034$  2989$   380#
  0046 IP                               12932$ 12864  12862$ 12860$ 12769$ 12732$ 12729$ 12724  12572$ 12535$ 12532$ 12529$ 12421$
                                        12418$ 12415$ 12373$ 12371$ 12344$ 12341$ 12337  12296$ 12294$ 12233$ 12196$ 12193$ 12189 
                                        11933$ 11930$ 11927  11153  11152$ 11150$  7911$  7910   7909$  7905   7904   7900$  7895$
                                         7891$  7890   7880$  7874$  7866   7865$  7862$  7859$  7086$  7082$  7063$  7058   7048$
                                         7046$  2086   2085$  2082$  2064   2053$  2051$   306#
= 0011 IRSA                              4399   4336   4049   3774   3720   1862   1807   1792$  1789   1430    117#
  8EDC ITRIAL                            2938   2912#  1322?
  B6FA ITS1                              9021   8988#
  B717 ITS2                              9008#  9002?  9000?  8997?
  B72B ITS3                              9019#  9014?
= 0012 IWSA                              9270   9250   3777   3726   2831   1890   1834   1790$  1787    118#
? 0000 JATNSRV                           9536?  8111?  7473?
  A7F1 JCMDER2                           6601#
? 0000 JDUMPTRK                         10304?  8176?
  A7AE JERROR                            6558#
  01FC JHANDSK                           9465   9449   9426   9421   9412   9407   9402   9391   9376   9371    505#
? 0000 JIDLE                             7940?  7760?  6641?
? 0000 JINTDSK                          10256? 10247?  8476?  8471?
? 0000 JLISTEN                           7355?
? 0000 JNEW                             10030?
? 0000 JNMI                              7513?
  006C JOBNUM                           10430  10427$ 10413$  8870$  8865   8858$  8847   8832   8484   8182$  8169   6560$  6453$
                                         6392$  5271   5269   5261$  5257$  5124$  4719$  4054   3899   3886   3856   3822$  3713 
                                         3711   2949   2923   2913$  2426$  2400   2391   1556    331#
  02A8 JOBRTN                           10447  10412$ 10410  10403$ 10391$  8168$  3958   3951$  3929   3906$  3823   2446$  1339$
                                         1321$   553#
  0002 JOBS                             11659$ 11055  10404   8125   4034   4030   4025$  3980   3952   3547   3426$  3422   2133$
                                          265#
? 0000 JTALK                             7365?
? 0000 JTRANS_TS                        11083?
  CB26 JUMPC_CTL                        12856# 11279?
= 00D0 JUMPC_DV                           171#
  8E80 L40                               2853#  2844?
  8E8A L41                               2859#  2854?
  8E99 L42                               2868#  2851?  2842?
  8EAE L45                               2880#  2877?
  8E8F L46                               2863#  2859?
  8EA9 L50                               2876#  2872?
  BBB4 LABORT_SW                         9758   9750#
  0074 LBUSED                            6276   5629   5623   5411$  5404$   339#
  C0BE LCC                              11050#
  C0C7 LCC0                             11063  11055#
  BF44 LCHKSEE                          10315#  9784?  9625?
  990E LD02                              4518#  4509?
  9927 LD03                              4529#  4516?  4512?
  9931 LD05                              4534#  4530?
  993F LD10                              4540#  4527?
? 0000 LDCMD                             4504?
  C54F LEDACTOFF_CTL                    12005# 11266?
= 0096 LEDACTOFF_DV                       141#
  C546 LEDACTON_CTL                     11996# 11265?
= 0094 LEDACTON_DV                        139#
  0079 LEDPRINT                         12027$ 12025  12018$ 12016  12009$ 12007  12000$ 11998   8154$  8152   8149$  8147   8138$
                                         8136   8133$  8131   4002$  4000   3990$  3988    869$   867    862$   860    355#
= 0012 LENF                              6802   6796#
  BAD6 LERROR_SW                         9607#  9603?  9600?
  BB85 LFSTWRITE                         9724#  9718?
  0290 LIMIT                             9222   9214   9115   1411$  1386   1205   1124    542#
  0050 LINDX                             9263   8286   8266   8242   8194   7603   7576   7542   7521   6629$  6457   6450   6421 
                                         6396   6384   6373   6349   6317   6273   6269   6220   6095   5987   5961   5852   5813 
                                         5768   5716   5705   5695   5683   5672   5549   5543   5497   5491   5462   5456   5451 
                                         5446   5426   5418   5403   5393   5274   5242   5218   5155   5104   5023   5017   5013 
                                         5005   4989   4974   4962   4929   4921   4896   4866   4860   4851   4827   4806   4707 
                                         4685   4669   4659   4636   4603$  4545   4498   4494   4438   4334   4187   4137$  4043 
                                         3652   3600   3596   3504$  3460   3395   3385   3375   3363   3358   3355$  3310$  3245 
                                         3228   3221   3200   3162   3154   3146   3136   3126$  3106$  2869$  2865   2822   2775 
                                         2724   2688   2672   2669   2542   2371   2139   2128   1866   1425$  1421    311#
  00A8 LINTAB                            8118   8000$  7998$  7982$  6624   5040   4913$  4910   4819$  4817   4596   4500$  3499 
                                         3357$  3350   3316$  3117   3102   2138$  2136   1792$  1790$  1789    410#
  0070 LINUSE                            8002$  3584$  3583   3572   3372$  3371   1731$   335#
  AEB8 LISTEN                            7747   7728#
  82BC LK05                              1011   1005#
  82C5 LK10                              1030   1010#
  82CB LK20                              1025   1015#
  82D0 LK25                              1027   1018#  1008?
  82D9 LK26                              1024#  1020?
  82E0 LK30                              1029#  1016?
  01EE LO                                9264   9236   9231$  8425$  8407   8389$  8382   1628$  1615   1609$   495#
  98F7 LOADIR                            4504#  4197?
  BAAE LOGICAL_ERR                       9587   9581#
  BAB3 LOGICAL_RD                        9652   9623   9585#
  BB74 LOGICAL_WERR                      9722   9712#
  BB81 LOGICAL_WRT                       9799   9782   9720#
= 0032 LONGLN                            6484#   828?
  82B9 LOOKUP                            9320   9095   6832   1920   1757   1004#
= 0080 LRF                               6183   5839   5834   5801   5636   5604   5591   5565   5481   5442   4480   1875   1821 
                                           71#
  8D7C LRUEXT                            2681#  2673?
  8D5B LRUILP                            2658   2654#
  8D59 LRUINT                            8012   2676   2653#
  8D6C LRULP1                            2679   2670#
  00DF LRUTBL                            3520   2671$  2670   2661$  2655$   415#
  8D68 LRUUPD                            2808   2687   2668#
  C07A LSECTNX                          10525#  9781?  9622?
  0077 LSNADR                            7950$  7303   7011$  7010   7002$   353#
  A82E LSNERR                            6635#  6619?
  02A6 LSTBUF                            1256$  1247   1245$   551#
  0242 LSTCHR                            8287   8268$  8267$  8196$  6703$  5717$  5706$  5658   5642   5485$  4884$  4811$  3644 
                                         3635   3246$  3191   3169   3163   2349$  2346   2327$  2141$  2009$   521#
  0272 LSTJOB                           10422$ 10415$  8200$  5164$  5029   4056   3991   3973$  3949$  3889$  3507   3427$  2134$
                                          535#
  BD80 LT00                             10037#  9987?
  BBBA LTRANS_SW1                        9754#  9745?
= 001F LXINT                             8001   1730    104#
  8978 M30                               2016#  2003?  1999?
  C400 MAIN7                            11971  11732#
  B515 MAPOUT                            8863   8699#  8320?  6175?  4971?  4616?  4591?  4577?  1680?
  C0AF MAXIM                            10570  10565#
  C097 MAXMIN                           10550# 10184?
= 0012 MAXSA                             7981   5046   3112   3092    410     87#
  01F0 MAXSEK                           10572$ 10518  10497  10201  10188  10072$  9949$  8079$   497#
  022C MAXTRK                            9161   9150$  9013   8915   8702   8623   8064$  3868   3834   3012   2301    511#
= 0003 MDMODE                            4367    108#
  892F MEM                               1974#
  AAA8 MEMB                              7037#  6986?
  8954 MEMRD                             1995#  1985?
  8983 MEMWRT                            2026   2022#  1988?
  C09C MINIM                            10558  10553#
  01EF MINSEK                           10560$ 10488  10198  10186   9941$  8082$   496#
= 0064 MISTYP                            6495#  5806?  4382?  1784?
  02A7 MODE                              4468$  4406   4387   4366   4293$  4280   4262$  4242$   552#
? 0000 MODLST                            4465?
? 0000 MOTOFF                           11669?
  C3A9 MOTOFFI_CTL                      11667# 11260?
= 008A MOTOFFI_DV                         130#
  C393 MOTOFF_CTL                       11648# 11258?
= 0086 MOTOFF_DV                          128#
? 0000 MOTON                            11656?
  C396 MOTONI_CTL                       11654# 11259?
= 0088 MOTONI_DV                          129#
  C390 MOTON_CTL                        11642# 11257?
= 0084 MOTON_DV                           127#
  01D9 MOTORACC                          8039$   464#
  B239 MOVB1                             8276   8272#
  B237 MOVBUF                            8271#  8252?  8230?  8212?
  B2E6 MRK1                              8375#  8372?
  B2D0 MRK2                              8377   8365#
  8670 MSG1                              1585   1582#
  866B MSGFRE                            1580#  1436?
= 000C MSGLEN                            1589#  1581?
= 0004 MTR_ON                             213#
  8CE8 MUL100                            2564   2559#
  8CEF MUL200                            2562#  2560?
  8CD8 MUL25                             2550#  2547?
  8D05 MUL400                            2573#  2571?  2569?
  8CE3 MUL50                             2556#  2554?  2549?
  8CC1 MULPLY                            2540#  2502?
= 0007 MXCHNS                            7986   5410   3557   3538   3529    537    536    528    527    526    525    523    521 
                                          520    519    432    431    430    420    415    414    413    101     96     86#
= 0005 MXFILS                            2218    843    768    545    544    543    419    418    417    416    179#
  B354 N10                               8457#  8452?
  B380 N20                               8476#  8464?
  B390 N30                               8484#  8480?  8474?
  B3E6 N32                               8532   8530#
  B3F8 N34                               8542   8540#
  02AC NAMBUF                            8272   1583$  1577$  1575$  1574$  1572$  1567$  1542$  1533$  1532   1526$  1518   1513$
                                         1506$  1502$  1500$  1494$  1491$  1488$  1483$   557#
  A29F NB10                              5941   5939#
  A2A7 NB20                              5950   5945#
  A2BB NB30                              5956#  5952?
= 000A NBCMDS                            2456#  2169?
  0250 NBKH                              9267$  4886$  4780   4689$  4671   4663$  4640$  3086$   524#
  0249 NBKL                              9265$  4885$  4777   4690$  4686   4670   4661$  4638$  3083$   522#
= 001B NBSIZ                             1540    181#
  028D NBTEMP                            8886$  8884$  8250   8248   8228   8226   8208   6087   6082   1555$  1554$  1464$  1458$
                                         1449$   540#
  BAF7 NCHNL                             9648   9628#
? 0000 NCMDS                              595?
  864A ND15                              1569   1562#
  8652 ND20                              1567#  1564?
  02AA NDBH                              9200$  9192$  9175   8885   8778   8776$  8752$  3041$  3022$  3004$   555#
  02A9 NDBL                              9202$  9194$  9173   8883   8781   8777$  8773   8749$  8680$  3040$  3019$  3018   3003$
                                          554#
  BAFA NDKRD                             9630#
  BBF9 NDKWRT                            9789#
  B348 NEW                               8450#
  8627 NEWDIR                            4541   1548#  1451?
  B44A NEWMAP                            8585#  8550?  8309?
  A459 NEWSS                             6214#  6130?
  A479 NEWSS1                            6358   6341   6229#  6226?
  A49E NEWSS2                            6356   6250#
  A547 NEWSS3                            6336#  6228?
  A550 NEWSS4                            6342#  6339?
  A56B NEWSS5                            6357#  6354?
  0083 NEXTJOB                          12858  12365  12288  12080  12035  11661$ 11658  11090  11070$ 11065  11053$   370#
  8F85 NFCALC                            8696   3000#  2994?
  8F93 NMF10                             3023   3020   3010   3007#
  8FB3 NMF20                             3025#  3013?
  8FB9 NMF21                             3030#  2975?  2969?  2946?
? 0000 NMODES                            4461?
  AD3C NNMI                              7493#
= 0065 NOBLK                             6496#  2310?  2307?
= 0039 NOCFIL                            6836   6487#
= 0070 NOCHNL                            6499#  5798?  3579?  3330?  2802?  2721?  2418?  2103?
= 0074 NODRIV                            9457   8794   6581   6503#   999?
  006E NODRV                             9289   8791   8458$  3039$  2965$  1347   1346$  1335$   633$   333#
= 0034 NOFILE                            6486#   668?
  BD0A NONEDR                            9966   9958#
= 0050 NOREC                             6888   6488#  6185?  5677?  4429?
= 0006 NOTFND                              70#
= 0000 NOTRDY                            3622    192#
  C0B7 NO_MAX                           10569# 10566?
  C0A4 NO_MIN                           10557# 10554?
  0257 NR                                6096$  5962   5955$  5945$  5684   5550   5544   5498$  5493$  5463   5457   5452   5105 
                                         4966$  4853$   526#
  9FFB NRBU20                            5528#  5523?  5510?
  9FDD NRBU50                            5515#  5503?
  9FEB NRBU70                            5521#  5517?
  9FBF NRBUF                             5651   5562   5501#  5460?
  BD85 NS00                             10040#  9990?
  A4C0 NS20                              6269#
  A51C NS40                              6333   6316#
  A529 NS50                              6321#  6291?  6287?
  BD06 NSECKS                           10041   9955#  9944?  8076?
= 0006 NSSL                              6338   6008   5374     83     83     74#
= 0078 NSSP                              5316   5278     85#
? 0000 NTYPES                            4469?   964?
  A298 NULBUF                            6113   6108   5936#  4967?
  9D56 NULLNK                            6114   5100#  4968?
  B65B NUMFRE                            8883#  5986?  1587?
= 0008 NUMJOB                           11662  11054   8116   7952     69#
  0075 NUMSEC                           10526   9038   8960   8953   8640   8391   8072$  3874   3846    340#
  9415 NXDB1                             3754   3753#
  93E7 NXDRBK                            4085   3733#
  9F8A NXOUT                             5866   5470#
  B6A5 NXT2                              8932#  8911?
  B6AF NXT3                              8939#  8934?  8922?
  93BC NXTB1                             3704#  3699?
  93AA NXTBUF                            8376   3693#  1684?  1297?
  B675 NXTDS                             8945   8937   8927   8916   8903#  3740?
  B6A0 NXTERR                            8947   8929#  8909?
  9F62 NXTR15                            5451#  5448?
  9F76 NXTR20                            5462#  5458?
  9FB6 NXTR30                            5496#  5475?  5471?
  9FB7 NXTR35                            5497#  5490?
  9F9E NXTR40                            5483#  5444?
  9F99 NXTR45                            5481#  5453?
  9FAB NXTR50                            5490#  5479?
  9F4C NXTREC                            5667   5440#
  B668 NXTTS                             8897#  6214?  6106?  6097?  4988?  4924?  3259?
  89FA OB05                              2121   2110   2103#
  89FF OB10                              2106#  2097?
  8A10 OB15                              2117   2115#
  8A35 OB30                              2135#  2101?
  9518 OK                                3932#  3927?  3912?
  C38B OKDONE                           12848  12834  12274  12093  12087  12084  11682  11650  11637# 11633?
  A862 OKERR                             6671#  5589?   583?
  C399 OKFIN                            12049  12028  12019  12010  12001  11670  11657# 11644?
  81FD ONEDRV                            9313   9094   8450   6825   4237    875#
? 0000 ONE_6                            12879? 12622? 12617?
  96B0 OP021                             4191#  4172?  4169?
  96BB OP04                              4199#  4195?
  96CF OP041                             4208#  4192?
  96D6 OP0415                            4213#  4175?
  96DE OP042                             4216#  4209?
  96E7 OP049                             4222#  4217?
  96EF OP10                              4228#  4223?
  97F7 OP100                             4366#  4361?
  9809 OP110                             4377#  4372?  4368?
  9812 OP115                             4392   4382#  4331?  4328?
  9817 OP120                             4385#  4380?
  983D OP125                             4405#  4389?
  9870 OP130                             4432#  4427?  4424?
  96F3 OP20                              4232#  4229?  4220?
  9729 OP40                              4294   4290   4257#  4251?  4246?
  973E OP45                              4269#  4260?
  9754 OP50                              4280#  4276?  4270?  4264?
  975E OP60                              4286#  4254?
  9773 OP75                              4296#  4282?
  9786 OP80                              4308#  4303?
  978E OP81                              4312#  4309?  4299?
  979D OP815                             4322#  4317?
  97A2 OP82                              4325#  4314?
  97ED OP90                              4360#  4284?
  9678 OPEN                              4163#   591?
  98A8 OPF1                              4457#  4450?
  9896 OPFIN                             4448#  4408?  4358?
  8872 OPIR10                            1859#  1856?
  8841 OPIRFL                            1838#  1806?  1777?
  89E4 OPNBLK                            4211   2090#
  93CF OPNIRD                            8364   3718#  1843?  1670?  1285?  1246?
  93E0 OPNIWR                            3726#  1802?
  9B0D OPNRCH                            4798#  4437?  4204?  4185?  3722?
  93D1 OPNTYP                            6846   3719#
  9BC3 OPNWCH                            4891#  4446?  4333?  3728?
  9BC6 OPNWCH1                           9253   4892#
  984D OPREAD                            4413#  4405?  1853?
  82A2 OPTSCH                            4540   4238   1598   1004    992#
  9890 OPWRIT                            4446#  4310?  4306?
  9B2A OR10                              4812#  4808?
  9B47 OR20                              4827#  4823?
  9B69 OR21                              4842#  4831?
  9B8D OR30                              4859#  4814?
  0053 ORGSA                             7736   7322   7318$  6611   2848    584    314#
  9B7B OROW                              4972   4851#  4841?
  82B6 OS70                              1002#   997?
= 0020 OVRFLO                            5801   5608   5576   5565   5553   5467   5440   2838     73#
  9BE5 OW10                              4909#  4903?
  9BFF OW20                              4921#  4917?
  9C60 OW21                              4959#  4956?
  9C82 OWBREL                            4973#  4958?
  A222 P2                                5860#  5856?
  A264 P20                               5896#  5890?  5877?
  A22A P30                               5866#  5862?
  A265 P80                               5898#  5886?  5882?
  4000 PA                               12048$ 12045   7942   7810$  7790$  7788   7779$  7778    210#
  811C PARSE                             4234   2195   2157    739#   703?   678?   663?   653?
  8004 PARSXQ                            8103    581#
  B781 PART                              9086#
  805F PARTEND                           9166    629#
= 0005 PARTYP                            9248   9124   1617    112#
  02A1 PATFLG                            1144$  1085$   841$   774    766$   760    754$   707    695$   688    546#
  00F4 PATTYP                            9328   9122   4523$  4377   4371   4325   4302   4296   4272   4181$  4148$  1941   1848 
                                         1651   1194   1166$  1164   1142   1072    848$   779$   765$   419#
  4001 PB                               12909  10470  10469  10358  10357   9833   9831$  9828   9734   9732$  9729   9516   9515 
                                         8096$  7815$  7756$  7692   7663   7589$  7587   7571$  7569   7469   7464   7453   7452 
                                         7447$  7445   7440$  7438   7433$  7431   7426$  7424   7415$  7413   7405$  7403   7376 
                                         7374$  7344$  7342   7333   7269   7267$  7265   7075   7073$  7070    223#
  8E70 PBYTE                             2840#  2836?
? 0000 PCMD                               607?
  AF02 PD10                              7786   7781#
  AF13 PD11                              7797   7792#
  AF03 PD20                              7783   7782#
  AF14 PD21                              7794   7793#
  AEF8 PE20                              7805   7776#
  AEF9 PE30                              7800   7777#
  AF12 PE40                              7803   7791#
  0093 PENDSEC                          12765  12648  12568  12456  12229  12117  10189$ 10071$  9948$  8078$   392#
  AEF5 PERR                              7924   7774#  7237?
  AFC7 PERR2                             7924#  7912?  7906?  7875?
  AEF2 PEZRO                             7847   7843   7836   7772#
  9F49 PI1                               5434#  5429?
  8E5C PIBYTE                            2831#  1828?  1819?
  008F PMAXTRK                          12888  10096$ 10064$ 10061   9153$  8066$   387#
  0092 PNUMSEC                          12643  12451  12112  11710  10562  10550  10214  10192  10173$ 10066$  9947$  8077$   391#
                                       
  A235 POSBUF                            6190   5872#  5849?
  A20D POSITN                            6181   5849#  5838?
  811F PR10                               769    756    740#
  8133 PR20                               754#   749?
  8136 PR25                               755#   752?
  814C PR28                               767#   762?
  8151 PR30                               771#   741?
  8153 PR35                               772#   746?
  8163 PR40                               780#   776?
  C0DE PRCMD                            11070# 11056?
  C900 PREAD_CTL                        12433# 11284?
= 00A4 PREAD_DV                           154#
? 0000 PRECMP                           12110? 11707?
= 002B PRECMPTRK                          178#
  028B PRGSEC                            9345$  9304   4456$  4182    538#
  004C PRGTRK                            9341$  9300   4454$  4174    307#
= 0002 PRGTYP                            4266   4213   4186   4186   4180   1781    114#
  8099 PRSCLN                            4529   4216   1732    665    660#
  8018 PS05                               592#   589?   585?
  8022 PS10                               601    596#
  8032 PS20                               606#   598?
  803C PS30                               611#   608?
  0091 PSECTORSIZ                       12702  12661  12510  12469  12396  12319  12171  12130  11905  11828  10340  10051  10040 
                                        10035$  9984$  9892   9823   9684   8075$  6819   2942    389#
  C6D7 PSEEK_CTL                        12271# 11275?
= 00A8 PSEEK_DV                         10325    156#
  B0CF PSETDEF                          11570   8071#  3813?  2902?  1703?  1318?
  008E PSTARTRK                         12843  10127$  8057$   386#
  0094 PSTARTSEC                        12770  12677  12657  12652  12573  12485  12465  12460  12234  12146  12126  12121  11708 
                                        10513  10425  10187$ 10068  10050$ 10002$  9942$  9891   8081$   393#
  AF52 PU10                              7832   7829#
  AF58 PU20                              7850   7834#
  AF5D PU30                              7840   7838#
  8E78 PUT                               7746   2848#
  8EBD PUTB1                             5007   2893#  2887?
  8EB1 PUTBYT                            9269   8273   8261   8260   8259   8251   8249   8232   8229   8227   8222   8221   8219 
                                         8211   8209   8207   8206   8204   8202   4699   4697   4679   4108   4105   4102   3758 
                                         3756   3753   3748   3746   3265   3263   3254   2885#  2875?  2864?  2365?
  9F3E PUTINA                            5426#  2815?
  9CCA PUTSS                             6310   6308   6137   6135   5003#  4987?  4985?  4983?  4981?  4979?  4952?  4950?  4945?
                                         4943?  4941?  4939?  4937?  4935?
  C900 PWRT_CTL                         12434# 11285?
= 00A6 PWRT_DV                            155#
= 0020 PWR_LED                          12026  12017   8153   8148   7789   7777   4001   3989    861    216#
  BE06 QUERDK                           10118#
? 0000 QUERY_PATCH                      10122?
  9527 QUIT                              3967   3945#
  952F QUIT2                            10450   3976   3950#  3947?  3930?
  0055 R0                                9319$  9024$  9012$  9010   8990   8987$  8984   6863$  6855   6831$  6789$  6786$  6781 
                                         6779   6778$  6775$  6757$  6755$  6737   6730   6720   6717$  6715$  6712   6710   6344$
                                         6337   6289   6201$  6151   6133$  6058   6036   4781$  4778$  4774$  4771   4767$  4764 
                                         4762$  4759$  4757$  4746   4743   4738   4736$  4734   4726   4725$  4723$  1663   1659$
                                         1600$   316#
  0056 R1                                6912$  6910   6884   6848$  6324   6252$  6199$  6023   6003   5721   5711$  5696   5691$
                                         5686$  5685$   317#
  0057 R2                                6898   6897$  6875$  6872   6870$  6858   6850$  6327   6256$  6203$  6099   6081$  5732$
                                         5729$  5693$   318#
  A1B3 R20                               5801#  5796?
  0058 R3                                6895$  6878$  6860   6853$  6323   6245$  6196$  6068$  6067   6061$  5915   5908   5902 
                                         5899   5873$  5300   4654$   319#
  A1C2 R30                               5809#  5804?
  0059 R4                                6879$  6865$  6331   6322$  6321$  6249$  5875$   320#
  A1EB R40                               5829#  5824?  5821?  5817?
  005A R5                                6312   6302   6301$  6195$  6147    321#
  A1FD R50                               5838#  5832?
  A20A R60                               5845#  5841?
  AF95 RA10                              7897   7893   7888#
  AFA5 RA30                              7918   7900#
  AFA7 RA40                              7915   7901#
  AF93 RAMTST                            7887#
  90A2 RD0                               3191#
  90A9 RD01                              3194#
  A0EC RD05                              5843   5836   5672#  5638?
  90AF RD1                               3197#  3192?
  A0C6 RD15                              5867   5652#
  A0C9 RD20                              5653#  5646?
  A0CB RD25                              5670   5654#
  9106 RD3                               3243#  3188?
  A0DB RD30                              5663#  5659?
  9107 RD4                               3244#  3215?
  A0E1 RD40                              5667#  5643?  5583?  4856?
  9D94 RDAB                              5893   5526   5519   5512   5137#  2782?  1924?
  B5F2 RDBAM                             8876   8868   8832#
  8FFE RDBUF                             3240   3065#  3062?  3047?
  909B RDBYT                             4859   3702   3651   3187#  1675?  1673?
  B633 RDDIR                             8863#  1549?
  A5A9 RDLG                              6403#  5746?
  A5B4 RDLG1                             6414   6410#  6407?
  9DCE RDLNK                             5521   5501   5170#  4484?
  A0A6 RDREL                             5636#  3604?
  9DAE RDS5                              5154#  5151?
  9DAC RDSS                              5153#  4839?
  A5C0 RDSS1                             6420#  6406?  5352?
  A5C8 RDSS1A                            6426#  6423?
  A5DC RDSS1B                            6442#  6438?
  A5D2 RDSS1C                            6433#  6413?
  A5CC RDSS1D                            6429#  6314?
  A574 RDSSS                             6428   6372#
  A57E RDSSSA                            6379#  6376?  6300?
  90F0 RDYDR1                            3233#  3230?
  90E5 RDYDRV                            3226#  3223?
= 0001 RDYLST                            8003   4905   4495    203    200    197#
  90BE RDYPNT                            3205#  3202?
= 0088 RDYTLK                            8241   8005   6705   4862   3687    200    196#
  C900 READ_CTL                         12437# 11282? 11255?
= 0080 READ_DV                           9595   6455   6380   5258   5153   5145   5137   3895   3706   3065    123#
  026F REC                               4940   4914   4820   4426   4422$  4421   4288$  4241$  4133   1852$  1180$  1175    834$
                                          532#
  9539 REC7                              3955#  3943?
  954F REC9                              3969#
  955A REC92                             3975#  3940?
  955E REC95                             3978#  3971?  3959?  3956?
  0250 RECH                              5812$  5450$  2545    525#
  0249 RECL                              5810$  5447$  2543    523#
  A1A1 RECORD                            5792#
  951A RECOV                             3936#  3924?
= 0051 RECOVF                            6904   6489#  5869?  5826?  5580?
  0068 RECPTR                            6204$  5855   5829$  2565    327#
  91DF REL1                              3385#  3378?
  91C9 REL10                             3371#  3366?
  91C3 REL15                             3369   3365#
  91F0 REL2                              3395#  3388?
  9203 REL3                              3405#  3398?
  91CE RELBUF                            3375#  3361?  3329?
  A016 RELP05                            5548#  5541?
  A01E RELP07                            5553#  5545?
  A023 RELP10                            5555#  5551?
  A032 RELP20                            5563#  5557?
  006B RELPTR                            5992   5861   5850   2508$  2507$  2505$  1894$   330#
  9FFC RELPUT                            5614   5570   5533#
  0101 RELSW                             6365   5925$  5923   5919   5650$  5648   5561$  5559   3037$  2991$   424#
= 0004 RELTYP                            6637   4902   4813   4731   4608   4391   4330   4253   4123   4097   3140    110#
  88C5 RENAME                            1911#
? 0000 RESETIM                          11577?
  C2E7 RESET_CTL                        11559# 11256?
= 0082 RESET_DV                          8045    126#
  AFE9 RESTORE                           7942#  7931?
  CB0F RESTORE_CTL                      12838# 11278?
= 00C0 RESTORE_DV                       10121  10084   9914   8050   3962   1705    170#
  005B RESULT                            6073   6070   4662   4660   2645$  2643   2620$  2619$  2618$  2607$  2597$  2596$  2595$
                                         2572$  2570$  2568$  2567   2529   2512    322#
  BA95 RESVECTORS                        9567#  9451?  9438?  9323?  6814?
  C019 RETRYDUMP                        10456# 10438?
  0030 REVCNT                           10432   8016$  6954$  3985   3942    293#
  AF6F RM10                              7857#
  88D4 RN10                              1919#  1916?
= 0081 RNDEOI                            5675   5663   3647    203#
  933A RNDGET                            3633#  3620?
= 0089 RNDRDY                            5814   5655   3618   2328   2142    200#
  9348 RNGET1                            3640#  3636?  2333?
  934A RNGET2                            3641#  2866?  2406?
  935B RNGET3                            3649#  3645?
  025E RS                                6350   5988   5967   5853   5823   5692   4965   4915$  4821$  2557    527#
  AF7D RT10                              7871   7865#
  AF7F RT20                              7868   7866#
  0052 SA                                9271$  9251$  8189$  7320$  6623   6613$  5794$  4909   4816   4787$  4709   4595   4585$
                                         4583$  4570   4558   4499   4448   4404$  4400$  4397   4337$  4258$  4163   4140$  4050$
                                         4041   3778$  3775$  3727$  3721$  3626   3606   3512$  3498   3497$  3491$  3489$  3349 
                                         3343   3311   3111   3091   2840   2832$  2421$  2135   2094$  2090   1891$  1863$  1835$
                                         1808$  1788$  1431$  1427$  1419    313#
  8259 SA05                               947    937#
  826A SA10                               949#   943?
  826D SA20                               950#   939?
  BA7C SAVECTORS                         9554#  9542?  6916?
  01E6 SAVECTS                           9574   9572   9570   9568   9562$  9560$  9558$  9556$   489#
  002C SAVSP                            11051$   289#
  B521 SB10                              8721   8705#
  B523 SB20                              8714   8706#
  B53E SB30                              8723#  8718?  8709?
  B541 SB40                              8724#  8700?
  869A SC15                              1661   1604#
  86DB SC16                              1640#  1618?
  86EB SC17                              1649#  1642?
  8701 SC20                              1659#  1652?
  8703 SC25                              1660#  1611?  1605?
  8708 SC30                              1663#  1602?
  9E7D SCAL1                             5281   5278#
  B811 SCANPART                          9247   9170#
  9D39 SCR1                              5082#  5078?
  8067 SCREN1                            4594   4580    632#
  805D SCREND                            1667    628#
  8688 SCRTCH                            1596#
? 0000 SCRTCH_PATCH                      1637?
  9D2E SCRUB                             6216   5879   5077#  4619?
  8234 SD20                               925    912#
  8235 SD22                               922    913#
  8237 SD24                               932    914#
  823A SD40                               918#   906?
  824A SD50                               929#   909?
  A08D SDIRTY                            5619#  5533?  5090?
  400C SDR                              10369$  9839   9740   9526$  7702   7578$  7390$  7081    247#
  A171 SE10                              5760   5755#
  A175 SE20                              5759#  5753?
  A189 SE30                              5771#  5765?
  8489 SEARCH                            4082   1288#  1279?  1272?  1264?  1057?  1015?
  002E SECINC                            8951   8014$  6950$  3742$  3739$  3736    291#
  0271 SECSS                             4995$  4986   4980   4928$  4846   4836   4418$  4130    534#
  C040 SECTNX                           10487#  9879?  9704?
  004E SECTOR                           10426$ 10082$  9228$  9163$  9044$  9037   9026$  8974$  8964$  8961$  8959   8955   8952$
                                         8949   8943$  8925$  8871$  8820   8814   8693$  8689$  8687$  8685$  8568$  8562$  8558$
                                         8556$  8554$  8422$  8396$  8392   8390$  8370$  8339$  8336$  8316$  8178$  8173   6844$
                                         6697   6675$  6567$  6446$  6388$  6293   6284   6255   6139$  6122   6119   5916   5903$
                                         5268$  5175$  5130$  5097$  5088   4993   4951   4944   4927   4837$  4810   4765$  4751$
                                         4712$  4485   4455   4436$  4349   4203$  4183$  4086   4073$  4070   4045   4011   3875 
                                         3862$  3747   3264   3238   3219$  3052$  2917$  2791$  2785$  2749$  2735   2441$  2432$
                                         2298$  2291   2285   1923$  1842$  1700$  1676$  1657$  1647$  1625$  1303   1284$  1267 
                                         1244$  1147    647$   628$   309#
? 0000 SEEK                             12833? 12815? 12807? 12631? 12439? 12358? 12281? 12273? 12102? 11109?
  CB09 SEEKHD_CTL                       12831# 12819? 11276?
= 00B0 SEEKHD_DV                        10157  10148   9935   2921    161#
  CAE4 SEEKPHD_CTL                      12805# 11277?
= 00B8 SEEKPHD_DV                         169#
  C3AF SEEK_CTL                         11674# 11261?
= 008C SEEK_DV                          10133    131#
  935C SEQGET                            3657   3651#  3631?
= 0001 SEQTYP                            4278   4205   4205    113#
  9D69 SET00                             5936   5720   5112#  5100?  5092?  5084?
  8251 SETANY                             934#   659?
  B5B4 SETBAM                            9035   9019   9004   8903   8791#  8755?  8731?
  B652 SETBP2                            8877#  8797?  8704?  8614?
  B64F SETBPT                            8876#  2962?
  B0B3 SETDEF                           11571   9156   8056#  3814?  2903?  1319?
  8224 SETDRV                             902#   884?
  9CD5 SETFLG                            6184   5835   5620   5554   5482   5013#  1876?
  9588 SETH                             10429  10083   8874   6454   6393   5270   4931   4838   4007#  3712?  2920?  1701?
  9585 SETHDR                            6112   6105   5160   4894   4006#  3268?  3061?  3046?
  9473 SETJOB                            3902   3821#
  A10E SETL01                            5692#  5688?
  A12E SETL05                            5709#  5703?
  A135 SETL10                            5712#  5699?  5697?
  A13D SETL40                            5716#  5713?
  81F6 SETLDS                            8460   4184   3594   2834   2444   2436   2055   1002    950    867#
  9471 SETLJB                            5168   3820#  3072?
  9D3A SETLNK                            6107   6098   5084#
  A0FD SETLST                            5683#  5499?
  B323 SETPARTS                          9127   8415#  8354?
  9422 SETPNT                            8366   8193   6346   6320   6279   6265   6238   5851   5508   5464   5171   4961   4855 
                                         4696   4493   4340   4094   3760#  3752?  3744?  3724?  3684?  3270?  3261?  2363?  2325?
                                         1929?  1860?  1846?  1672?  1287?
  9E23 SETSSP                            6306   6132   6006   5782   5253   5225#  4977?  4947?  4933?
  B435 SETTRK                            8568#  8548?  8535?
  B643 SETTS                             8870#  8866?  8855?  8851?  8843?  8839?
  B85F SETTSLIM                          9262   9255   9252   9220#  9177?
  0098 SETVAL                           12846  11602$   401#
  BA64 SETVECTORS                        9541#  9294?
  BA06 SET_FIL                           9472#  9285?
  BF7F SHFTSIZ                          10351# 10344?
  C56A SIDE_CTL                         12033# 11269?
= 009C SIDE_DV                          10145   9932    145#
= 0001 SIDE_SEL                         12046  12043    211#
  01CE SIDS                             12081  12036  10144$  9931$  9804$  9662$   461#
? 0000 SID_SELECT                       12873? 11144? 11123?
  009D SIEEESET                          8042$  7244   6958$   406#
  009C SIEEETIM                          8156   7245$   405#
  AA39 SIGN                              6983   6961#
  AB1D SIGNATURE                         7120#  6961?
  8001 SIGNATURE_HI                      7228    568#
  8000 SIGNATURE_LO                      7225   7147   7145    566#
  8085 SIMPRS                            8307   4199   2901    650#
  9DB8 SJ10                              5160#  5139?  5135?
  9DC4 SJ20                              5165#  5147?  5143?
  9DCB SJ30                              5168#  5158?
  94D3 SJB1                              3886#  3850?  3840?  3824?
= 0024 SKIP1                             9507   8629   8404   3006     67#
= 002C SKIP2                            12922  12913  12892  12042  11699  11636  10492  10308  10306  10176  10092   9937   9788 
                                         9629   9458   9337   9108   9106   9104   7773   6381   2586   2584    815    800     68#
                                       
  B8D2 SLODOWN                           9282   9278#
  8096 SP10                               659#   654?
  AEEA SPINOUT                           7763#
  ACBB SPINP                            10335  10227   8104   7766   7759   7398#  7253?
? 0000 SPIN_PATCH                        7402?
  ACD4 SPOUT                            10332  10225  10185   9650   9284   7767   7411#  7387?  7057?
? 0000 SPOUT_PATCH                       7418?
  C800 SPREAD_CTL                       12356# 11273?
  C700 SPWRT_CTL                        12279# 11274?
  843C SR10                              1298   1247#
  8442 SR15                              1252#  1248?
  844F SR20                              1295   1257#
  846F SR30                              1275#  1261?
  849B SR40                              1297#  1291?
  84A1 SR50                              1300#  1277?
  8424 SRCHST                            8312   4062   1237#  1045?  1007?
  8477 SRRE                              8343   1281#  1038?
  0265 SS                                7989$  6452   6391   6274$  6270   6221   5769   5275   5243   5219   5156   5006   4975 
                                         4930   4922$  4828$  3402$  3396   3322$   528#
  BD97 SS00                             10049#  9999?
  9E82 SSCALC                            6042   5280#  4635?
  9E15 SSDIR                             6431   6233   6164   5226   5217#  5212?
  A15C SSEND                             6189   5743#  5248?  4621?  1879?
  A164 SSEND1                            5747#  5744?
  006A SSIND                             6198   6156   6021   6001$  5996$  5995$  5780$  5363   5252   4649   4631   2525$  2518$
                                         1898$  1886    329#
= 0010 SSIOFF                            6264   6262   6230   6131   6026   6000   5752   4946   4936   4651   4633     83#
  0069 SSNUM                             6200   6152   6057   6035   6014$  6007   5999$  5767$  5764   5749$  5373   5360   4622 
                                         2528$  2513$  1896$  1888    328#
  9E46 SSP10                             5248#  5238?
  9E4D SSP20                             5252#  5246?  5240?
  9E32 SSPOS                             6178   5831   5237#
  9E9F SSSCA1                            5308   5301#
  9EAC SSSCA2                            5309#  5303?
  9EAE SSSCA3                            5318   5311#
  9EBB SSSCA4                            5319#  5313?
  9E97 SSSCAL                            6069   5297#  4655?
  9E0B SSSET                             5748   5359   5211#
  0102 SSSGRP                            6459$  6451$  6422   6398$  6390$  6375   4997$  4849$   430#
  0109 SSSSEC                            6387   4994$  4847$   431#
  0110 SSSTRK                            6385   4991$  4845$   432#
  9ED3 SSTEST                            5348#  5245?  5237?
  BD8D ST00                             10044#  9993?
  9EF5 ST10                              5370#  5365?
  9EF9 ST20                              5373#  5361?
  9F09 ST30                              5384#  5375?
  9F0D ST40                              5387#  5382?
  9EE4 ST50                              5358#  5354?  5349?
  BDA2 STARTFMT                         10056# 10010?
  0090 STARTRK                          10100$ 10079  10075$ 10057   9159   9149$  8993   8933   8921   8618   8060$  3871   3005 
                                         1697    388#
  C104 START_CTL                        11095# 11066?
? 0000 START_MTR                        11099?
  BF5A STATQB                           10332#  9864?  9768?
  BEBF STATQY                           10225#  9633?
  BFB0 STBCTL                           10388#  9936?  9915?  9810?  9766?  9664?  9596?
  BFB7 STBCTR                           10393#  9351?
  B5CA STBM20                            8804#  8800?
  BFCE STBRET                           10410# 10400?
  B17C STDIR                             8188#  4543?
  9296 STL05                             3539   3520#
  92A0 STL10                             3558   3527#  3522?
  92AD STL20                             3560   3537#  3532?
  92B6 STL30                             3544#  3535?  3525?
  92BB STL40                             3548   3547#
  92CF STL50                             3562#  3554?  3551?
  92D6 STL60                             3565#  3542?
  9291 STLBUF                            3517#  3418?
  8FF2 STR1                              3060#  3057?
  8FEA STRDBL                            5904   3055#
  959D STROBE_CONTROLLER                10416  10396  10326  10298  10158  10149  10146  10134  10087  10085   9933   8051   8046 
                                         4022#  3992?  3963?  3890?  2926?  1713?  1706?
  8FD6 STRRD                             4805   3055   3046#
  026C STRSIZ                            1405   1402$  1392$  1358    529#
  9004 STRTIT                            3069#  3066?
? 0000 STRUCT                             720?
  0190 SVECTS                             435#
  007C SWITCH                           10507$ 10504  10240  10233  10222  10207  10138  10128   9925   9866   9860   9820$  9818 
                                         9802   9796   9769   9756   9717$  9715   9667   9660   9651   9599   9325   2045$   363#
                                       
  CB85 SYNTAXER                         12919# 11287?
= 0003 SYSDIRSEC                         8498   8061   4087   3030     76#
  B9EC SYSERR                            9453#  9339?
= 00C0 SYSIOB                            8035   3033     78#
= 0002 SYSIZ                            10034   8074   6820   2943     77#
= 0028 SYSTRACK                          9180   8067     75#
= 0067 SYSTS                             9205   9016   8410   6498#
  BD7C SZ00                             10034#  9981?
= 0040 T0                                8660   8650$  8634$  3566$  3562   3556   3544$  3517    301#
  829F T0V1                               984#   981?   978?
= 0041 T1                                8651$  8635$  6088   6046   6039$  5415   5413$  5289$  5288   4637   4629$   302#
= 0042 T2                                8652$  8636$  6043   6040$  5292$  4639   4630$   303#
= 0043 T3                                8653$  8637$  6056$  6034$  5320   5283   4652$  4634$   304#
= 0044 T4                                8654$  8638$  6064$  6037$  5310   5286   4627$  4623$   305#
  80A2 TAGCMD                             665#   610?
  AD5C TALK                              7517#
  80A7 TC25                               675    668#
  80AC TC30                              1737    671#   666?
  80B4 TC35                              4537    677#
  80BE TC40                               683#   680?
  80DC TC50                               696#   689?
  80F9 TC60                               711#   708?
  8100 TC70                               715#   712?
  8108 TC75                               718#   697?
  8114 TC80                               725#   721?
  0096 TCACHESIDE                       12883  12882$ 12872  12871$ 12640  12600  12448  11802  11143    397#
  0040 TEMP                              8944$  8926$  8899$  7881$  7857$  7774   7236$  5205$  5203$  5201$  5193$  5192   5188$
                                         5186$  5184$  5183$  5060   5056$  5051$  5044   5039$  4761   4740$  3796   3794$  3790$
                                         3766   3760$  3735$  3334$  3323$  3307$  3279   3276$  3210   3199$  2761   2759$  2751$
                                         2748   2746$  2738$  2602   2589$  2563   2559$  2558$  2397   2393$  2390$  2271   2266$
                                         2258   2246$  2244$  2243   2242$  2241   2230$  2229$  2228$  2190   2189$  2187$  2123 
                                         2119   2115$  2113$  2023$  2012   2010   2008$  2007   1995   1993   1981$  1979$  1552$
                                         1165   1162$  1161   1154$   993$   616    615$   613$   305    304    303    302    301 
                                          300#
  007A TEMPSA                            4257   4194   4168   4164$   361#
  B851 TESTLIMIT                         9209#  9112?  9100?
  9598 TEST_CONTROLLER                   4017#  3910?
  8E4D TGLBUF                            2822#  2794?  2771?
  4005 TIMA_H                            7819$   239#
  4004 TIMA_L                            7821$   238#
  4007 TIMB_H                             241#
  4006 TIMB_L                             240#
  950F TJ10                              3926#  3921?  3918?  3915?
  A831 TLERR                             6636#  6633?  6630?
  0078 TLKADR                            7948$  7294   7007$  7006   6999$   354#
  A828 TLKERR                            6632#  6621?
  0038 TMP                              12821$ 12814$ 12740$ 12644$ 12641$ 12543$ 12452$ 12449$ 12204$ 12113$ 12075  12074$ 11970$
                                        11967$ 11815  11711$ 11709$ 10532  10529$ 10520  10494$ 10172  10169  10165$ 10163  10154$
                                        10120$  9466   9463$  9428$  9420$  9400$  9393   9369$  9293$  7509   7505$  1225   1207 
                                         1204$   298#
  003F TMPJBN                            8857   8848$  8833$   299#
  8501 TN10                              1368   1365#
  8507 TN20                              1370#  1362?  1360?
  4009 TOD8_15                            244#
  4008 TODLSB                           11624  11622$   243#
  400A TODMSB                             245#
  C0D4 TOP                              11091  11062#
  004F TOS                               7928$  7251   6812   6609    310#
? 0000 TP1LST                            1490?
? 0000 TP2LST                            1487?
? 0000 TPLST                             4473?
= 00B2 TPREAD_DV                         9663    164#
= 00B4 TPWRT_DV                          9809    165#
  8517 TR10                              1387   1380#
  8525 TR20                              1389#  1383?
  004D TRACK                            10460  10424$ 10080$  9257   9225$  9179   9160$  9139   9011$  8991$  8941$  8936$  8932 
                                         8920$  8914   8913$  8907   8873$  8798   8769   8745   8683$  8617   8616$  8587$  8570$
                                         8552$  8419$  8401$  8397   8371   8368$  8341$  8333$  8318$  8180$  8171   6842$  6692 
                                         6674$  6565$  6443$  6386$  6295   6281   6251   6141$  6124   6117   5909   5900$  5889 
                                         5881   5522   5265$  5173$  5128$  5094$  5085   4990   4949   4942   4925   4835$  4807 
                                         4749$  4739$  4716$  4453   4434$  4346   4201$  4177$  4047   4009   3865   3860$  3745 
                                         3262   3236   3217$  3056   3050$  3026$  3008$  3000   2919$  2793$  2787$  2762$  2733 
                                         2443$  2434$  2300   2299$  1840$  1698$  1677   1674$  1664$  1655$  1644$  1622$  1282$
                                         1242$   646$   627$   308#
  BB66 TRANS_SW                          9700#  9695?
  BC71 TRANS_SW1                         9858#  9849?
  8508 TRCMBF                            1372#  1355?
= 00AA TREAD_DV                          9350    157#
  0270 TRKSS                             4992$  4984   4978   4926$  4844   4834   4415$  4127    533#
  C5AC TRKWRT_CTL                       12091# 11272?
= 00A2 TRKWRT_DV                        10421    153#
? 0000 TRK_IN_MEM                       11088?
  84EE TRNAME                            8492   4114   1934   1353#
  94B5 TSCHK                             9256   9240   9178   9128   8436   8362   3865#  2435?  1633?
  94A3 TSER1                             3878   3876   3872   3869   3866   3853#
  94A0 TSERR                             3852#  3848?  3835?  3832?
  8295 TST0V1                            4515    977#   938?
  AD15 TSTATN                           10467  10355   9851   9747   7939   7715   7684   7667   7655   7644   7635   7558   7552 
                                         7547   7537   7529   7460#  7382?  7095?
  9CF7 TSTC20                            5047   5039#
  9CFF TSTC30                            5069   5065   5061   5044#
  9D07 TSTC40                            5051#  5042?
  9CF5 TSTCHN                            5038#  1604?
  9CE4 TSTFLG                            5840   5637   5609   5577   5566   5443   5023#  4643?  4481?  1822?
  94F8 TSTJOB                            3910#  3903?
  9CE9 TSTWRT                            5516   5509   5027#  2768?
= 00AC TWRT_DV                            158#
  022D TYPE                              9249$  4897   4801   4476$  4379   4327   4279$  4274$  4269   4267$  4263   4243$  4147 
                                         4122   4096$  4052   3719$  1943$  1850$   835$   512#
  905F TYPFIL                            6636   5803   4730   4604   3629   3614   3601   3135#  3079?  2853?  2835?  2765?  1872?
                                         1855?  1825?  1810?  1778?
  0233 TYPFLG                            4214$  1074   1069    972$   836$   518#
? 0000 TYPLST                            1493?   965?
= 0007 TYPMSK                            9329   9123   4378   4326   4273   1942   1849   1616   1073    116#
  8B9A UBLKRD                            2344#
  8BA0 UBLKRD1                           2346#  2342?
  8BD7 UBLKWT                            2381#
  8BDD UBLKWT1                           2383#  2377?
? 0000 UBLOCK                            2069?  2067?
= 003F UNLSN                             7277    190#
= 005F UNTLK                             7285    191#
  89CB UNUSED                            2071#
  BF66 UPINST                           10339# 10262? 10178? 10110? 10094?  9959?  9811?  9767?  9665?  9632?  9597?
  89CC US10                              2072#  2037?
  B59D USE10                             8777#  8774?  8747?
  B5A0 USE20                             8778#  8771?
  B5B1 USE25                             8788#  8783?
  B5B3 USE30                             8789#  8779?  8757?
  BD5E USENEW                           10015#  9969?
  898F USER                              2035#
  89D2 USREXC                            2075#  2073?
  89C3 USRINT                            8011   2066#  2041?
  0033 USRJMP                            2084   2081   2070$  2068$   295#
= 0003 USRTYP                            6845    115#
  AA83 UTLBAD                            7105   7093   7014#  6996?  6993?  6966?
  A981 UTLD00                            6839#  6834?
  A994 UTLD10                            6892   6847#
  A9B6 UTLD20                            6864#  6856?
  A9BE UTLD30                            6880   6868#
  A9D3 UTLD35                            6879#  6876?
  A9E8 UTLD50                            6891#  6885?
  A956 UTLODR                            6818#  6809?
  C41C V1                               11756# 11740? 11724?
  C46F V2                               11825# 11812? 11799? 11786? 11772? 11756?
  C4A4 V3                               11868# 11852? 11838? 11825?
  C4E1 V4                               11918# 11899? 11884? 11868?
  C544 V5                               11991# 11959? 11945? 11918?
  C3F4 V6                               11724#
? 0000 VAL                               6592?
  01B0 VATNSRV                            452#
  019E VBLOCK                             443#
  01BA VCMDER2                           9575$  9573$  9561   9559   9550$  9548$  6920$  6918$   458#
  B274 VD10                              8344   8315#
  B286 VD15                              8352   8323#
  B29E VD17                              8338#  8331?
  B2A7 VD20                              8359   8356   8343#
  B2AC VD25                              8346#  8313?
  B2B8 VD26                              8354#
  B2C1 VD28                              8358#  8348?
  01A6 VDSKCPY                            447#
? 0000 VECTORS                           7930?
  B262 VERDIR                            8307#
  AA9A VERIF                             7029#  6989?
  01EB VERNUM                            8596   8502   8479   8033$  3843   2974   2968    492#
  01AE VERROR                            9571$  9569$  9557   9555   9546$  9544$  6924$  6922$   451#
  C53F VFIN                             11988# 11980?
  0190 VIDLE                              436#
  0198 VINTDRV                            440#
  0192 VIRQ                               437#
  01B6 VLCC                               455#
  01B4 VLISTEN                            454#
  019C VMEM                               442#
  B2C7 VMKBAM                            8361#  8342?  8337?  8319?
  94CB VNERR                             8482   3882#  3844?
  01AC VNEW                               450#
  0194 VNMI                               438#
  019A VPART                              441#
  01A2 VRECORD                            445#
  01A8 VRENAME                            448#
  01AA VSCRTCH                            449#
  01B2 VTALK                              453#
  01B8 VTRANS_TS                          456#
  9145 VUJADE                            3287#
  01A0 VUSER                              444#
  01A4 VUTLODR                            446#
  0196 VVERDIR                            439#
? 0000 WAIT_MTR                         11104?
  94ED WATJOB                           10417   6330   6298   6267   6174   5520   5513   5081   4970   4954   4840   4701   3903#
                                         3750?  3048?  2797?  2710?  1936?  1925?  1691?
  0035 WBAM                              9204$  9196$  9171   8983$  8982   8902$  8901   8860$  8763$  8739$  8725$  8699   8678$
                                         6604$   619$   582$   296#
? 0000 WDABORT                          12799? 11620?
? 0000 WDBUSY                           12841? 12700? 12508? 12394? 12317? 12169? 11714?
  6000 WDCMD                              255#
  6003 WDDAT                            12726  12528  12414  12338$ 12190$ 11985$ 11963$ 11949$ 11929$ 11903$ 11888$ 11872$ 11856$
                                        11842$ 11829$ 11816$ 11803$ 11790$ 11776$ 11760$ 11744$ 11728$ 11614  11606$   259#
  01E4 WDFORCEIRQ                       11599$   485#
  01E1 WDREADADDRESS                    11593$   479#
  01DF WDREADSECTOR                     12699  12507  12393  11589$   475#
  01E2 WDREADTRACK                      11595$   481#
  01DA WDRESTORE                        12840  11627$ 11579$   467#
  6002 WDSEC                            12771$ 12744$ 12743  12678$ 12574$ 12547$ 12546  12486$ 12369$ 12292$ 12235$ 12208$ 12207 
                                        12147$ 11611  11605$   258#
  01DB WDSEEK                           11628$ 11581$   469#
  6000 WDSTAT                           12711  12519  12405  12328  12180  11977  11956  11942  11915  11896  11881  11865  11849 
                                        11835  11822  11809  11796  11783  11769  11753  11737  11721    256#
  01DC WDSTEP                           11629$ 11583$   470#
  01DD WDSTEPIN                         11630$ 11585$   471#
  01DE WDSTEPOUT                        11631$ 11587$   473#
  6001 WDTRK                            12638$ 12446$ 12367$ 12290$ 12109$ 11789  11706$ 11608  11604$   257#
? 0000 WDUNBUSY                         12842? 11988?
  01E0 WDWRITESECTOR                    12316  12168  11591$   477#
  01E3 WDWRITETRACK                     11713  11597$   483#
  028C WLINDX                            4775   4708$  4351   4335$   539#
  BBF6 WNOCHNL                           9794   9787#
= 0040 WPIN                             12908    230#
  01FA WPSTAT                           10299$  8459$  2927$   499#
  0025 WPSW                             10255$  9793   9647   8140   8010$  3812$  3808   3038$  2964$  1315    269#
  A03A WR10                              5606   5569#
  A044 WR30                              5595   5576#
  A050 WR40                              5582#  5578?  5572?
  A05E WR45                              5589#  5585?
  A061 WR50                              5591#  5567?
  A06A WR60                              5599#  5592?
  CB88 WRONGFMT                         12941  12923#
  CB88 WRONGTRK                         12924# 12636? 12444? 12363? 12286? 12107?
  BEC8 WRSTAT                           10229# 10223?
  9118 WRT0                              4490   3259#  3255?
  9D8E WRTAB                             6266   5133#
  9002 WRTBUF                            4700   3749   3266   3068#
  9112 WRTBYT                            3254#  2857?
  9024 WRTC1                             3087#  3084?  3081?
  C600 WRTOLD_CTL                       12100# 11124?
  9D9A WRTOUT                            6329   6297   6115   6102   5505   5141#  5080?  4969?  1935?  1690?
  A033 WRTREL                            5565#  2861?
  C900 WRTSD_CTL                        12436# 11283? 11263?
= 0090 WRTSD_DV                          9765   6382   5262   5149   5141   5133   5031   4784   3970   3946   3898   3839   3709 
                                         3068    135#
  9DA6 WRTSS                             6173   5149#  4953?
  A581 WRTSSS                            6382#  6311?  4998?
  C9E1 WRTVER_CTL                       12612# 12263? 11271?
= 00A0 WRTVER_DV                          150#
= 0001 WTMODE                            4292   4281    109#
  B572 WUSED                             9258   9183   9030   8970   8755#  8694?  8690?  8688?  8686?  8563?  8559?  8557?  8555?
                                         8437?  8375?  8363?  2294?
  8C44 XBKOTST                           2438#  2376?  2339?
  AEE4 XIDLE                             7759#  7356?
  0081 XJOBRTN                          10444  10305$ 10303$ 10249$ 10246$  9923$  9920$  3955   3926    368#
? 0000 XMS                              12847? 11564? 11562?
  8B8E XUBLKRD                           2464   2339#
  8BD1 XUBLKWT                           2465   2376#
  0082 YREG                             12725  12722$ 12530  12526$ 12416  12412$ 12339  12335$ 12191  12187$ 11928  11925$   369#
                                       
  9EC3 ZERACC                            5324#  5299?
  8D38 ZERRES                            5298   2617#  2540?
= 0002 ZPVAR                             7223$  7221$  7219$  7217$  7215$  7213$  7211$  7209$  7207$  7204   7203   7200$  7193 
                                         7192$  7191   7190   7189$  7188   7187   7186$  7185$  7183$  7181   7180$  7178   7175 
                                         7174$  7172$  7168   7166$  7165$  7163$  7162$  7160$  7156$  7155   7152$  7151   7148$
                                         7146$  7144$  7143$  7139   7137   7135   7133   7131   7129   7127   7125   7123     80#
                                       
= 0002 _DRV_RDY                           212#

Memory used to store 242 local symbols: 6292. bytes.

Memory used to store 1563 permanent symbols: -27096. bytes.

Memory used for cross reference table: 59960. bytes.

 size  name                            parameters
   45. WDTEST                         

Memory used to store 1 macro definitions: 45. bytes.
